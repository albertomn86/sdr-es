<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Ajuste de frecuencia en recepción de satélites</title>
    <url>/ajuste-frecuencia-doppler-orbitron/</url>
    <content><![CDATA[<p>Cuando realizamos seguimiento de satélites nos encontramos con que la frecuencia en la que deberíamos recibir una señal no se ajusta con la que estamos recibiendo y además cambia durante el pase. Esto se debe al conocido como <strong>efecto Doppler</strong>.</p>
<p>El efecto Doppler, llamado así por el físico austriaco Christian Andreas Doppler, es el cambio de frecuencia asociado a la alta velocidad que presenta el satélite con respecto a una estación terrestre.</p>
<p>Usando Orbitron y el plugin DDETracker podemos hacer que SDR# realice la correción y el ajuste de la frecuencia de recepción de forma automática y en tiempo real. De esta forma evitaremos el tener que ajustarla manualmente y tendremos siempre la señal correctamente centrada.</p>
<span id="more"></span>

<h2 id="Correccion-automatica-de-la-frecuencia-con-Orbitron"><a href="#Correccion-automatica-de-la-frecuencia-con-Orbitron" class="headerlink" title="Corrección automática de la frecuencia con Orbitron"></a>Corrección automática de la frecuencia con Orbitron</h2><p>En el post anterior <a href="/seguimiento-satelites-orbitron/">“Seguimiento de satélites con Orbitron”</a> vimos como instalar y configurar este programa para realizar el seguimiento de satélites. Este programa también nos va a permitir corregir en tiempo real la frecuencia del satélite que estemos siguiendo, y además podremos enviar esta frecuencia a SDR# para que la ajuste de manera automática. De esta forma no tendremos que preocuparnos por ajustarla manualmente y tendremos siempre la señal perfectamente sintonizada.</p>
<p>El primer paso es indicarle a Orbitron la frecuencia del satélite para que pueda llevar a cabo el ajuste. Para ello seleccionamos el satélite para marcarlo como activo y vamos a la pestaña <em>Sat/Orbit info</em>.</p>
<p>Hacemos doble clic en el cuadro de texto de la derecha para que nos cargue la plantilla por defecto.</p>
<img src="/ajuste-frecuencia-doppler-orbitron/orbitron-plantilla.jpg" class="" title="Orbitron">

<p>Ahora introducimos la frecuencia en MHz en la etiqueta <strong>DNLINK</strong>.</p>
<img src="/ajuste-frecuencia-doppler-orbitron/orbitron-dnlink.jpg" class="" title="Introducir frecuencia en Orbitron">

<p>Los demás datos son opcionales, pero podemos completarlos para tener más información sobre el satélite.</p>
<h2 id="Instalacion-de-DDETracker"><a href="#Instalacion-de-DDETracker" class="headerlink" title="Instalación de DDETracker"></a>Instalación de DDETracker</h2><p>El siguiente paso es instalar un plugin en SDR# que nos permita cambiar la frecuencia de forma automática.<br>En este ejemplo vamos a usar el plugin <strong>DDETracker</strong> que podemos descargar desde el siguiente link:</p>
<p><a href="http://rtl-sdr.ru/uploads/download/ddetracker.zip"><center>Descargar DDE Tracker</center></a></p>
<p>Una vez descargado el archivo seguimos los siguientes pasos:</p>
<ol>
<li><p>Vamos a la carpeta de instalación de SDR# y dentro de la carpeta <strong>Plugins</strong> creamos una nueva de nombre <strong>DDETracker</strong>.</p>
</li>
<li><p>Abrimos el archivo descargado y extraemos los archivos que se muestran en la siguiente captura dentro de la carpeta que hemos creado en el paso anterior.</p>
 <img src="/ajuste-frecuencia-doppler-orbitron/dde-archivos.jpg" class="" title="Archivos de DDETracker"></li>
</ol>
<ol start="3">
<li><p>Añadimos las siguientes líneas al archivo de configuración de Orbitron <em><strong>Setup.cfg</strong></em>, que encontramos dentro de la carpeta <em>Config</em> en el directorio de instalación de Orbitron.<br> Debemos indicar la ruta completa en la que hemos colocado el archivo <em>SDRSharpDriverDDE.exe</em> en el paso anterior.</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Drivers]</span><br><span class="line">SDRSharp&#x3D;C:\SDR\SDRSharp\Plugins\DDETracker\SDRSharpDriverDDE.exe</span><br></pre></td></tr></table></figure>
 </br>
 <img src="/ajuste-frecuencia-doppler-orbitron/orbitron-config.jpg" class="" title="Orbitron">

<p> Por último, reiniciamos Orbitron para aplicar los cambios.</p>
</li>
</ol>
<p>Ahora que tenemos el plugin instalado, iniciamos SDR# y abrimos el plugin desde el menú.</p>
<img src="/ajuste-frecuencia-doppler-orbitron/sdrsharp-menu.jpg" class="" title="SDR# menú">

<p>Lo activamos haciendo clic en <em>Scheduler</em>.</p>
<img src="/ajuste-frecuencia-doppler-orbitron/dde-plugin.jpg" class="" title="DDETracker">


<h2 id="Conexion-con-DDETracker"><a href="#Conexion-con-DDETracker" class="headerlink" title="Conexión con DDETracker"></a>Conexión con DDETracker</h2><p>Ahora ya podemos decirle a Orbitron que mande los datos a SDR#. Para ello vamos a Orbitron y seleccionamos en Driver <em>“SDRSharp”</em> y hacemos clic en el botón de conexión:</p>
<img src="/ajuste-frecuencia-doppler-orbitron/orbitron-driver.jpg" class="" title="Orbitron">

<p>Ahora ya podemos ver que DDETracker recibe los datos del satélite que tenemos activo en Orbitron.</p>
<img src="/ajuste-frecuencia-doppler-orbitron/dde-active.jpg" class="" title="DDETracker activo">


<h2 id="Configurar-satelites-en-DDETracker"><a href="#Configurar-satelites-en-DDETracker" class="headerlink" title="Configurar satélites en DDETracker"></a>Configurar satélites en DDETracker</h2><p>Para que el plugin pueda iniciar el seguimiento, debemos indicarle algunos datos sobre el satélite en cuestión.<br>Para introducir los datos, hacemos clic en sobre el botón <strong>Config</strong> que aparece en el plugin y se abrirá una ventana para introducir los datos.</p>
<img src="/ajuste-frecuencia-doppler-orbitron/dde-config.jpg" class="" title="DDETracker config">


<p>Hacemos clic en <em>“Add new satellite”</em> para crear un nuevo satélite.<br>Lo primero es introducir el nombre. Este nombre debe coincidir exactamente con el nombre del satélite que aparece en el plugin.<br>Si el nombre es muy largo o contiene caracteres especiales, podremos usar el asterisco (*) para omitir ciertas partes.</p>
<p>Como podemos ver en la ventana tenemos dos bloques para introducir las acciones que SDR# debe realizar. En el bloque <strong>AOS</strong> (Acquisition of Signal) le diremos qué debe hacer cuando el satélite comience a verse sobre el horizonte en nuestra posición y en el bloque inferior <strong>LOS</strong> (Loss Of Signal) le indicamos que hará cuando termine el pase.</p>
<p>Estas acciones podemos escribirlas manualmente o seleccionarlas de la columna de la derecha e ir insertando con el botón “<strong>&lt;&lt;</strong>“ dónde corresponda.</p>
<p>En el caso de nuestro ejemplo haremos las siguientes acciones:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;USB&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;4800&gt;</span><br><span class="line">radio_center_frequency_Hz&lt;145935000&gt;</span><br><span class="line">radio_tracking_frequency_On</span><br></pre></td></tr></table></figure></p>
<p><strong>LOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_tracking_frequency_Off</span><br><span class="line">radio_Stop</span><br></pre></td></tr></table></figure></p>
</br>
<img src="/ajuste-frecuencia-doppler-orbitron/dde-configured.jpg" class="" title="DDETracker FUNCUBE">

<p>Con esto ya tendríamos los datos del satélite introducidos. Ahora cuando el satélite se acerque a nuestra posición, SDR# se iniciará para recibir la señal de forma automática y se detendrá cuando el satélite desaparezca por el horizonte.</p>
<img src="/ajuste-frecuencia-doppler-orbitron/sdr-sharp.jpg" class="" title="DDETracker activo">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Orbitron</tag>
      </tags>
  </entry>
  <entry>
    <title>Generar archivo TLE personalizado</title>
    <url>/generar-archivo-TLE/</url>
    <content><![CDATA[<p>Si realizamos habitualmente el seguimiento de satélites, uno de los pasos más importantes es tener actualizados nuestros archivos de <a href="https://en.wikipedia.org/wiki/Two-line_element_set">TLE</a>. En este artículo veremos cómo generar un archivo TLE que contenga solo los satélites que queramos y que podemos actualizar con un clic.</p>
<span id="more"></span>

<p>Para ello vamos a usar el programa <a href="https://github.com/albertomn86/TLE_Generator"><strong>TLE Generator</strong></a>. Este programa es un <em>script</em> que a partir de un listado de satélites descarga los datos TLE de los mismos de forma automática. Este <em>script</em> se puede ejecutar en cualquier sistema operativo si tenemos el intérprete de Python previamente instalado.<br>En este ejemplo vamos a usar un binario para Windows que no necesita tener el intérprete instalado y que podemos descargar desde el siguiente enlace:</p>
<p><a href="https://github.com/albertomn86/TLE_Generator/releases/download/v2.3/TLE_Generator.Windows.zip"><center>Descargar TLE Generator para Windows</center></a></p>
<p>Una vez descargado el archivo, extraemos su contenido:</p>
<img src="/generar-archivo-TLE/archivos.png" class="" width="200" title="Archivos">

<p>Ahora abrimos el archivo <strong><em>satellites.txt</em></strong> y editamos el listado de satélites con los que vayamos a añadir al archivo TLE.<br>Para añadir un nuevo satélite, simplemente necesitamos insertar en el archivo su identificador dado por el <a href="https://es.wikipedia.org/wiki/NORAD">NORAD</a>. Para obtener el identificador de cualquier satélite, podemos usar el buscador de la web de CelesTrack:</p>
<p><a href="https://www.celestrak.com/satcat/search.php"><center>CelesTrack Satellite Catalog</center></a></p>
<p>Si queremos quitar satélites bastaría con eliminar la linea o simplemente comentarla con el caracter ‘#’ al principio.</p>
<p>Una vez tenemos el listado de satélites, vamos a crear un archivo <em>batch</em> con la llamada al ejecutable con los parámetros ya establecidos, para que simplemente tengamos que hacer doble clic para generar nuestro archivo dónde queramos.</p>
<p>En este caso voy a generar un archivo con los TLE dentro de la carpeta de Orbitron. Para ello creamos un nuevo archivo de texto con la extensión <em>.bat</em> y el contenido siguiente:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tle_gen.exe -o C:\SDR\Portable\Orbitron\Tle\custom.txt</span><br></pre></td></tr></table></figure>

<img src="/generar-archivo-TLE/bat.png" class="" width="200" title="Archivo BAT">

<p>Ahora cada vez que queramos tener el archivo de TLE actualizado, simplemente ejecutamos este archivo antes de iniciar Orbitron.</p>
<img src="/generar-archivo-TLE/consola.png" class="" width="600" title="Terminal de Windows">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Orbitron</tag>
      </tags>
  </entry>
  <entry>
    <title>Identificación de estaciones de radiodifusión con CSVUserlistBrowser</title>
    <url>/identificacion-estaciones-csvuserlistbrowser/</url>
    <content><![CDATA[<p>En este artículo vamos a ver cómo instalar y configurar <a href="https://www.df8ry.de/htmlen/home/%F0%9F%8F%A1welcome.htm">CSVUserlistBrowser</a> para usarlo con SDR#. Este programa, desarrollado por Heinrich Emmerl (DF8RY), nos permite descargar y visualizar bases de datos de frecuencias de estaciones de radiodifusión de forma sencilla, y además nos permite sintonizar dichas frecuencias en SDR# simplemente haciendo clic.</p>
<span id="more"></span>

<h2 id="Instalacion-y-configuracion"><a href="#Instalacion-y-configuracion" class="headerlink" title="Instalación y configuración"></a>Instalación y configuración</h2><p>Los pasos para instalar y configurar CSVUserlistBrowser son los siguientes:</p>
<ol>
<li>Descargamos CSVUserlistBrowser desde el siguiente enlace:</li>
</ol>
<p><a href="https://www.df8ry.de/htmlen/csvub/CSVUserlistBrowser.zip"><center>https://www.df8ry.de/htmlen/csvub/CSVUserlistBrowser.zip</center></a></p>
<ol start="2">
<li>Extraemos el contenido del archivo ZIP y ejecutamos <strong><em>CSVUserlistBrowser.exe</em></strong>. En la ventana que aparece marcamos el programa con el que queremos comunicarnos (en nuestro caso SDR#) y hacemos clic en <strong>OK</strong>.</li>
</ol>
<img src="/identificacion-estaciones-csvuserlistbrowser/CSVUserlistBrowser-select.png" class="" title="CSVUserlistBrowser">

<ol start="3">
<li>El programa del paso anterior nos genera un nuevo ejecutable para cada programa que hemos seleccionado. En este caso nos habrá generado el nuevo ejecutable <strong><em>SDRSHARP-CSVUserlistBrowser.exe</em></strong>.</li>
</ol>
<img src="/identificacion-estaciones-csvuserlistbrowser/CSVUserlistBrowser-SDRSHARP.png" class="" width="900" title="CSVUserlistBrowser">

<ol start="4">
<li>Vamos ahora a introducir nuestras coordenadas para poder descargar las bases de datos de nuestra zona. Para ello hacemos clic en el menú <strong>Tools</strong> y en <strong>QTH manager</strong>. En esta ventana introducimos nuestras coordenadas. Para finalizar guardamos haciendo clic en <strong>Save details</strong> y cerramos en <strong>Close/Cancel</strong>.</li>
</ol>
<img src="/identificacion-estaciones-csvuserlistbrowser/CSVUserlistBrowser-QTH-Manager.png" class="" width="700" title="CSVUserlistBrowser">

<ol start="5">
<li><p>El siguiente paso es descargar las bases de datos de frecuencias. Para ello hacemos clic en el menú <strong>Web</strong> y en <strong>Downloader/Converter</strong>. En esta ventana tendremos que hacer clic en los botones de <strong>Download</strong> para descargar cada una de las bases de datos.</p>
<img src="/identificacion-estaciones-csvuserlistbrowser/CSVUserlistBrowser-Downloader.png" class="" title="CSVUserlistBrowser">
<p>Una vez descargadas, hacemos clic en <strong>Close</strong>.<br>Estas bases de datos se actualizan regularmente, por lo que tendremos que repetir la descarga para tener siempre los datos actualizados.<br>Las URLs de descarga también se actualizan. Podemos consultar las actuales en <a href="https://www.df8ry.de/htmlen/csvub/%F0%9F%91%B6firststeps.htm">df8ry.de</a>.</p>
</li>
<li><p>El último paso es cargar las bases de datos en el programa para poder usarlas. Para cargarlas hacemos clic en el menú <strong>File</strong>, <strong>Open CSV userlist</strong> y seleccionamos el archivo que queramos cargar.</p>
</li>
</ol>
<img src="/identificacion-estaciones-csvuserlistbrowser/CSVUserlistBrowser-cargada.png" class="" width="900" title="CSVUserlistBrowser">

<ol start="7">
<li>Para cargar otra lista, hacemos clic en el menú <strong>View list</strong> y seleccionamos una posición libre. Después repetimos el paso anterior para cargar la lista. Si queremos que al iniciar el programa se nos muestra una base de datos u otra, podemos indicarlo en el menú <strong>Autoload</strong>.</li>
</ol>
<h2 id="Conexion-con-SDR"><a href="#Conexion-con-SDR" class="headerlink" title="Conexión con SDR#"></a>Conexión con SDR#</h2><p>SDR# se comunica con CSVUserlistBrowser mediante un <em>plugin</em>. Este plugin viene en archivo ZIP que nos descargamos en el primer paso del apartado anterior.<br>Dentro del directorio extraído encontramos el directorio <strong><em>Plugins</em></strong>, y dentro de este tendremos un directorio que contiene el archivo DLL correspondiente a la versión de SDR# que estemos usando. Es importante elegir la versión correcta para que funcione.</p>
<p>Una vez tengamos clara la versión a instalar, procedemos a instalar el <em>plugin</em> en SDR# de la forma habitual:</p>
<ol>
<li><p>Copiar el archivo <strong><em>SDRSharp.DF8RYDatabridge.dll</em></strong> dentro del directorio de instalación de SDR#.</p>
</li>
<li><p>Insertamos la siguiente línea dentro del archivo <em><strong>Plugins.xml</strong></em> que encontraremos dentro del directorio de instalación de SDR#.</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">add</span> <span class="attr">key</span>=<span class="string">&quot;DF8RYDatabridge&quot;</span> <span class="attr">value</span>=<span class="string">&quot;SDRSharp.DF8RYDatabridge.DF8RYDatabridgePlugin,SDRSharp.DF8RYDatabridge&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li>
</ol>
<img src="/identificacion-estaciones-csvuserlistbrowser/sdr_sharp.png" class="" width="900" title="Plugin CSVUserlistBrowser">


<h2 id="Funcionamiento"><a href="#Funcionamiento" class="headerlink" title="Funcionamiento"></a>Funcionamiento</h2><p>Para poder controlar las frecuencias desde CSVUserlistBrowser, tenemos que marcar <strong>Enable RX1</strong> en el plugin de SDR#. Ahora cuando seleccionemos una frecuencia haciendo doble clic en CSVUserlistBrowser, se cambiará de forma automática en SDR#.</p>
<img src="/identificacion-estaciones-csvuserlistbrowser/sdr_sharp_2.png" class="" width="900" title="SDR# y CSVUserlistBrowser">
]]></content>
      <tags>
        <tag>HF</tag>
      </tags>
  </entry>
  <entry>
    <title>Construcción de antena QFH para satélites meteorológicos</title>
    <url>/construccion-antena-qfh-137/</url>
    <content><![CDATA[<p>En este artículo veremos como construir paso a paso una antena QFH para la recepción de satélites meteorológicos. Estos satélites, como ya hemos visto en artículos anteriores, envían imágenes en las frecuencias de 137 MHz a 138 MHz y por ello construiremos nuestra antena para que resuene en 137,5 MHz.</p>
<span id="more"></span>

<p>Para la construcción de esta antena me he basado tanto en la <a href="https://twitter.com/ea3ibc/status/1061292310783295488">antena fabricada por EA3IBC</a>, como en <a href="https://www.ea5wa.com/antenas/antena-qfh">la antena de EA5WA</a> que incorpora la varilla roscada y que facilita enormemente tanto el montaje como el ajuste de la misma.<br>Las medidas orientativas se han obtenido de la web de <a href="http://jcoppens.com/">John Coppens ON6JC/LW3HAZ</a> para la construcción de una antena con una relación diámetro/altura de 0,4.</p>
<h2 id="Materiales-necesarios"><a href="#Materiales-necesarios" class="headerlink" title="Materiales necesarios"></a>Materiales necesarios</h2><p>El listado de materiales que se muestra a continuación es el que he empleado para la construcción de esta antena. En mi caso he empleado  aluminio y acero. Esta combinación presenta el problema de la <a href="https://es.wikipedia.org/wiki/Corrosi%C3%B3n_galv%C3%A1nica">corrosión galvánica</a> que puede ser notable en zonas húmedas. Si vamos a instalar la antena a la intemperie en una zona húmeda, lo ideal es evitar la combinación de estos materiales si queremos que nuestra antena nos dure bastante tiempo. Podemos optar en ese caso por construirla entera de aluminio como la antena de EA3IBC, o bien usar cinta perforada de acero en lugar de la pletina de aluminio y hacerla entera de acero.<br>Indicar también que si usamos otros componentes metálicos muy distintos tanto en diámetro como en el tipo de material, el ajuste de la antena podría no corresponder con el obtenido siguiendo esta guía.</p>
<table>
<thead>
<tr>
<th align="right">Cantidad (uds.)</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="right">1,5 m</td>
<td>Tubo de PVC Ø 40 mm</td>
</tr>
<tr>
<td align="right">1</td>
<td>Tapón para tubo de PVC Ø 40 mm</td>
</tr>
<tr>
<td align="right">2</td>
<td>Varilla roscada acero Ø 5 mm</td>
</tr>
<tr>
<td align="right">4</td>
<td>Pletina aluminio 2 mm x 10 mm</td>
</tr>
<tr>
<td align="right">32</td>
<td>Tuerca Ø 5 mm</td>
</tr>
<tr>
<td align="right">28</td>
<td>Arandela Ø 5 mm</td>
</tr>
<tr>
<td align="right">20 cm</td>
<td>Cable de cobre</td>
</tr>
<tr>
<td align="right">4</td>
<td>Terminal faston redondo Ø 5 mm</td>
</tr>
<tr>
<td align="right">-</td>
<td>Cable coaxial 50Ω</td>
</tr>
</tbody></table>
<img src="/construccion-antena-qfh-137/materiales.jpg" class="" width="800" title="Materiales">

<h2 id="Construccion"><a href="#Construccion" class="headerlink" title="Construcción"></a>Construcción</h2><p>Empezamos cortando el tubo de PVC a la medida que queramos. En mi caso voy a usar el propio tubo como parte del mástil de colocación de la antena, por lo que voy a usar una longitud total de 1,5 metros. Si lo preferimos, podemos dejar el tubo más largo o más corto según nos interese.</p>
<p>Una vez cortado, vamos a hacer los agujeros por los que pasaremos las varillas posteriormente.<br>Para los agujeros superiores podemos ayudarnos de la plantilla que se genera en <a href="http://jcoppens.com/ant/qfh/calc.en.php">la web de John Coppens</a> en el apartado de <em>“Generate a drilling template”</em>, indicando el diámetro del tubo (40 mm) y el diámetro del soporte horizontal (5 mm).<br>Le damos primeramente a <em>Calculate</em> en el apartado superior de <em>“Input data”</em> y después a <em>Generate</em>. Esto nos crea un PDF que podemos imprimir y usar para marcar los agujeros y que queden centrados. Recordar que <strong>solo vamos a utilizar esta plantilla para marcar la distribución de los agujeros superiores en el perímetro del tubo y no debemos hacer caso a las medidas que indica</strong>.</p>
<img src="/construccion-antena-qfh-137/plantilla.jpg" class="" title="Plantilla">

<p>Las medidas (<strong>en milímetros</strong>) que usaremos son las siguientes (las dimensiones no están a escala):</p>
<img src="/construccion-antena-qfh-137/medidas_tubo.png" class="" title="Medidas tubo">


<p>El siguiente paso será cortar y taladrar las pletinas de aluminio. Cortaremos dos pletinas por cada longitud usando el siguiente esquema:</p>
<img src="/construccion-antena-qfh-137/medidas_pletinas.png" class="" title="Medidas pletinas">

<p>Por último, cortamos las varillas roscadas para obtener las siguientes piezas:</p>
<table>
<thead>
<tr>
<th align="center">Medidas (en mm)</th>
<th>Descripción</th>
</tr>
</thead>
<tbody><tr>
<td align="center">300</td>
<td>Varilla inferior para <em>loop</em> largo.</td>
</tr>
<tr>
<td align="center">290</td>
<td>Varilla inferior para <em>loop</em> corto.</td>
</tr>
<tr>
<td align="center">155</td>
<td>(2 unidades) Varilla superior para <em>loop</em> largo.</td>
</tr>
<tr>
<td align="center">150</td>
<td>(2 unidades) Varilla superior para <em>loop</em> corto.</td>
</tr>
</tbody></table>
<img src="/construccion-antena-qfh-137/piezas.jpg" class="" width="900" title="Piezas cortadas">

<h3 id="Montaje"><a href="#Montaje" class="headerlink" title="Montaje"></a>Montaje</h3><p>Una vez tenemos las piezas preparadas, comenzamos el proceso de montaje empezando por las varillas roscadas.</p>
<img src="/construccion-antena-qfh-137/antena_varillas.jpg" class="" width="400" title="Antena con varillas colocadas">

<p>El siguiente paso es colocar las pletinas, pero primero tendremos que darles la forma. La manera más sencilla de hacerlo es primero hacerles el arco y posteriormente hacerles el giro. Es conveniente dejarlas bien dobladas antes de colocarlas para que no apliquen tensión a las varillas.</p>
<img src="/construccion-antena-qfh-137/antena_pletinas.jpg" class="" width="400" title="Antena con pletinas colocadas">

<p>A continuación vamos a colocar el cable coaxial. La longitud del cable será la que estimemos necesaria y el tipo de cable podemos usar cualquiera. Es recomendable usar un cable no muy grueso y de bajas pérdidas. En mi caso he usado un cable <em>Aircell-5</em>.</p>
<p>Hacemos un agujero del mismo diámetro del cable en la parte superior del tubo por debajo de las varillas y pasamos el cable coaxial. Es recomendable que pasemos bastante cable para poder trabajar con comodidad.<br>Ahora necesitamos sacar dos conexiones desde el vivo del coaxial y otras dos desde la malla. Para ello usamos los terminales faston.</p>
<img src="/construccion-antena-qfh-137/conectores.jpg" class="" width="600" title="Conectores">
<img src="/construccion-antena-qfh-137/conexiones.jpg" class="" width="600" title="Conexiones">

<p>Ahora insertamos los terminales en las varillas conforme el siguiente esquema:</p>
<img src="/construccion-antena-qfh-137/conexiones_qfh.png" class="" width="400" title="Vista superior de la antena">

<p>Siendo A y C los lados que conforman el <em>loop</em> corto, y los lados B y D los que forman el <em>loop</em> largo, conectaremos los terminales con el vivo del coaxial a las varillas A y B y los terminales con la malla a las varillas C y D.</p>
<img src="/construccion-antena-qfh-137/conexiones_interior.jpg" class="" width="500" title="Conexiones">

<p>Una vez conectados, ajustamos el cable que queda dentro del tubo con cuidado y le damos 4 vueltas para hacer una <a href="https://es.wikipedia.org/wiki/Bobina_de_choque">bobina choque</a>. Aquí podemos hacer otro agujero y pasar el resto del cable por dentro de la antena, o bien podemos dejarlo por fuera.</p>
<img src="/construccion-antena-qfh-137/choque.jpg" class="" width="400" title="Choque cable exterior">
<img src="/construccion-antena-qfh-137/choque2.jpg" class="" width="400" title="Choque cable interior">

<p>Por último, colocamos el tapón al tubo y ponemos el conector que queramos al cable y ya tenemos lista nuestra antena a falta de ajustarla a la frecuencia exacta.</p>
<h2 id="Ajuste-de-la-antena"><a href="#Ajuste-de-la-antena" class="headerlink" title="Ajuste de la antena"></a>Ajuste de la antena</h2><p>Para finalizar la construcción de nuestra antena, vamos a medirla usando un analizador de antenas <strong>NanoVNA</strong>. Si hemos seguido los pasos de esta guía y hemos usado las medidas indicadas, la antena debe resonar sobre los 135 MHz ya que las medidas de las varillas son un poco más largas para poder colocar las tuercas con facilidad. Para ajustar la antena a la frecuencia exacta debemos ajustar la distancia entre las pletinas de aluminio de la siguiente manera:</p>
<ul>
<li>Para el <em>loop</em> largo <strong>282 mm</strong>.</li>
<li>Para el <em>loop</em> corto <strong>268 mm</strong>.</li>
</ul>
<p>Una vez ajustada, nos dará unos resultados similares a los siguientes:</p>
<img src="/construccion-antena-qfh-137/nanovna.jpg" class="" width="600" title="NanoVNA">

<h2 id="Instalacion"><a href="#Instalacion" class="headerlink" title="Instalación"></a>Instalación</h2><p>Para un mejor funcionamiento colocaremos nuestra antena conforme el siguiente esquema:</p>
<img src="/construccion-antena-qfh-137/orientacion.png" class="" width="300" title="Orientación de la antena">

<p>Orientaremos los lados conectados a la malla (D y C) hacia el norte y los lados conectados al vivo (A y B) hacia el sur.</p>
<img src="/construccion-antena-qfh-137/colocada.jpg" class="" width="500" title="Antena instalada">
]]></content>
      <tags>
        <tag>Antenas</tag>
        <tag>QFH</tag>
        <tag>Satélites meteorológicos</tag>
        <tag>NOAA</tag>
      </tags>
  </entry>
  <entry>
    <title>Elección del dispositivo SDR</title>
    <url>/eleccion-sdr/</url>
    <content><![CDATA[<p>Existen actualmente en el mercado distintos tipos de dispositivos SDR con determinadas características y prestaciones, y por supuesto con distinto rango de precios. Desde los dispositivos de unos pocos euros, hasta los dispositivos de varios cientos de euros, todos nos pueden servir para recibir señales de radio.<br>La finalidad este artículo es orientarnos para escoger el dispositivo que más se ajuste a nuestras necesidades y casos de uso. Para ello se han seleccionado algunos de los dispositivos más conocidos y que habitualmente se recomiendan, y se ha elaborado una breve descripción de cada uno de ellos con algunas de sus características más reseñables.</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th>Dispositivo</th>
<th align="center">Sintonizador</th>
<th align="right">Ancho de Banda</th>
<th>Rango frecuencias</th>
<th align="center">Bias Tee</th>
<th align="right">Precio</th>
</tr>
</thead>
<tbody><tr>
<td><a href="/eleccion-sdr/#Modelos-genericos">Modelos genéricos</a></td>
<td align="center">FC0012</td>
<td align="right">2.4 MHz</td>
<td>22 MHz – 948,6 MHz</td>
<td align="center">No</td>
<td align="right">~12€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Modelos-genericos">Modelos genéricos</a></td>
<td align="center">R820T/2</td>
<td align="right">2.4 MHz</td>
<td>24 MHz – 1700 MHz</td>
<td align="center">No</td>
<td align="right">~15€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#RTL-SDR-Blog-V3">RTL-SDR Blog V3</a></td>
<td align="center">R820T2</td>
<td align="right">2.4 MHz</td>
<td>500 kHz – 1766 MHz</td>
<td align="center">Sí</td>
<td align="right">~35€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Nooelec-NESDR-SMArt-v4">Nooelec NESDR SMArt v4</a></td>
<td align="center">R820T2</td>
<td align="right">2.4 MHz</td>
<td>25 MHz - 1750 MHz</td>
<td align="center">No</td>
<td align="right">~37€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Nooelec-NESDR-SMArTee-v2">Nooelec NESDR SMArTee v2</a></td>
<td align="center">R820T2</td>
<td align="right">2.4 MHz</td>
<td>25 MHz - 1750 MHz</td>
<td align="center">Sí</td>
<td align="right">~37€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Nooelec-NESDR-SMArt-XTR">Nooelec NESDR SMArt XTR</a></td>
<td align="center">E4000</td>
<td align="right">2.4 MHz</td>
<td>65 MHz - 2300 MHz</td>
<td align="center">No</td>
<td align="right">~45€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Nooelec-NESDR-SMArTee-XTR">Nooelec NESDR SMArTee XTR</a></td>
<td align="center">E4000</td>
<td align="right">2.4 MHz</td>
<td>65 MHz - 2300 MHz</td>
<td align="center">Sí</td>
<td align="right">~47€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Nooelec-NESDR-Nano-3">Nooelec NESDR Nano 3</a></td>
<td align="center">R820T2</td>
<td align="right">2.4 MHz</td>
<td>25 MHz - 1700 MHz</td>
<td align="center">No</td>
<td align="right">~30€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Airspy-Mini">Airspy Mini</a></td>
<td align="center">R820T2</td>
<td align="right">6 MHz</td>
<td>24 MHz - 1700 MHz</td>
<td align="center">Sí</td>
<td align="right">~140€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Airspy-R2">Airspy R2</a></td>
<td align="center">R820T2</td>
<td align="right">10 MHz</td>
<td>24 MHz - 1700 MHz</td>
<td align="center">Sí</td>
<td align="right">~235€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Airspy-HF-Discovery">Airspy HF+ Discovery</a></td>
<td align="center">-</td>
<td align="right">610 kHz</td>
<td>0.5 kHz - 31 MHz, 60 - 260 MHz</td>
<td align="center">No</td>
<td align="right">~210€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#Airspy-HF-Dual-Port">Airspy HF+ Dual Port</a></td>
<td align="center">-</td>
<td align="right">610 kHz</td>
<td>9 kHz - 31 MHz, 60 - 260 MHz</td>
<td align="center">No</td>
<td align="right">~240€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#SDRplay-RSP1A">SDRplay RSP1A</a></td>
<td align="center">-</td>
<td align="right">10 MHz</td>
<td>1 kHz - 2000 MHz</td>
<td align="center">Sí</td>
<td align="right">~122€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#SDRplay-RSPdx">SDRplay RSPdx</a></td>
<td align="center">-</td>
<td align="right">10 MHz</td>
<td>1 kHz - 2000 MHz</td>
<td align="center">Sí</td>
<td align="right">~228€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#SDRplay-RSPduo">SDRplay RSPduo</a></td>
<td align="center">-</td>
<td align="right">10 MHz</td>
<td>1 kHz - 2000 MHz</td>
<td align="center">Sí</td>
<td align="right">~286€</td>
</tr>
<tr>
<td><a href="/eleccion-sdr/#KiwiSDR">KiwiSDR</a></td>
<td align="center">-</td>
<td align="right">32 MHz</td>
<td>10 KHz - 30 MHz</td>
<td align="center">No</td>
<td align="right">~330€</td>
</tr>
</tbody></table>
<h2 id="Modelos-genericos"><a href="#Modelos-genericos" class="headerlink" title="Modelos genéricos"></a>Modelos genéricos</h2><img src="/eleccion-sdr/SDR-generico.jpg" class="" width="300" title="RTL-SDR genérico">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 2,4 MHz.</li>
<li><strong>ADC:</strong> RTL2832U 8-bits.</li>
<li><strong>Sintonizador:</strong> FC0012 / R820T2</li>
<li><strong>Rango de frecuencias:</strong><br>FC0012: 22 MHz – 948,6 MHz.<br>R820T2: 25 MHz - 1.700 MHz (rendimiento pobre por encima de 1.000 MHz).</li>
<li><strong>Bias-Tee:</strong> No.</li>
<li><strong>TCXO:</strong> No.</li>
<li><strong>Conector:</strong> MCX hembra.</li>
<li>Disponibles en eBay, AliExpress, Amazon.</li>
</ul>
<h2 id="RTL-SDR-Blog-V3"><a href="#RTL-SDR-Blog-V3" class="headerlink" title="RTL-SDR Blog V3"></a>RTL-SDR Blog V3</h2><img src="/eleccion-sdr/rtlsdrblog.jpg" class="" width="400" title="RTL-SDR Blog V3">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 2,4 MHz.</li>
<li><strong>ADC:</strong> RTL2832U 8-bits.</li>
<li><strong>Sintonizador:</strong> R820T2.</li>
<li><strong>Rango de frecuencias:</strong> 500 kHz – 1.766 MHz (500 kHz – 24 MHz en modo <em>Direct Sampling</em>).</li>
<li><strong>Bias-Tee:</strong> Sí, activación por software (4,5V 180mA).</li>
<li><strong>TCXO:</strong> 1 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en eBay <a href="https://www.ebay.com/str/rtlsdrblog">(tienda oficial)</a>, AliExpress <a href="https://es.aliexpress.com/store/4523039">(tienda oficial)</a>, RTL-SDR.com y Astroradio.</li>
<li>Más información: <a href="https://www.rtl-sdr.com/wp-content/uploads/2018/02/RTL-SDR-Blog-V3-Datasheet.pdf">Datasheet (PDF)</a>.</li>
</ul>
<h2 id="Nooelec-NESDR-SMArt-v4"><a href="#Nooelec-NESDR-SMArt-v4" class="headerlink" title="Nooelec NESDR SMArt v4"></a>Nooelec NESDR SMArt v4</h2><img src="/eleccion-sdr/smartv4.jpg" class="" width="500" title="Nooelec NESDR SMArt v4">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 2,4 MHz.</li>
<li><strong>ADC:</strong> RTL2832U 8-bits.</li>
<li><strong>Sintonizador:</strong> R820T2.</li>
<li><strong>Rango de frecuencias:</strong> 25 MHz - 1.750 MHz.</li>
<li><strong>Bias-Tee:</strong> No.</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en nooelec.com y Amazon España.</li>
<li>Más información: <a href="https://www.nooelec.com/store/sdr/sdr-receivers/nesdr-smart-sdr.html">Nooelec</a>.</li>
</ul>
<h2 id="Nooelec-NESDR-SMArTee-v2"><a href="#Nooelec-NESDR-SMArTee-v2" class="headerlink" title="Nooelec NESDR SMArTee v2"></a>Nooelec NESDR SMArTee v2</h2><img src="/eleccion-sdr/smarteev2.jpg" class="" width="500" title="Nooelec NESDR SMArTee v2">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 2,4 MHz.</li>
<li><strong>ADC:</strong> RTL2832U 8-bits.</li>
<li><strong>Sintonizador:</strong> R820T2.</li>
<li><strong>Rango de frecuencias:</strong> 25 MHz - 1.750 MHz.</li>
<li><strong>Bias-Tee:</strong> Sí, siempre activo (4,5V 250mA).</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en nooelec.com y Amazon España.</li>
<li>Más información: <a href="https://www.nooelec.com/store/sdr/sdr-receivers/nesdr-smartee-sdr.html">Nooelec</a>.</li>
</ul>
<h2 id="Nooelec-NESDR-SMArt-XTR"><a href="#Nooelec-NESDR-SMArt-XTR" class="headerlink" title="Nooelec NESDR SMArt XTR"></a>Nooelec NESDR SMArt XTR</h2><img src="/eleccion-sdr/smartxtr.jpg" class="" width="450" title="Nooelec NESDR SMArt XTR">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 2,4 MHz.</li>
<li><strong>ADC:</strong> RTL2832U 8-bits.</li>
<li><strong>Sintonizador:</strong> E4000.</li>
<li><strong>Rango de frecuencias:</strong> 65 MHz - 2.300 MHz. No recibe en un pequeño intervalo sobre los 1.100 MHz.</li>
<li><strong>Bias-Tee:</strong> No.</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en nooelec.com y Amazon España.</li>
<li>Más información: <a href="https://www.nooelec.com/store/sdr/sdr-receivers/nesdr-smart-xtr-sdr.html">Nooelec</a>.</li>
</ul>
<h2 id="Nooelec-NESDR-SMArTee-XTR"><a href="#Nooelec-NESDR-SMArTee-XTR" class="headerlink" title="Nooelec NESDR SMArTee XTR"></a>Nooelec NESDR SMArTee XTR</h2><img src="/eleccion-sdr/smarteextr.jpg" class="" width="500" title="Nooelec NESDR SMArTee XTR">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 2,4 MHz.</li>
<li><strong>ADC:</strong> RTL2832U 8-bits.</li>
<li><strong>Sintonizador:</strong> E4000.</li>
<li><strong>Rango de frecuencias:</strong> 65 MHz - 2.300 MHz. No recibe en un pequeño intervalo sobre los 1.100 MHz.</li>
<li><strong>Bias-Tee:</strong> Sí, siempre activo (3,3V 100mA).</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en nooelec.com y Amazon España.</li>
<li>Más información: <a href="https://www.nooelec.com/store/sdr/sdr-receivers/nesdr-smartee-xtr-sdr.html">Nooelec</a>.</li>
</ul>
<h2 id="Nooelec-NESDR-Nano-3"><a href="#Nooelec-NESDR-Nano-3" class="headerlink" title="Nooelec NESDR Nano 3"></a>Nooelec NESDR Nano 3</h2><img src="/eleccion-sdr/nano3.jpg" class="" width="200" title="Nooelec NESDR Nano 3">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 2,4 MHz.</li>
<li><strong>ADC:</strong> RTL2832U 8-bits.</li>
<li><strong>Sintonizador:</strong> R820T2.</li>
<li><strong>Rango de frecuencias:</strong> 25 MHz - 1.750 MHz.</li>
<li><strong>Bias-Tee:</strong> No.</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> MCX hembra. Incluye adaptador a SMA hembra.</li>
<li>Disponible en nooelec.com y Amazon España.</li>
<li>Más información: <a href="https://www.nooelec.com/store/sdr/sdr-receivers/nesdr-nano-three.html">Nooelec</a>.</li>
</ul>
<h2 id="Airspy-Mini"><a href="#Airspy-Mini" class="headerlink" title="Airspy Mini"></a>Airspy Mini</h2><img src="/eleccion-sdr/airspymini.jpg" class="" width="400" title="Airspy Mini">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 6 MHz.</li>
<li><strong>ADC:</strong> 12-bit (16-bit en <em>Oversampling Mode</em>).</li>
<li><strong>Sintonizador:</strong> R820T2.</li>
<li><strong>Rango de frecuencias:</strong> 24 MHz - 1.700 MHz.</li>
<li><strong>Bias-Tee:</strong> Sí, activación por software (4,5V).</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en WiMo.</li>
<li>Más información: <a href="https://airspy.com/airspy-mini/">Airspy</a>.</li>
</ul>
<h2 id="Airspy-R2"><a href="#Airspy-R2" class="headerlink" title="Airspy R2"></a>Airspy R2</h2><img src="/eleccion-sdr/airspyr2.jpg" class="" width="350" title="Airspy R2">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 10 MHz.</li>
<li><strong>ADC:</strong> 12-bit (16-bit en <em>Oversampling Mode</em>).</li>
<li><strong>Sintonizador:</strong> R820T2.</li>
<li><strong>Rango de frecuencias:</strong> 24 MHz - 1.700 MHz.</li>
<li><strong>Bias-Tee:</strong> Sí, activación por software (4,5V).</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en WiMo.</li>
<li>Más información: <a href="https://airspy.com/airspy-r2/">Airspy</a>.</li>
</ul>
<h2 id="Airspy-HF-Discovery"><a href="#Airspy-HF-Discovery" class="headerlink" title="Airspy HF+ Discovery"></a>Airspy HF+ Discovery</h2><img src="/eleccion-sdr/hfplusdiscovery.jpg" class="" width="400" title="Airspy HF+ Discovery">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 912 kHz.</li>
<li><strong>ADC:</strong> 18-bit DDC.</li>
<li><strong>Rango de frecuencias:</strong> 0,5 kHz - 31 MHz (HF) y 60 - 260 MHz (VHF).</li>
<li><strong>Bias-Tee:</strong> No.</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en Astroradio y WiMo.</li>
<li>Más información: <a href="https://airspy.com/airspy-hf-discovery">Airspy</a>.</li>
</ul>
<h2 id="Airspy-HF-Dual-Port"><a href="#Airspy-HF-Dual-Port" class="headerlink" title="Airspy HF+ Dual Port"></a>Airspy HF+ Dual Port</h2><img src="/eleccion-sdr/hfplusdual.jpg" class="" title="Airspy HF+ Dual Port">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 912 kHz.</li>
<li><strong>ADC:</strong> 18-bit DDC.</li>
<li><strong>Rango de frecuencias:</strong> 9 kHz - 31 MHz (HF) y 60 - 260 MHz (VHF).</li>
<li><strong>Bias-Tee:</strong> No.</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> 2 x SMA hembra.</li>
<li>Disponible en Astroradio y WiMo.</li>
<li>Más información: <a href="https://airspy.com/airspy-hf-plus">Airspy</a>.</li>
</ul>
<h2 id="SDRplay-RSP1A"><a href="#SDRplay-RSP1A" class="headerlink" title="SDRplay RSP1A"></a>SDRplay RSP1A</h2><img src="/eleccion-sdr/RSP1A.jpg" class="" width="550" title="SDRplay RSP1A">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 10 MHz.</li>
<li><strong>ADC:</strong> 14-bit.</li>
<li><strong>Rango de frecuencias:</strong> 1 kHz - 2.000 MHz.</li>
<li><strong>Bias-Tee:</strong> Sí, activación por software (4,7V 100mA).</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> SMA hembra.</li>
<li>Disponible en sdrplay.com y Astroradio.</li>
<li>Más información: <a href="https://www.sdrplay.com/docs/RSP1Adatasheetv1.9.pdf">Datasheet (PDF)</a>, <a href="https://www.sdrplay.com/wp-content/uploads/2018/01/RSP1A-Technical-Information-R1P1.pdf">Información técnica (PDF)</a>.</li>
</ul>
<h2 id="SDRplay-RSPdx"><a href="#SDRplay-RSPdx" class="headerlink" title="SDRplay RSPdx"></a>SDRplay RSPdx</h2><img src="/eleccion-sdr/RSPdx.jpg" class="" width="500" title="SDRplay RSPdx">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 10 MHz.</li>
<li><strong>ADC:</strong> 14-bit.</li>
<li><strong>Rango de frecuencias:</strong> 1 kHz - 2.000 MHz.</li>
<li><strong>Bias-Tee:</strong> Sí, activación por software (4,7V 100mA).</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> 2 x SMA hembra, 1 x BNC (hasta 200 MHz). Seleccionables por software.</li>
<li>Disponible en sdrplay.com y Astroradio.</li>
<li>Más información: <a href="https://www.sdrplay.com/resources/RSPdxDatasheet.pdf">Datasheet (PDF)</a>.</li>
</ul>
<h2 id="SDRplay-RSPduo"><a href="#SDRplay-RSPduo" class="headerlink" title="SDRplay RSPduo"></a>SDRplay RSPduo</h2><img src="/eleccion-sdr/RSPduo.jpg" class="" width="550" title="SDRplay RSPduo">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 10 MHz (modo <em>single tuner</em>) o 2 fragmentos de hasta 2MHz (modo <em>dual tuner</em>).</li>
<li><strong>ADC:</strong> 14-bit.</li>
<li><strong>Rango de frecuencias:</strong> 1 kHz - 2.000 MHz.</li>
<li><strong>Bias-Tee:</strong> Sí, activación por software (4,7V 100mA).</li>
<li><strong>TCXO:</strong> 0,5 PPM.</li>
<li><strong>Conector:</strong> 2 x SMA hembra, 1 x Conector alta impedancia (1kHz - 30MHz) . Seleccionables por software.</li>
<li>Disponible en sdrplay.com y Astroradio.</li>
<li>Más información: <a href="https://www.sdrplay.com/wp-content/uploads/2018/05/RSPduoDatasheetV0.6.pdf">Datasheet (PDF)</a>, <a href="https://www.sdrplay.com/wp-content/uploads/2018/06/RSPDuo-Technical-Information-R1P1.pdf">Información técnica (PDF)</a>.</li>
</ul>
<h2 id="KiwiSDR"><a href="#KiwiSDR" class="headerlink" title="KiwiSDR"></a>KiwiSDR</h2><img src="/eleccion-sdr/kiwisdr.jpg" class="" width="400" title="KiwiSDR">

<ul>
<li><strong>Ancho de banda:</strong> Hasta 32 MHz.</li>
<li><strong>Rango de frecuencias:</strong> 10 KHz - 30 MHz.</li>
<li><strong>Bias-Tee:</strong> Sí, para antena GPS (3,3V).</li>
<li><strong>Conector:</strong> 2 x SMA hembra, antena RX + antena GPS.</li>
<li>WebSDR con interfaz web OpenWebSDR.</li>
<li>Disponible en Amazon y WiMo. Se vende en un kit compuesto de receptor KiwiSDR, BeagleBone, antena GPS y tarjeta MicroSD con sistema operativo.</li>
<li>Más información: <a href="http://kiwisdr.com/">kiwisdr.com</a>.</li>
</ul>
]]></content>
      <tags>
        <tag>RTL-SDR</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalación de SDRPlay RSP2 en Debian Testing</title>
    <url>/instalacion-SDRPlay-RSP2-debian-testing/</url>
    <content><![CDATA[<p>Esto son solo notas tomadas al vuelo mientras he instalado y probado la versión citada del driver/API de SDRPlay RSP2 en Debian Testing x64. Han sido realizadas en una máquina con el SO recién instalado y los paquetes <em>Soapy</em> mínimamente necesarios, aunque según el caso y la instalación pudieran ser necesarios otros más para cumplir dependencias.</p>
<span id="more"></span>

<p>Todos los paquetes Soapy para la mayoría de dispositivos SDR están incluidos en la distribución, a excepción de SDRPlay que hay que compilarlo según sus instrucciones. Previamente hay que instalar el paquete <strong>libsoapysdr-dev</strong>.<br>Si no se quiere, no es necesario instalar los módulos Soapy para el resto de dispositivos si no se van a usar.</p>
<p>Primeramente, hay que descargar y ejecutar el driver/API (la más actual en este momento es la API 3.07) desde la web de sdrplay.com (Linux x86, distribución Other).<br>Se descarga un archivo <strong>.run</strong> al que hay que darle permisos con el comando <strong>chmod</strong> y se ejecuta. No es necesario hacerlo con <em>sudo</em> en un primer momento ya que tras la lectura y aprobación de la licencia, preguntará la contraseña si se da el caso.</p>
<p>Tras la instalación, indica que para iniciar o parar el servicio de SDRPlay se hace con los respectivos comandos:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl start sdrplay</span><br><span class="line">sudo systemctl stop sdrplay</span><br></pre></td></tr></table></figure>

<p>Es aconsejable aquí reiniciar el sistema para que dicho servicio arranque bien.</p>
<p>Después, hay que compilar el soporte de SoapySDR para SDRPlay (SoapySDRPlay). Para ello es necesario, como se ha comentado al principio, instalar el paquete <strong>libsoapysdr-dev</strong>. Además necesitaremos el paquete <strong>cmake</strong>.<br>A continuación, nos descargamos el zip con el código fuente desde <a href="https://github.com/pothosware/SoapySDRPlay3/archive/refs/heads/master.zip">su repositorio en GitHub</a> (en mi caso he tenido problemas con “git clone” y similares ya que siempre pedía usuario y contraseña de GitHub y para esto no es necesario). Descomprimimos el paquete ZIP en un directorio y hacemos la siguiente secuencia de pasos:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir build</span><br><span class="line"><span class="built_in">cd</span> build</span><br><span class="line">cmake ..</span><br><span class="line">sudo make install</span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure>

<p>Comprobar si la compilación e instalación nos ha fallado o no, ya que pudiera ser necesaria la instalación de algún paquete adicional.</p>
<p>Para comprobar que todo está bien, ejecutaremos los siguientes comandos:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SoapySDRUtil -info <span class="comment"># En los Available Factories nos debe aparecer, entre otros, SDRPlay.</span></span><br><span class="line">SoapySDRUtil --probe=<span class="string">&quot;driver=sdrplay&quot;</span> <span class="comment"># Para ver información más detallada del SDRPlay.</span></span><br></pre></td></tr></table></figure>

<p>Por último, queda arrancar la aplicación SDR que pueda utilizar SoapySDR. Yo utilizo principalmente 2: CubicSDR y GQRX.<br>Para CubicSDR, observo últimamente que da problemas con el módulo para RFSpace al arrancar (yo no lo tengo, así que he desinstalado el paquete soapysdr0.7-module-rfspace). Si CubicSDR arranca bien, se deberá poder ver el dispositivo SDRPlay.</p>
<p>Para GQRX, igual. Al arrancarlo debería encontrar el SDRPlay sin mayores problemas.</p>
<p>Las aplicaciones de SDR que he probado son las que trae Debian Testing en sus repositorios que, a día de hoy son CubicSDR 0.2.5 y GQRX 2.14.4. También he probado el receptor DAB/DAB+ welle.io que viene en el repositorio.</p>
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>SDRPlay</tag>
        <tag>Instalación</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalar receptor SDR online con OpenWebRX</title>
    <url>/instalacion-openwebrx/</url>
    <content><![CDATA[<p><a href="https://www.openwebrx.de/">OpenWebRX</a> es un software de recepción de señales de radio mediante dispositivos SDR que opera desde una interfaz web. Esto permite visualizar y procesar señales en tiempo real desde cualquier lugar, simplemente accediendo desde un navegador web.</p>
<p>Este proyecto <em>Open Source</em> nació en 2015 de mano de András Retzler (HA7ILM). Pero a finales de 2019, el autor abandonó el proyecto y es cuando <a href="https://github.com/jketterl">Jakob Ketterl</a> retomó el desarrollo del proyecto añadiendo nuevas funcionalidades y mejorando el software. El proyecto comenzó a ganar popularidad y cuenta actualmente con un gran número de colaboradores.</p>
<p>En este artículo veremos cómo instalar OpenWebRX en una Raspberry Pi. Existen otras opciones disponibles para instalar este software, como imágenes para tarjetas SD, imágenes para Docker, etc. Podemos consultar todas estas opciones en su <a href="https://www.openwebrx.de/">página web</a>.</p>
<span id="more"></span>

<img src="/instalacion-openwebrx/openwebrx_aprs.jpg" class="" width="900" title="OpenWebRX">

<h2 id="Anadir-repositorios-de-instalacion"><a href="#Anadir-repositorios-de-instalacion" class="headerlink" title="Añadir repositorios de instalación"></a>Añadir repositorios de instalación</h2><p>Para poder instalar OpenWebRX en nuestra Raspberry Pi necesitamos previamente añadir los repositorios para Debian. Para ello ejecutamos los siguientes comandos:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo bash -c <span class="string">&#x27;wget -O - https://repo.openwebrx.de/debian/key.gpg.txt | apt-key add&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo bash -c <span class="string">&#x27;echo &quot;deb https://repo.openwebrx.de/debian/ buster main&quot; &gt; /etc/apt/sources.list.d/openwebrx.list&#x27;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<h2 id="Instalar-OpenWebRx"><a href="#Instalar-OpenWebRx" class="headerlink" title="Instalar OpenWebRx"></a>Instalar OpenWebRx</h2><p>Ahora ejecutamos el siguiente comando para instalar OpenWebRX:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install openwebrx</span><br></pre></td></tr></table></figure>

<p>Durante la instalación nos pedirá una contraseña para acceder a la configuración de OpenWebRx mediante web.</p>
<img src="/instalacion-openwebrx/openwebrx_password.jpg" class="" width="600" title="Instalación OpenWebRX">

<h2 id="Configuracion"><a href="#Configuracion" class="headerlink" title="Configuración"></a>Configuración</h2><p>Una vez termine la instalación, accedemos desde un navegador web a la dirección IP de la Raspberry Pi y el puerto 8073.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;[IP_RASPBERRY]:8073&#x2F;</span><br></pre></td></tr></table></figure>

<p>Se nos mostrará la ventana principal de OpenWebRX. Si solo tenemos un SDR conectado es posible que ya podamos comenzar a usarlo, pero si tenemos varios dispositivos conectados nos mostrará un error como el siguiente y que solventaremos en los siguientes pasos.</p>
<img src="/instalacion-openwebrx/openwebrx_loaded.jpg" class="" width="900" title="OpenWebRX">

<p>Ahora hacemos clic en el botón <em>“Settings”</em> en la esquina superior derecha para acceder a la pantalla de configuración. Nos pedirá un usuario y una contraseña para poder entrar, para los que introduciremos <em><strong>“admin”</strong></em> y la contraseña que pusimos en el paso de instalación.</p>
<img src="/instalacion-openwebrx/openwebrx_config_login.jpg" class="" width="900" title="OpenWebRX - Configuración login">

<p>Una vez accedemos, veremos un menú como el siguiente desde el que accederemos a los distintos ajustes.</p>
<img src="/instalacion-openwebrx/openwebrx_config.jpg" class="" width="900" title="OpenWebRX - Configuración">

<p>El primer ajuste será introducir los datos generales desde <em>“General settings”</em>. Aquí podemos indicar la ubicación de nuestra estación, nuestro indicativo, etc. Una vez introducimos los ajustes, hacemos clic en <em>“Apply and save”</em> para guardarlos.</p>
<img src="/instalacion-openwebrx/openwebrx_config_general.jpg" class="" width="900" title="OpenWebRX - Configuración general">

<p>El siguiente paso es configurar nuestro dispositivo SDR. Para ello accedemos a los ajustes desde el menú principal en <em>“SDR devices and profiles”</em>. Aquí hacemos clic sobre el dispositivo que vayamos a configurar. Si el dispositivo no es ninguno de los mostrados, podemos añadirlo haciendo clic sobre <em>“Add new device”</em>, siempre y cuando esté soportado. Podemos ver los dispositivos soportados en <a href="https://github.com/jketterl/openwebrx/wiki/Supported-Hardware">este enlace</a>.</p>
<img src="/instalacion-openwebrx/openwebrx_config_devices.jpg" class="" width="900" title="OpenWebRX - Configuración dispositivos SDR">

<p>Una vez hemos accedido a la configuración del dispositivo elegido, podemos ir añadiendo los ajustes necesarios seleccionándolos y haciendo clic sobre <em>“Add”</em>, y posteriormente introduciendo los valores para cada uno.</p>
<img src="/instalacion-openwebrx/openwebrx_config_rtl.jpg" class="" width="900" title="OpenWebRX - Configuración RTL-SDR">

<p>Una vez introducidos los ajustes, nos quedaría configurar las bandas. OpenWebRX no permite moverse libremente por todas las frecuencias de la misma forma que hacen otros programas como SDR#. Para poder movernos en las distintas frecuencias tenemos que crear una serie de perfiles para cada frecuencia introduciendo los datos requeridos para cada una.</p>
<img src="/instalacion-openwebrx/openwebrx_config_bands.jpg" class="" width="900" title="OpenWebRX - Configuración bandas">

<p>Por último, para que OpenWebRW recargue todos los ajustes, reiniciamos el servicio desde la terminal con el siguiente comando:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart openwebrx.service</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>RTL-SDR</tag>
        <tag>Linux</tag>
        <tag>OpenWebRX</tag>
        <tag>Raspberry Pi</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalar de dispositivo RTL-SDR en macOS</title>
    <url>/instalacion-rtlsdr-macos/</url>
    <content><![CDATA[<p>En este tutorial veremos como instalar nuestro dispositivo RTL-SDR en macOS. También veremos como instalar CubicSDR para poder usarlo.</p>
<span id="more"></span>

<h2 id="Instalacion-de-los-drivers"><a href="#Instalacion-de-los-drivers" class="headerlink" title="Instalación de los drivers"></a>Instalación de los drivers</h2><p>Para poder instalar los drivers necesitamos tener instalado previamente un gestor de paquetes. El más conocido y recomendado es <strong>Homebrew</strong>. Si no lo tenemos aún instalado podemos seguir los pasos descritos en su página web:</p>
<p><a href="https://brew.sh/index_es"><center>https://brew.sh/index_es</center></a></p>
<p>Si ya lo tenemos instalado, procedemos a instalar los drivers ejecutando el siguiente comando desde la consola.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install rtl-sdr</span><br></pre></td></tr></table></figure>

<p>Con el dispositivo SDR conectado, ejecutamos el siguiente comando para comprobar que se ha instalado correctamente.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rtl_test</span><br></pre></td></tr></table></figure>

<p>Si todo ha ido bien, tendremos una salida como la siguiente.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Found 1 device(s):</span><br><span class="line">  0:  Realtek, RTL2838UHIDIR, SN: 02201602</span><br><span class="line"></span><br><span class="line">Using device 0: Generic RTL2832U OEM</span><br><span class="line">Found Rafael Micro R820T tuner</span><br><span class="line">Supported gain values (29): 0.0 0.9 1.4 2.7 3.7 7.7 8.7 12.5 14.4 15.7 16.6 19.7 20.7 22.9 25.4 28.0 29.7 32.8 33.8 36.4 37.2 38.6 40.2 42.1 43.4 43.9 44.5 48.0 49.6</span><br><span class="line">[R82XX] PLL not locked!</span><br><span class="line">Sampling at 2048000 S&#x2F;s.</span><br><span class="line"></span><br><span class="line">Info: This tool will continuously read from the device, and report if</span><br><span class="line">samples get lost. If you observe no further output, everything is fine.</span><br><span class="line"></span><br><span class="line">Reading samples in async mode...</span><br></pre></td></tr></table></figure>

<h2 id="Instalacion-de-CubicSDR"><a href="#Instalacion-de-CubicSDR" class="headerlink" title="Instalación de CubicSDR"></a>Instalación de CubicSDR</h2><p><a href="https://cubicsdr.com/">CubicSDR</a> es una aplicación multiplataforma para SDR que nos permite navegar por el espectro radioeléctrico de forma visual y demodular señales de forma sencilla.</p>
<p>Para descargar CubicSDR debemos ir a su repositorio en GitHub y descargar la última versión disponible para macOS. Para ello accedemos su repositorio a través del siguiente enlace y descargamos el instalador para macOS.</p>
<p><a href="https://github.com/cjcliffe/CubicSDR/releases"><center>https://github.com/cjcliffe/CubicSDR/releases</center></a></p>
<img src="/instalacion-rtlsdr-macos/download_cubicsdr.png" class="" width="700" title="Descarga de CubicSDR">

<p>Una vez descargado, lo ejecutamos y en la ventana que aparece arrastramos el binario a nuestro directorio de aplicaciones.</p>
<img src="/instalacion-rtlsdr-macos/install_cubicsdr.png" class="" width="700" title="Instalación de CubicSDR">

<p>Ahora ejecutamos CubicSDR desde las aplicaciones instaladas para iniciarlo. Nos mostrará una ventana como la siguiente en la que debemos seleccionar nuestro dispositivo SDR y hacemos clic en <em>Start</em>.</p>
<img src="/instalacion-rtlsdr-macos/cubicsdr_devices.png" class="" width="700" title="Configuración de CubicSDR">

<p>Finalmente, CubicSDR se iniciará y ya podremos utilizarlo.</p>
<img src="/instalacion-rtlsdr-macos/cubicsdr.png" class="" width="900" title="CubicSDR">

<p>CubicSDR también nos permite sacar el audio demodulado para poder usarlo con otros programas. Podemos seguir los pasos descritos en el tutorial <a href="/instalacion-virtual-cable-audio/">“Instalación de cable de audio virtual”</a> para configurarlo.</p>
]]></content>
      <tags>
        <tag>RTL-SDR</tag>
        <tag>Instalación</tag>
        <tag>macOS</tag>
        <tag>CubicSDR</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalar dispositivo RTL-SDR en Linux</title>
    <url>/instalacion-rtlsdr-raspberrypi/</url>
    <content><![CDATA[<p>En este tutorial veremos como instalar nuestro dispositivo RTL-SDR en una Raspberry Pi. Para la realización del mismo se ha empleado una Raspberry Pi 3 con la distribución Raspbian Buster Lite, si bien estos pasos son similares para cualquier distribución Linux.</p>
<span id="more"></span>

<img src="/instalacion-rtlsdr-raspberrypi/raspberry-pi-3.png" class="" title="Raspberry Pi 3">

<p>Vamos a instalar los drivers y librerias necesarias para usar el dispositivo SDR. Para ello ejecutamos el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install rtl-sdr librtlsdr-dev</span><br></pre></td></tr></table></figure>

<p>Una vez instalado el dispositivo le daremos permisos a los usuarios no <em>root</em> para poder usar el dispositivo. Para ello seguiremos los siguientes pasos para crear una regla <em>udev</em>.</p>
<ol>
<li>Con el dispositivo SDR conectado, ejecutamos el siguiente comando para obtener la lista de dispositivos USB conectados:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsusb</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Buscamos en la lista el dispositivo SDR y nos fijamos en los identificadores de fabricante y de dispositivo. En este caso son <strong>0bda</strong> y <strong>2838</strong> respectivamente.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Bus 001 Device 004: ID 0bda:2838 Realtek Semiconductor Corp. RTL2838 DVB-T</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Ahora creamos un archivo de reglas nuevo:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;udev&#x2F;rules.d&#x2F;rtl-sdr.rules</span><br></pre></td></tr></table></figure>

<p>Y añadimos la siguiente regla modificando los identificadores si fuese necesario para que correspondan con los obtenidos en el paso anterior:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">SUBSYSTEMS==<span class="string">&quot;usb&quot;</span>, ATTRS&#123;idVendor&#125;==<span class="string">&quot;0bda&quot;</span>, ATTRS&#123;idProduct&#125;==<span class="string">&quot;2838&quot;</span>, MODE:=<span class="string">&quot;0666&quot;</span></span><br></pre></td></tr></table></figure>

<p>Por último desconectamos el dispostivo SDR y lo volvemos a conectar para que se aplique la regla y ejecutamos el siguiente comando para comprobar que el dispositivo funciona correctamente:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rtl_test</span><br></pre></td></tr></table></figure>

<p>Si todo está correctamente instalado veremos una salida como la siguiente:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Found 1 device(s):</span><br><span class="line">  0:  Realtek, RTL2838UHIDIR, SN: 82020715</span><br><span class="line"></span><br><span class="line">Using device 0: Generic RTL2832U OEM</span><br><span class="line">Detached kernel driver</span><br><span class="line">Found Rafael Micro R820T tuner</span><br><span class="line">Supported gain values (29): 0.0 0.9 1.4 2.7 3.7 7.7 8.7 12.5 14.4 15.7 16.6 19.7 20.7 22.9 25.4 28.0 29.7 32.8 33.8 36.4 37.2 38.6 40.2 42.1 43.4 43.9 44.5 48.0 49.6</span><br><span class="line">[R82XX] PLL not locked!</span><br><span class="line">Sampling at 2048000 S&#x2F;s.</span><br><span class="line"></span><br><span class="line">Info: This tool will continuously read from the device, and report if</span><br><span class="line">samples get lost. If you observe no further output, everything is fine.</span><br><span class="line"></span><br><span class="line">Reading samples in async mode...</span><br><span class="line">Allocating 15 zero-copy buffers</span><br><span class="line">lost at least 140 bytes</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>RTL-SDR</tag>
        <tag>Linux</tag>
        <tag>Instalación</tag>
        <tag>Raspberry Pi</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalar dispositivo RTL-SDR en Windows</title>
    <url>/instalacion-rtlsdr-windows/</url>
    <content><![CDATA[<p>En este tutorial vamos a ver cómo instalar nuestro nuevo dispositivo RTL-SDR en Windows.</p>
<p>Actualmente disponemos de varios programas de SDR para Windows. En este tutorial vamos a instalar y configurar SDR# (SDR Sharp), ya que es uno de los más conocidos y utilizados.</p>
<span id="more"></span>

<h2 id="Instalacion-de-los-controladores"><a href="#Instalacion-de-los-controladores" class="headerlink" title="Instalación de los controladores"></a>Instalación de los controladores</h2><p>El primer paso es instalar los controladores (<em>drivers</em>) para nuestro dispositivo RTL-SDR. Por defecto, Windows nos instala sus propios controladores la primera vez que conectamos el dispositivo. El problema es que estos controladores no nos sirven para poder utilizarlo con los programas para SDR, por lo que tendremos que reemplazarlos por otros. Para ello, utilizaremos los <em>drivers</em> Zadig que descargaremos desde la siguiente página:</p>
<p><a href="https://zadig.akeo.ie/"><center>Zadig - USB driver</center></a></p>
<p>Una vez descargado el instalador, <strong>debemos ejecutarlo como administrador</strong>.</p>
<img src="/instalacion-rtlsdr-windows/ejecutar-zadig.jpeg" class="" width="800" title="Ejecutar Zadig como administrador">

<p>Es posible que nos aparezca una ventana como la siguiente en la que debemos indicar que <strong>sí</strong> queremos realizar cambios en el dispositivo.</p>
<img src="/instalacion-rtlsdr-windows/control-cuentas.jpeg" class="" width="400" title="Control de cuentas de Windows">

<p>Ahora debemos seleccionar el dispositivo correcto en el listado.<br>Tenemos que asegurarnos de que el dispositivo que seleccionemos se corresponde con el RTL-SDR. De lo contrario vamos a reemplazar el controlador de otro dispositivo y este dejará de funcionar.</p>
<img src="/instalacion-rtlsdr-windows/zadig-instalar.jpeg" class="" width="600" title="Dispositivos en Windows 11">

<p>Una vez seleccionado, hacemos clic en <em>Install Driver</em> y esperamos a que finalice la instalación.</p>
<img src="/instalacion-rtlsdr-windows/zadig-instalado.jpeg" class="" width="600" title="Instalación terminada">


<h3 id="Instalacion-en-Windows-10"><a href="#Instalacion-en-Windows-10" class="headerlink" title="Instalación en Windows 10"></a>Instalación en Windows 10</h3><p>Si estamos usando Windows 10, debemos realizar un paso previo para la instalación de los controladores.</p>
<p>En la ventana del instalador seleccionamos <strong>Options</strong> y marcamos <strong>List All Devices</strong>.</p>
<img src="/instalacion-rtlsdr-windows/zadig3.jpg" class="" title="Zadig list devices">

<p>Ahora tendremos que seleccionar nuestro dispositivo en el listado.</p>
<img src="/instalacion-rtlsdr-windows/zadig4.jpg" class="" title="Zadig replace">

<p>Una vez lo tengamos seleccionado correctamente, hacemos clic en <strong>Replace Driver</strong> y esperamos a que se instalen los nuevos controladores.</p>
<img src="/instalacion-rtlsdr-windows/zadig5.jpg" class="" title="Zadig instalado">


<h2 id="Instalacion-de-SDR"><a href="#Instalacion-de-SDR" class="headerlink" title="Instalación de SDR#"></a>Instalación de SDR#</h2><p>Vamos ahora con la instalación del software que necesitamos para usar nuestro SDR. Para ello nos vamos a la web de AIRSPY para descargar la última versión disponible de SDR# haciendo clic en el siguiente enlace:</p>
<p><a href="https://airspy.com/download/"><center>https://airspy.com/download/</center></a></p>
<p>Descargamos SDR# haciendo clic en el botón <em>Download</em>.</p>
<img src="/instalacion-rtlsdr-windows/descarga.jpg" class="" width="800" title="Descarga de SDR#">

<p>Una vez descargado el archivo ZIP, extraemos su contenido en el directorio deseado. En este ejemplo vamos a usar el directorio <em>C:/SDR/SDRSharp</em>.</p>
<p>Ahora tenemos que ejecutar el archivo <strong>install-rtlsdr.bat</strong> que encontraremos en el directorio en el que acabamos de extraer SDR#. Este ejecutable nos va a descargar las librerías necesarias para poder utilizar nuestro dispositivo con SDR#.</p>


<p>Una vez el <em>script</em> termine nos pedirá que pulsemos una tecla para finalizar.</p>
<h3 id="Configuracion"><a href="#Configuracion" class="headerlink" title="Configuración"></a>Configuración</h3><p>Es el turno ahora de decirle a SDR# que utilice nuestro dispositivo.<br>Para ello vamos al directorio en el que hemos instalado SDR# y ejecutamos <strong>SDRSharp.exe</strong> para iniciar el programa.</p>
<p>Una vez abierto, hacemos clic en <strong>Source</strong> y seleccionamos <strong>RTL-SDR USB</strong>.</p>
<img src="/instalacion-rtlsdr-windows/sdrsharp_source.jpg" class="" title="Seleccionando dispositivo">

<p>Después de haber seleccionado nuestro dispositivo, tenemos que editar sus ajustes. Para ello hacemos clic en el icono de ajustes para mostrar la ventana de configuración.</p>
<img src="/instalacion-rtlsdr-windows/sdrsharp.jpg" class="" title="Ajustes">

<p>En esta ventana encontramos las siguientes opciones:</p>
<img src="/instalacion-rtlsdr-windows/sdrsharp_config.jpg" class="" title="RTL-SDR Controller">

<table>
<thead>
<tr>
<th>Ajuste</th>
<th>Recomendado</th>
<th>Descripción</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Device</strong></td>
<td></td>
<td>Nos permite indicarle el dispositivo RTL-SDR que utilizaremos. Si no hemos instalado los controladores correctamente, no nos aparecerá ninguno disponible.</td>
</tr>
<tr>
<td><strong>Sample Rate</strong></td>
<td>2.4 MSPS</td>
<td>Permite elegir el ancho de banda que nos mostrará por pantalla. Lógicamente, a mayor valor, mayor consumo de recursos de nuestro PC. Por lo que si tenemos un PC poco potente, debemos seleccionar un valor más bajo.</td>
</tr>
<tr>
<td><strong>Sampling Mode</strong></td>
<td>Quadrature Sampling</td>
<td>Permite elegir el modo de muestreo.</td>
</tr>
<tr>
<td><strong>Offset tunning</strong></td>
<td>R820T: Desactivado   E4000/FC0012: Activado</td>
<td>Solo es necesario para los dispositivos basados los chips E4000 y FC0012.</td>
</tr>
<tr>
<td><strong>RTL AGC</strong></td>
<td>Desactivado</td>
<td>Activa el control automático de ganancia del chip RTL2832U.</td>
</tr>
<tr>
<td><strong>Tuner AGC</strong></td>
<td>Desactivado</td>
<td>Activa el control automático de ganancia del sintonizador del dispositivo.</td>
</tr>
<tr>
<td><strong>RF Gain</strong></td>
<td></td>
<td>Permite ajustar la ganancia manualmente. En el siguiente punto veremos como ajustarla correctamente.</td>
</tr>
<tr>
<td><strong>Frequency correction (ppm)</strong></td>
<td></td>
<td>Permite corregir la variación de la frecuencia que tienen la mayoría de dispositivos. Esta variación se debe al oscilador de baja calidad con el que normalmente vienen. Para establecer este valor, tendremos que sintonizar una frecuencia conocida y ajustarlo manualmente.</td>
</tr>
</tbody></table>
<p>Con todo ya configurado, solo queda pulsar el botón de <strong>Start/Stop</strong> para empezar a recibir.</p>
<img src="/instalacion-rtlsdr-windows/sdrsharp_start.jpg" class="" title="SDR# Start&#x2F;Stop">

<h3 id="Ajuste-de-la-ganancia"><a href="#Ajuste-de-la-ganancia" class="headerlink" title="Ajuste de la ganancia"></a>Ajuste de la ganancia</h3><p>En este último paso vamos a ajustar la ganancia de nuestro dispositivo manualmente. Como hemos visto anteriormente, el ajuste de la ganancia se puede dejar para que el dispositivo lo haga automáticamente. El problema es que este ajuste muy pocas veces se hace correctamente, por lo que es muy recomendable hacerlo de forma manual para cada banda que estemos sintonizando. Para ello sintonizamos cualquier señal en la frecuencia para la que vamos a ajustar la ganancia y abrimos los ajustes del dispositivo.<br>Ahora el objetivo es ajustar el valor de <strong>RF Gain</strong> hasta que consigamos el máximo valor de SNR (Signal to Noise Ratio).</p>
<img src="/instalacion-rtlsdr-windows/ganancia0.jpg" class="" title="Ajuste de la ganancia manualmente">
<img src="/instalacion-rtlsdr-windows/ganancia_max.jpg" class="" title="Ajuste de la ganancia manualmente">
<img src="/instalacion-rtlsdr-windows/ganancia.jpg" class="" title="Ajuste de la ganancia manualmente">

<p>Una vez tengamos la ganancia ajustada, ya tendremos listo nuestro dispositivo SDR.</p>
<h2 id="SDR-Big-Book"><a href="#SDR-Big-Book" class="headerlink" title="SDR# Big Book"></a>SDR# Big Book</h2><p>En el siguiente enlace podemos consultar la guía de uso de SDR# traducida al español por Miguel Iborra (EA4BAS):</p>
<p><a href="https://airspy.com/downloads/SDRSharp_Guia_v2.2_ESP.pdf"><center>SDR# Big Book en español (PDF)</center></a></p>
]]></content>
      <tags>
        <tag>RTL-SDR</tag>
        <tag>Instalación</tag>
        <tag>SDRSharp</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalación de estación terrestre con SatNOGS</title>
    <url>/instalacion-satnogs/</url>
    <content><![CDATA[<p><a href="https://satnogs.org/">SatNOGS</a> (Satellite Networked Open Ground Station) es una plataforma de software y hardware de código abierto con el propósito de crear una red global de estaciones terrestres de seguimiento de satélites.</p>
<p>En este artículo veremos cómo instalar una estación terrestre para el seguimiento de satélites de forma desatendida. Para ello vamos a utilizar un dispositivo SDR y una Raspberry Pi con el software SatNOGS.</p>
<span id="more"></span>

<h2 id="Registrar-nuestra-estacion-en-la-red"><a href="#Registrar-nuestra-estacion-en-la-red" class="headerlink" title="Registrar nuestra estación en la red"></a>Registrar nuestra estación en la red</h2><p>El primer paso será registrarnos en la red de SatNOGS para obtener nuestro identificador de estación y la <em>API key</em>.<br>Para ello vamos a la web de SatNOGS mediante el siguiente enlace:</p>
<p><a href="https://network.satnogs.org/"><center>https://network.satnogs.org/</center></a></p>
<p>Aquí podemos ver las estaciones conectadas a la red, a las que podemos acceder para programar y revisar pases.</p>
<p>Para registrarnos, hacemos clic en <em>Sign Up / Log In</em>.</p>
<img src="/instalacion-satnogs/satnogs_inicio.png" class="" width="900" title="SatNOGS">

<p>A continuación introducimos nuestro correo electrónico, nombre de usuario y una contraseña. Hacemos clic en <em>SIGN UP</em>.</p>
<img src="/instalacion-satnogs/satnogs_registro.png" class="" title="SatNOGS Sign Up">

<p>Una vez registrados, vamos a crear una nueva estación. Para ello hacemos clic en <em>Add Ground Station</em>.</p>
<img src="/instalacion-satnogs/satnogs_registrado.png" class="" width="900" title="Nueva estación SatNOGS">

<p>Ahora introducimos los datos requeridos de nuestra estación.</p>
<img src="/instalacion-satnogs/satnogs_crear_groundstation.png" class="" width="900" title="Datos estación SatNOGS">

<p>Cuando los tengamos correctamente introducidos, hacemos clic en <strong><em>Submit</em></strong> para enviar los datos y registrar nuestra nueva estación.<br>Una vez registrada se nos mostrará una nueva página con los datos de la misma. Podemos ver que delante del nombre se nos ha asignado un identificador de estación (en este ejemplo el 1516) que debemos anotar para sucesivos pasos.</p>
<p>Ahora vamos al panel de control (<em>dashboard</em>) haciendo clic en el icono de la esquina superior derecha.</p>
<img src="/instalacion-satnogs/satnogs_groundstation_creada.png" class="" width="900" title="SatNOGS">

<p>Hacemos clic en <em>API Key</em> y copiamos nuestro token.</p>
<img src="/instalacion-satnogs/satnogs_api_key.png" class="" width="900" title="SatNOGS API Key">


<h2 id="Descargar-imagen-de-SatNOGS-para-Raspberry-Pi"><a href="#Descargar-imagen-de-SatNOGS-para-Raspberry-Pi" class="headerlink" title="Descargar imagen de SatNOGS para Raspberry Pi"></a>Descargar imagen de SatNOGS para Raspberry Pi</h2><p>Vamos ahora a preparar la Raspberry Pi. Para ello vamos a instalar la imagen que hay creada del cliente de SatNOGS y que podemos descargar desde la siguiente página:</p>
<p><a href="https://gitlab.com/librespacefoundation/satnogs/satnogs-pi-gen/-/tags"><center>https://gitlab.com/librespacefoundation/satnogs/satnogs-pi-gen/-/tags</center></a></p>
<p>Aquí descargamos la última versión disponible.</p>
<img src="/instalacion-satnogs/descarga_imagen.png" class="" width="900" title="Descarga imagen SatNOGS">

<p>Una vez descargado el archivo, extraemos la imagen y la grabamos en la tarjeta SD con el programa que tengamos para ello. En este ejemplo se ha usado <a href="https://sourceforge.net/projects/win32diskimager/">Win32 Disk Imager</a>.</p>
<img src="/instalacion-satnogs/grabar_imagen.png" class="" title="Win32 Disk Imager">


<h2 id="Configuracion-de-Raspberry-Pi"><a href="#Configuracion-de-Raspberry-Pi" class="headerlink" title="Configuración de Raspberry Pi"></a>Configuración de Raspberry Pi</h2><p>Ahora vamos a configurar algunos aspectos esenciales en nuestra Raspberry Pi.</p>
<p>Una vez que tengamos la Raspberry Pi iniciada, accedemos a ella mediante SSH (usuario <strong>“pi”</strong> y clave <strong>“raspberry”</strong>) y ejecutamos el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure>

<p>Se nos muestra en pantalla el menú de la herramienta de configuración de la Raspberry Pi.</p>
<img src="/instalacion-satnogs/raspi-config.png" class="" title="Configuración de Raspberry Pi">

<p>Los ajustes básicos que debemos llevar a cabo son:</p>
<ul>
<li>Cambiar la clave por defecto.</li>
<li>Configurar la zona horaria a UTC. En <em>Localisation Options</em>, <em>Change Timezone</em>, <em>None of the above</em>, <em>UTC</em>.</li>
<li>Expandir el sistema de archivos. En <em>Advanced Options</em>, primera opción:</li>
</ul>
<img src="/instalacion-satnogs/raspi-config_advanced.png" class="" title="Configuración de Raspberry Pi">

<p>Por último, reiniciamos la Raspberry Pi para que se apliquen los cambios.</p>
<h2 id="Configuracion-de-SatNOGS"><a href="#Configuracion-de-SatNOGS" class="headerlink" title="Configuración de SatNOGS"></a>Configuración de SatNOGS</h2><p>Turno ahora de configurar el cliente SatNOGS. Para ello ejecutamos el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo satnogs-setup</span><br></pre></td></tr></table></figure>

<p>Se mostrará el menú principal de opciones:</p>
<img src="/instalacion-satnogs/satnogs-setup.png" class="" title="SatNOGS Setup">

<p>Lo primero es actualizar la propia herramienta de configuración desde <em>Update configuration tool</em>.<br>Esta operación tardará unos minutos y nos pedirá confirmación para descargar algunos paquetes. Al finalizar nos mostrará la siguiente ventana para indicar que servicios queremos reiniciar. Debemos darle a <em>Ok</em>.</p>
<img src="/instalacion-satnogs/satnogs-setup_restart.png" class="" title="SatNOGS Setup">

<p>Volvemos ahora al menú principal y vamos a <strong><em>Basic configuration options</em></strong>. Aquí vamos a introducir los datos de nuestra estación:</p>
<table>
<thead>
<tr>
<th>Ajuste</th>
<th>Descripción</th>
</tr>
</thead>
<tbody><tr>
<td>SATNOGS_API_TOKEN</td>
<td>API key obtenida anteriormente.</td>
</tr>
<tr>
<td>SATNOGS_SOAPY_RX_DEVICE</td>
<td>Dispositivo SDR que vamos a usar.<br>Para el RTL-SDR introducimos <code>driver=rtlsdr</code>.<br>Para otros dispositivos consultar en <a href="https://github.com/pothosware/SoapyRTLSDR/wiki">https://github.com/pothosware/SoapyRTLSDR/wiki</a> (apartado <em>Modules</em>).</td>
</tr>
<tr>
<td>SATNOGS_ANTENNA</td>
<td>Para el RTL-SDR introducimos <code>RX</code>.<br>Para otros dispositivos debemos consultar el valor usando el comando <code>SoapySDRUtil --probe 2&gt;&amp;1 | grep Antennas</code>.</td>
</tr>
<tr>
<td>SATNOGS_RX_SAMP_RATE</td>
<td><em>Sample rate</em> del dispositivo.<br>Para el RTL-SDR introducimos <code>2.048e6</code>.</td>
</tr>
<tr>
<td>SATNOGS_STATION_ELEV</td>
<td>Altitud de nuestra estación.</td>
</tr>
<tr>
<td>SATNOGS_STATION_ID</td>
<td>Identificador de nuestra estación obtenido anteriormente.</td>
</tr>
<tr>
<td>SATNOGS_STATION_LAT</td>
<td>Latitud de nuestra estación.</td>
</tr>
<tr>
<td>SATNOGS_STATION_LON</td>
<td>Longitud de nuestra estación.</td>
</tr>
</tbody></table>
<img src="/instalacion-satnogs/satnogs-setup_basic.png" class="" title="SatNOGS Setup">

<p>Volvemos al menú principal y vamos ahora a <strong><em>Advanced</em></strong> y <strong><em>Radio Settings</em></strong>. Aquí vamos a introducir los siguientes ajustes:</p>
<table>
<thead>
<tr>
<th>Ajuste</th>
<th>Descripción</th>
</tr>
</thead>
<tbody><tr>
<td>SATNOGS_PPM_ERROR</td>
<td>Valor de correción de frecuencia del dispositivo.</td>
</tr>
<tr>
<td>SATNOGS_RF_GAIN</td>
<td>Ganancia del dispositivo. Para el RTL-SDR introducimos cualquier valor de ganancia soportado: <code>0.0 0.9 1.4 2.7 3.7 7.7 8.7 12.5 14.4 15.7 16.6 19.7 20.7 22.9 25.4 28.0 29.7 32.8 33.8 36.4 37.2 38.6 40.2 42.1 43.4 43.9 44.5 48.0 49.6</code></td>
</tr>
</tbody></table>
<img src="/instalacion-satnogs/satnogs-setup_advanced_radio.png" class="" title="SatNOGS Setup">

<p>Volvemos al menú principal y le damos a <strong><em>Apply</em></strong> para que se apliquen los ajustes. Cuando se termine de configurar podemos comprobar si se ha iniciado correctamente con:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl status satnogs-client</span><br></pre></td></tr></table></figure>

<p>Si todo ha ido bien tendremos la siguiente salida:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">● satnogs-client.service - SatNOGS client</span><br><span class="line">   Loaded: loaded (&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;satnogs-client.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Fri 2020-04-23 19:33:57 UTC; 26min ago</span><br><span class="line"> Main PID: 27871 (satnogs-client)</span><br><span class="line">    Tasks: 22 (limit: 2200)</span><br><span class="line">   Memory: 55.7M</span><br><span class="line">   CGroup: &#x2F;system.slice&#x2F;satnogs-client.service</span><br><span class="line">           └─27871 &#x2F;var&#x2F;lib&#x2F;satnogs&#x2F;bin&#x2F;python3 &#x2F;var&#x2F;lib&#x2F;satnogs&#x2F;bin&#x2F;satnogs-client</span><br></pre></td></tr></table></figure>

<h2 id="Programar-seguimientos-en-SatNOGS"><a href="#Programar-seguimientos-en-SatNOGS" class="headerlink" title="Programar seguimientos en SatNOGS"></a>Programar seguimientos en SatNOGS</h2><p>Con nuestra Raspberry Pi finalmente configurada, es el momento de comprobar que todo funciona correctamente y podemos realizar el seguimiento de satélites.</p>
<p>Para programar un pase debemos hacerlo desde el panel de control de SatNOGS. Nuestra Raspberry Pi se comunicará con la red de SatNOGS, realizará los seguimientos que le indiquemos y subirá los datos a la misma.</p>
<p>Tenemos dos formas de programar un seguimiento. La primera de ellas es calculando todos los pases de todos los satélites que pasarán por nuestra estación en las siguientes horas. Para ello vamos a nuestro panel de control, hacemos clic en nuestra estación y le damos a <strong><em>Calculate Future Passes</em></strong>.</p>
<img src="/instalacion-satnogs/satnogs_nuevo_pase.png" class="" title="SatNOGS Nuevo pase">

<p>Aparecen ahora los siguientes pases. Seleccionamos el deseado haciendo clic en <strong><em>schedule</em></strong>.</p>
<img src="/instalacion-satnogs/satnogs_nuevo_pase_2.png" class="" title="SatNOGS Nuevo pase">

<p>Comprobamos los datos de la observación y hacemos clic en <strong><em>Schedule</em></strong>.</p>
<img src="/instalacion-satnogs/satnogs_nuevo_pase_3.png" class="" title="SatNOGS Nuevo pase">

<p>La segunda forma de programar un pase es desde el panel del control. Aquí hacemos clic en <strong><em>New Observation</em></strong>.</p>
<img src="/instalacion-satnogs/satnogs_nuevo_pase_sat.png" class="" title="SatNOGS Nuevo pase">

<p>Seleccionamos el satélite que queremos seguir e indicamos un intervalos de tiempo. Después hacemos clic en <strong><em>Calculate</em></strong> para calcular los pases. Por último seleccionamos el pase que nos interese y hacemos clic en <strong><em>Schedule</em></strong>.</p>
<img src="/instalacion-satnogs/satnogs_nuevo_pase_sat_2.png" class="" title="SatNOGS Nuevo pase">

<p>Cuando se completen los pases que hemos programado, podemos ver el <em>“waterfall”</em> del pase, el audio y los datos o imágenes obtenidas.</p>
<h2 id="Utilizacion-de-LNA"><a href="#Utilizacion-de-LNA" class="headerlink" title="Utilización de LNA"></a>Utilización de LNA</h2><p>Incorporar un LNA a nuestra estación nos ayudará a mejorar la recepción de los satélites. Si disponemos de un LNA con alimentación mediante Bias-T y utilizamos un dispositivo SDR como el RTL-SDR V3, tendremos que activar la alimentación del mismo.</p>
<p>A continuación veremos como hacer que SatNOGS active de forma automática el Bias-T de nuestro RTL-SDR cuando vaya a recibir un pase y lo desactive al finalizar.</p>
<p>Necesitamos instalar la utilidad <code>rtl_biast</code> que será la encargada de activar y desactivar el Bias-T del dispositivo SDR. Para ello accedemos por SSH a la Raspberry Pi y realizamos los siguientes pasos:</p>
<ol>
<li>Descargar el código fuente.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;rtlsdrblog&#x2F;rtl_biast.git</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Instalar las dependencias necesarias para compilar.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install cmake libusb-1.0-0-dev</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Accedemos a la carpeta descargada.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd rtl_biast</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Generamos el <em>makefile</em>.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cmake .</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>Compilamos.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">make</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>Copiamos el binario compilado a <code>/usr/bin</code>.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo cp src&#x2F;rtl_biast &#x2F;usr&#x2F;bin</span><br></pre></td></tr></table></figure>

<p>Por último, nos aseguramos de que funciona correctamente ejecutando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">rtl_biast</span><br></pre></td></tr></table></figure>

<p>Debemos obtener una salida como la siguiente:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Found 1 device(s):</span><br><span class="line">  0:  Realtek, RTL2838UHIDIR, SN: 08201703</span><br><span class="line"></span><br><span class="line">Using device 0: Generic RTL2832U OEM</span><br><span class="line">Found Rafael Micro R820T tuner</span><br></pre></td></tr></table></figure>

<p>Ahora vamos a configurar el cliente SatNOGS para que active y desactive el Bias-T de forma automática.</p>
<p>Accedemos al menú de configuración mediante:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo satnogs-setup</span><br></pre></td></tr></table></figure>

<p>Vamos a <strong><em>Advanced</em></strong> y <strong><em>Pre/post observation scripts</em></strong> y establecemos los siguientes ajustes:</p>
<table>
<thead>
<tr>
<th>Ajuste</th>
<th>Valor</th>
</tr>
</thead>
<tbody><tr>
<td>SATNOGS_PRE_OBSERVATION_SCRIPT</td>
<td><code>/usr/bin/rtl_biast -b 1</code></td>
</tr>
<tr>
<td>SATNOGS_POST_OBSERVATION_SCRIPT</td>
<td><code>/usr/bin/rtl_biast -b 0</code></td>
</tr>
</tbody></table>
<p>Para finalizar volvemos al menú principal y le damos a <strong><em>Apply</em></strong> para que se apliquen los ajustes.</p>
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Instalación</tag>
        <tag>Raspberry Pi</tag>
        <tag>SatNOGS</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalación de estación terrestre con SatNOGS (II)</title>
    <url>/instalacion-satnogs-ansible/</url>
    <content><![CDATA[<p>En el artículo anterior <a href="/instalacion-satnogs/">“Instalación de estación terrestre con SatNOGS”</a> vimos como crear una estación terrestre para el seguimiento de satélites usando una Raspberry Pi, y para ello utilizamos la imagen ya generada para el cliente de SatNOGS.<br>En este artículo veremos cómo realizar la instalación del cliente SatNOGS en una Raspberry Pi previamente configurada, en la que ya tenemos otros servicios corriendo.</p>
<span id="more"></span>


<p>Si bien este artículo se centra en la instalación en una Raspberry Pi, es posible realizar la instalación en otros dispositivos Linux mediante este mismo procedimiento. El <em>playbook</em> de Ansible que vamos a utilizar es compatible con las siguientes distribuciones y versiones:</p>
<ul>
<li><strong>Debian:</strong> <em>stretch</em>, <em>buster</em>.</li>
<li><strong>Raspbian:</strong> <em>stretch</em>, <em>buster</em>.</li>
</ul>
<h2 id="Instalacion-de-Ansible"><a href="#Instalacion-de-Ansible" class="headerlink" title="Instalación de Ansible"></a>Instalación de Ansible</h2><p>Lo primero que haremos será instalar la última versión de Ansible. Para ello seguimos los siguientes pasos:</p>
<ol>
<li>Añadir el repositorio de Ansible.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;deb http:&#x2F;&#x2F;ppa.launchpad.net&#x2F;ansible&#x2F;ansible&#x2F;ubuntu trusty main&quot; | sudo tee -a &#x2F;etc&#x2F;apt&#x2F;sources.list</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Añadir la clave del repositorio.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Actualizar lista de repositorios.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Instalar Ansible.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install -y ansible</span><br></pre></td></tr></table></figure>

<h2 id="Instalacion-del-cliente-Ansible-de-SatNOGS"><a href="#Instalacion-del-cliente-Ansible-de-SatNOGS" class="headerlink" title="Instalación del cliente Ansible de SatNOGS"></a>Instalación del cliente Ansible de SatNOGS</h2><p>A continuación vamos a descargar e instalar el instalador del cliente SatNOGS.</p>
<ol>
<li>Instalamos las dependencias que vamos a necesitar:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install -y git needrestart</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Descargamos el repositorio:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone -b stable https:&#x2F;&#x2F;gitlab.com&#x2F;librespacefoundation&#x2F;satnogs&#x2F;satnogs-client-ansible.git</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Accedemos a la carpeta descargada:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd satnogs-client-ansible</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Copiamos y renombramos el siguiente directorio:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cp -r production.dist production</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>Ahora editamos el archivo <code>hosts</code> con nuestros datos de conexión SSH a la Raspberry Pi:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano production&#x2F;inventory&#x2F;hosts</span><br></pre></td></tr></table></figure>

<p>Debemos editar el <em>host</em>, el usuario y la clave:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">all:</span><br><span class="line">  hosts:</span><br><span class="line">    satnogs:</span><br><span class="line">      ansible_host: &#39;localhost&#39;</span><br><span class="line">      ansible_user: &#39;pi&#39;</span><br><span class="line">      ansible_ssh_pass: &#39;raspberry&#39;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>Comprobamos la conexión SSH:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh pi@localhost true</span><br></pre></td></tr></table></figure>

<ol start="7">
<li>Por último ejecutamos el <em>playbook</em>:</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ansible-playbook -i production&#x2F;inventory -K site.yml</span><br></pre></td></tr></table></figure>

<p>La instalación tardará unos minutos (pueden ser bastantes dependiendo de nuestra conexión y la CPU de la Raspberry Pi) y al finalizar mostrará un mensaje como el siguiente:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- Play recap -</span><br><span class="line">  satnogs                    : ok&#x3D;121  changed&#x3D;49   unreachable&#x3D;0    failed&#x3D;0    rescued&#x3D;0    ignored&#x3D;0</span><br></pre></td></tr></table></figure>

<h2 id="Configuracion-de-SatNOGS"><a href="#Configuracion-de-SatNOGS" class="headerlink" title="Configuración de SatNOGS"></a>Configuración de SatNOGS</h2><p>Los pasos para la configuración del cliente son idénticos a los descritos en el artículo anterior en este mismo apartado.</p>
<p>La única observación es que ahora al tener más de un dispositivo SDR conectado, debemos indicar cual de ellos debe utilizar.<br>Necesitaremos el número de serie del dispositivo para diferenciarlos. Para extraerlo usamos la herramienta <code>rtl_test</code>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pi@raspberrypi:~ $ rtl_test</span><br><span class="line">Found 2 device(s):</span><br><span class="line">  0:  Realtek, RTL2838UHIDIR, SN: 02201602</span><br><span class="line">  1:  Realtek, RTL2838UHIDIR, SN: 08201703</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

<p>En este caso vamos a utilizar el segundo dispositivo, y por lo tanto se lo debemos indicar a SatNOGS. Para ello en <strong><em>Basic configuration options</em></strong> realizaremos el siguiente cambio:</p>
<table>
<thead>
<tr>
<th>Ajuste</th>
<th>Descripción</th>
</tr>
</thead>
<tbody><tr>
<td>SATNOGS_SOAPY_RX_DEVICE</td>
<td>Dispositivo SDR que vamos a usar y número de serie: <code>driver=rtlsdr,serial=08201703</code>.</td>
</tr>
</tbody></table>
<img src="/instalacion-satnogs-ansible/satnogs-config.png" class="" title="SatNOGS Setup">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Linux</tag>
        <tag>Instalación</tag>
        <tag>Raspberry Pi</tag>
        <tag>SatNOGS</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalar SDR++</title>
    <url>/instalacion-sdrpp/</url>
    <content><![CDATA[<p><a href="https://www.sdrpp.org/">SDR++</a> es un software multiplataforma y de código abierto para la recepción de señales mediante SDR. Este nuevo programa, desarrollado por <a href="https://twitter.com/ryzerth">Alexandre Rouma</a>, busca como objetivo ser sencillo de utilizar y eficiente.<br>En este post veremos cómo instalar SDR++ en Windows, Linux y macOS.</p>
<span id="more"></span>

<p>Para instalar SDR++ en cualquier sistema operativo, tenemos la posibilidad de descargar los instaladores para cada uno de ellos desde el siguiente enlace:</p>
<p><a href="https://github.com/AlexandreRouma/SDRPlusPlus/releases/latest"><center>Releases SDR++</center></a></p>
<p>En cualquier caso, necesitaremos tener instalados previamente los controladores del dispositivo que vayamos a utilizar. Si vamos a usar un dispositivo RTL-SDR por primera vez, podemos seguir los pasos de instalación descritos en <a href="/primeros-pasos/#Instalacion-del-dispositivo">este enlace</a>.</p>
<h2 id="Instalacion-en-Windows"><a href="#Instalacion-en-Windows" class="headerlink" title="Instalación en Windows"></a>Instalación en Windows</h2><p>Una vez descargado el archivo comprimido para Windows, procedemos a extraer su contenido en la ubicación que queramos. Para iniciar el programa bastaría con abrir el ejecutable <strong><em>sdrpp.exe</em></strong>.</p>
<img src="/instalacion-sdrpp/sdrpp-windows.jpg" class="" width="900" title="SDR++ Windows">

<h2 id="Instalacion-en-Linux"><a href="#Instalacion-en-Linux" class="headerlink" title="Instalación en Linux"></a>Instalación en Linux</h2><p>Nos descargamos el archivo PKG para nuestro distribución Linux y lo instalamos con el gestor de paquetes correspondiente.<br>Para iniciar el programa, bastaría con buscarlo en los programas instalados e iniciarlo.</p>
<img src="/instalacion-sdrpp/sdrpp-linux.jpg" class="" width="900" title="SDR++ Linux">

<h2 id="Instalacion-en-macOS"><a href="#Instalacion-en-macOS" class="headerlink" title="Instalación en macOS"></a>Instalación en macOS</h2><p>Lo primero que haremos será descargar el archivo PKG para nuestra arquitectura e instalarlo. Por ahora solo está disponible el paquete para procesadores con arquitectura <em>amd64</em> y no para <em>ARM</em> (Apple M1).</p>
<p>Una vez instalado el paquete con el programa, necesitamos instalar algunas dependencias externas:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install fftw glew glfw volk</span><br></pre></td></tr></table></figure>

<p>Por último ejecutamos el programa desde la terminal para iniciarlo:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sdrpp</span><br></pre></td></tr></table></figure>

<img src="/instalacion-sdrpp/sdrpp-macos.jpg" class="" width="900" title="SDR++ macOS">
]]></content>
      <tags>
        <tag>Linux</tag>
        <tag>Instalación</tag>
        <tag>macOS</tag>
        <tag>Windows</tag>
        <tag>SDR++</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalación de SPY Server en Raspberry Pi</title>
    <url>/instalacion-spyserver-raspberrypi/</url>
    <content><![CDATA[<p>SPY Server es un software que permite crear un servidor SDR al que nos podemos conectar de forma remota mediante SDR#. Este software es desarrollado por Airspy siendo compatible con sus dispositivos pero también con los RTL-SDR.<br>En este artículo veremos cómo instalar SPY Server en una Raspberry Pi.</p>
<span id="more"></span>

<p>Para usar SPY Server en nuestra Raspberry Pi <strong>necesitamos en primer lugar tener instalado el dispositivo SDR</strong>. Si nuestro dispositivo es un RTL-SDR debemos seguir los pasos descritos en el artículo <a href="/instalacion-rtlsdr-raspberrypi/">“Instalación de dispositivos RTL-SDR en Linux”</a>.</p>
<h2 id="Instalar-SPY-Server"><a href="#Instalar-SPY-Server" class="headerlink" title="Instalar SPY Server"></a>Instalar SPY Server</h2><p>SPY Server está disponible ya compilado para procesadores ARM de 32 bits, por lo que bastaría con descargarlo a nuestra Raspberry Pi para que funcione.</p>
<p>Lo primero que haremos será crear un directorio nuevo para los archivos de SPY Server:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mkdir SPY_Server &amp;&amp; cd $_</span><br></pre></td></tr></table></figure>

<p>Descargamos SPY Server usando el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;airspy.com&#x2F;downloads&#x2F;spyserver-arm32.tgz</span><br></pre></td></tr></table></figure>

<p>Extraemos el contenido:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tar -xzf spyserver-arm32.tgz</span><br></pre></td></tr></table></figure>

<p>SPY Server funciona correctamente con los valores por defecto. También detecta el dispositivo SDR de forma automática y selecciona el primero disponible. Si necesitamos realizar algún ajuste debemos editar el archivo <strong>spyserver.config</strong>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nano spyserver.config</span><br></pre></td></tr></table></figure>

<p>Por último ejecutamos SPY Server:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;spyserver spyserver.config</span><br></pre></td></tr></table></figure>

<p>Si todo ha ido bien, nos mostrará una salida como la siguiente:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">SPY Server v2.0.1700</span><br><span class="line">Copyright (C) 2016-2018 Youssef Touil - https:&#x2F;&#x2F;airspy.com</span><br><span class="line">Reading the configuration file: spyserver.config</span><br><span class="line">Listening for connections on 0.0.0.0:5555</span><br></pre></td></tr></table></figure>


<p>Necesitamos que SPY Server funcione de forma autónoma en la Raspberry Pi y que se inicie de forma automática cuando esta se reinicie. Para ello vamos a lanzar SPY Server como un servicio.</p>
<p>Lo primero será crear un archivo <em>unit</em> con la información del servicio:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;spyserver.service</span><br></pre></td></tr></table></figure>

<p>El contenido del archivo será el siguiente (modificar las rutas si es necesario):</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;SPY Server</span><br><span class="line">After&#x3D;network.target</span><br><span class="line">StartLimitIntervalSec&#x3D;0</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type&#x3D;simple</span><br><span class="line">Restart&#x3D;always</span><br><span class="line">RestartSec&#x3D;1</span><br><span class="line">User&#x3D;pi</span><br><span class="line">WorkingDirectory&#x3D;&#x2F;home&#x2F;pi&#x2F;SPY_Server</span><br><span class="line">ExecStart&#x3D;&#x2F;home&#x2F;pi&#x2F;SPY_Server&#x2F;spyserver spyserver.config</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br></pre></td></tr></table></figure>

<p>Ahora vamos a cargar el servicio en el arranque mediante el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable spyserver</span><br></pre></td></tr></table></figure>

<p>Por último iniciamos el servicio:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl start spyserver</span><br></pre></td></tr></table></figure>

<p>Para consultar el estado del servicio ejecutamos:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl status spyserver</span><br></pre></td></tr></table></figure>

<p>Si todo está correcto tendremos la siguiente salida:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">● spyserver.service - SPY Server</span><br><span class="line">   Loaded: loaded (&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;spyserver.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Fri 2020-04-10 21:45:26 CEST; 13s ago</span><br><span class="line"> Main PID: 20788 (spyserver)</span><br><span class="line">    Tasks: 2 (limit: 2200)</span><br><span class="line">   Memory: 252.0K</span><br><span class="line">   CGroup: &#x2F;system.slice&#x2F;spyserver.service</span><br><span class="line">           └─20788 &#x2F;home&#x2F;pi&#x2F;SPY_Server&#x2F;spyserver</span><br><span class="line"></span><br><span class="line">Apr 10 21:45:26 raspberrypi systemd[1]: Started SPY Server.</span><br></pre></td></tr></table></figure>

<h2 id="Conectar-SDR-a-SPY-Server"><a href="#Conectar-SDR-a-SPY-Server" class="headerlink" title="Conectar SDR# a SPY Server"></a>Conectar SDR# a SPY Server</h2><p>El último paso será conectarnos a nuestro servidor desde SDR#. Para ello seleccionamos <strong>SPY Server Network</strong> en el desplegable de seleción de fuentes e introducimos la dirección IP del servidor de la siguiente forma:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sdr:&#x2F;&#x2F;IP_RASPBERRY:5555</span><br></pre></td></tr></table></figure>
<br>
<img src="/instalacion-spyserver-raspberrypi/conectar.png" class="" title="Conexión">

<p>Por último hacemos clic en la <strong>C</strong> para conectarnos.</p>
<img src="/instalacion-spyserver-raspberrypi/sdr_sharp.png" class="" width="900" title="SDR#">
]]></content>
      <tags>
        <tag>RTL-SDR</tag>
        <tag>Linux</tag>
        <tag>Instalación</tag>
        <tag>Raspberry Pi</tag>
        <tag>SDRSharp</tag>
        <tag>SPY Server</tag>
      </tags>
  </entry>
  <entry>
    <title>Instalación de cable de audio virtual</title>
    <url>/instalacion-virtual-cable-audio/</url>
    <content><![CDATA[<p>Vamos a ver cómo instalar un cable virtual para poder pasar la señal de audio desde un programa que demodule señales a cualquier programa externo. Este cable virtual es simplemente un programa que conecta la salida de audio de un programa con la entrada de otro mediante software.</p>
<span id="more"></span>

<h2 id="Instalacion-de-VB-Cable-en-Windows"><a href="#Instalacion-de-VB-Cable-en-Windows" class="headerlink" title="Instalación de VB-Cable en Windows"></a>Instalación de VB-Cable en Windows</h2><p>Existen distintos programas que realizan esta operación, pero en este tutorial usaremos la alternativa gratuita (Donationware) <strong>VB-Cable</strong>.</p>
<p>Descargamos el instalador desde la web de VB-Audio desde el siguiente enlace:</p>
<p><a href="https://www.vb-audio.com/Cable/"><center>https://www.vb-audio.com/Cable/</center></a></p>
<img src="/instalacion-virtual-cable-audio/virtual-cable-descarga-windows.jpg" class="" width="900" title="Descarga de VB-Cable">

<p>Hacemos clic en <strong><em>Download</em></strong> y una vez descargado extraemos el contenido del archivo ZIP.</p>
<p>Buscamos ahora el ejecutable <strong>VBCABLE_Setup_x64.exe</strong> o <strong>VBCABLE_Setup.exe</strong>, dependiendo de la arquitectura de nuestro PC, y lo ejecutamos como Administrador.</p>
<img src="/instalacion-virtual-cable-audio/virtual-cable-instalacion.jpg" class="" title="Instalando VB-Cable">

<p>Hacemos clic en <strong>Install Driver</strong> y esperamos a que se complete la instalación. Es posible que nos pida confirmar la instalación de los drivers para poder continuar.<br>Si todo ha ido bien, nos aparecerá un mensaje indicando que se han instalado los drivers correctamente y que debemos reiniciar. Así que reiniciamos nuestro PC y ya tendremos instalado el cable virtual.</p>
<h3 id="Configuracion-de-SDR"><a href="#Configuracion-de-SDR" class="headerlink" title="Configuración de SDR#"></a>Configuración de SDR#</h3><p>Abrimos ahora SDR# y abrimos la configuración de audio.</p>
<img src="/instalacion-virtual-cable-audio/sdrsharp-audio-menu.jpg" class="" title="SDRSharp audio">

<p>Para indicarle a SDR# que saque el audio por el cable virtual, debemos hacer clic en <strong>Output</strong> y seleccionar <strong>[MME] CABLE Input …</strong>.</p>
<img src="/instalacion-virtual-cable-audio/sdrsharp-audio.jpg" class="" title="SDRSharp output">

<p>Ahora cuando iniciemos SDR# el audio saldrá por el cable de audio virtual y para recibirlo en otro programa bastaría con seleccionar el cable virtual como entrada.</p>
<h2 id="Instalacion-de-VB-Cable-en-macOS"><a href="#Instalacion-de-VB-Cable-en-macOS" class="headerlink" title="Instalación de VB-Cable en macOS"></a>Instalación de VB-Cable en macOS</h2><p>Descargamos el instalador desde la web de VB-Audio desde el siguiente enlace:</p>
<p><a href="https://www.vb-audio.com/Cable/"><center>https://www.vb-audio.com/Cable/</center></a></p>
<img src="/instalacion-virtual-cable-audio/virtual-cable-descarga-macos.jpg" class="" width="900" title="Descarga de VB-Cable">

<p>Hacemos clic en <strong><em>Download</em></strong> y una vez descargado ejecutamos el instalador.</p>
<img src="/instalacion-virtual-cable-audio/virtual-cable-instalacion-macos1.jpg" class="" title="Instalación de VB-Cable">

<p>Seguimos los pasos del asistente para instalar VB-Audio.</p>
<img src="/instalacion-virtual-cable-audio/virtual-cable-instalacion-macos2.jpg" class="" title="Instalación de VB-Cable">

<h3 id="Configuracion-de-CubicSDR"><a href="#Configuracion-de-CubicSDR" class="headerlink" title="Configuración de CubicSDR"></a>Configuración de CubicSDR</h3><p>Debemos indicarle a CubicSDR que nos saque el audio utilizando el cable de audio virtual. Para ello hacemos clic en <strong>Audio Out</strong> y seleccionamos <em><strong>VB Audio: VB-Cable</strong></em></p>
<img src="/instalacion-virtual-cable-audio/cubicsdr-audio.jpg" class="" width="900" title="CubicSDR audio output">

<p>Ahora el audio saldrá por el cable de audio virtual y para recibirlo en otro programa bastaría con seleccionar el cable virtual como entrada.</p>
]]></content>
      <tags>
        <tag>Instalación</tag>
        <tag>macOS</tag>
        <tag>Windows</tag>
        <tag>Virtual Audio Cable</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir telemetría de los satélites CAS-4</title>
    <url>/recepcion-cas4/</url>
    <content><![CDATA[<p>Los satélites CAS-4A y CAS-4B son unos micro-satélites construidos por Zhuhai Orbita Control Engineering Ltd. para el sistema orbital de observación terrestre de China. Su principal componente es una cámara de 1,98m de resolución. Estos satélites envían datos de telemetría en VHF, y son estos datos los que vamos a recibir, decodificar y visualizar en este artículo.</p>
<span id="more"></span>

<h2 id="Datos-de-los-satelites"><a href="#Datos-de-los-satelites" class="headerlink" title="Datos de los satélites"></a>Datos de los satélites</h2><table>
<thead>
<tr>
<th>Satélite</th>
<th>ZHUHAI-1 01 (CAS-4A)</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Operador</strong></td>
<td>Zhuhai Orbita Control Engineering Co. Ltd.</td>
</tr>
<tr>
<td><strong>NORAD ID</strong></td>
<td>42761</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>2017-034D</td>
</tr>
<tr>
<td><strong>Tamaño</strong></td>
<td>Microsatélite 494Lx499Wx630H mm (55 Kg)</td>
</tr>
<tr>
<td><strong>Lanzamiento</strong></td>
<td>15 de Junio de 2017</td>
</tr>
<tr>
<td><strong>Señal</strong></td>
<td>Telemetría: 145,835 MHz (AX.25 4,8k Baud GMSK) <br> Baliza: 145,855 MHz (CW) <br> Transpondedor linear: 145,870 MHz (Bajada) - 435,220 MHz (Subida)</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>Satélite</th>
<th>ZHUHAI-1 02 (CAS-4B)</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Operador</strong></td>
<td>Zhuhai Orbita Control Engineering Co. Ltd.</td>
</tr>
<tr>
<td><strong>NORAD ID</strong></td>
<td>42759</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>2017-034B</td>
</tr>
<tr>
<td><strong>Tamaño</strong></td>
<td>Microsatélite 494Lx499Wx630H mm (55 Kg)</td>
</tr>
<tr>
<td><strong>Lanzamiento</strong></td>
<td>15 de Junio de 2017</td>
</tr>
<tr>
<td><strong>Señal</strong></td>
<td>Telemetría: 145,890 MHz (AX.25 4,8k Baud GMSK) <br> Baliza: 145,910 MHz (CW) <br> Transpondedor linear: 145,925 MHz (Bajada) - 435,280 MHz (Subida)</td>
</tr>
</tbody></table>
<img src="/recepcion-cas4/satelite.jpg" class="" width="600" title="Satélites CAS-4">


<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>Los satélites envían los datos de telemetría en las frecuencias <strong>145.835 MHz</strong> (CAS-4A) y <strong>145.890 MHz</strong> (CAS-4B). Para recibir la señal debemos realizar los pasos habituales para el seguimiento de satélites que ya vimos en el artículo <a href="/ajuste-frecuencia-doppler-orbitron/">“Ajuste de frecuencia en recepción de satélites”</a>.</p>
<p>Los datos para DDETracker son los siguientes:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;nfm&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;10000&gt;</span><br><span class="line">radio_tracking_frequency_On</span><br></pre></td></tr></table></figure></p>
<h2 id="Decodificar-la-senal"><a href="#Decodificar-la-senal" class="headerlink" title="Decodificar la señal"></a>Decodificar la señal</h2><p>Estos satélites utilizan el protocolo AX.25 en modo KISS. Para decodificar este modo necesitamos instalar el software <a href="http://uz7.ho.ua/packetradio.htm">Packet-Radio TNC</a> que utiliza la tarjeta de sonido de nuestro ordenador como un modem para AX.25.<br>Podemos descargar el programa desde el siguiente enlace:<br><a href="http://uz7.ho.ua/modem_beta/hs_soundmodem27.zip"><center>Descargar High-Speed SoundModem by UZ7HO</center></a></p>
<p>Una vez descargado el archivo, extraemos el contenido en el directorio que queramos. Posteriormente ejecutamos el archivo <strong><em>hs_soundmodem.exe</em></strong> y se nos abrirá la interfaz del programa.</p>
<p>El siguiente paso es configurar el programa para que reciba el audio desde SDR#. Para ello hacemos clic en <em>Settings</em> y en <strong>Input device</strong> seleccionamos el <a href="/instalacion-virtual-cable-audio/">cable de audio virtual</a>. También debemos activar el <strong>KISS Server Port</strong>.</p>
<img src="/recepcion-cas4/HS_SoundModem_settings.png" class="" width="400" title="Ajustes de HS SoundModem">

<p>Por último, seleccionamos el modo <strong>FSK G3RUH 4800bd</strong> en la ventana principal del programa.</p>
<img src="/recepcion-cas4/HS_SoundModem.png" class="" width="370" title="HS SoundModem">


<h2 id="Procesar-los-datos"><a href="#Procesar-los-datos" class="headerlink" title="Procesar los datos"></a>Procesar los datos</h2><p>Una vez tenemos la parte que decodifica la señal, necesitamos configurar la parte que se va a encargar de procesar los datos en modo KISS decodificados y generar un archivo con todos los mensajes para su posterior visualización. Para ello vamos a usar el software <strong>GetKISS</strong> de <a href="https://www.dk3wn.info/wp/ueber-mich/">DK3WN</a>, que podemos descargar desde el siguiente enlace:<br><a href="https://www.dk3wn.info/files/getkiss.zip"><center>Descargar GetKISS</center></a></p>
<p>Una vez descargado y extraído el contenido, tenemos que editar algunos ajustes en el archivo <strong><em>conf.ini</em></strong>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line"># This is the ini file for GetKISS</span><br><span class="line">#</span><br><span class="line"># use tcp port 52002 for ubuntu decoder and port 8100 for windows soundmodem</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">FILE_PATH &#x3D; D:\Amateurfunk &lt;-- Carpeta en la que se guardarán los datos</span><br><span class="line">#</span><br><span class="line">CALLSIGN &#x3D; DK3WN</span><br><span class="line">#</span><br><span class="line"># use QTH height in km</span><br><span class="line">#</span><br><span class="line">QTH_LAT &#x3D; 49.7 &lt;-- Latitud</span><br><span class="line">QTH_LONG &#x3D; 8.95  &lt;-- Longitud</span><br><span class="line">QTH_HEIGHT &#x3D; 0.2 &lt;-- Altitud en kilómetros</span><br><span class="line">#</span><br><span class="line">TLEFILE &#x3D; D:\Amateurfunk\Orbitron\TLE\amateur.txt &lt;-- Archivo TLE que contenga los satélites CAS-4</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line">#TCP_SERVER &#x3D; 192.168.178.28</span><br><span class="line">#TCP_PORT &#x3D; 52002</span><br><span class="line"></span><br><span class="line">TCP_SERVER &#x3D; localhost</span><br><span class="line">TCP_PORT &#x3D; 8100</span><br></pre></td></tr></table></figure>

<p>Una vez modificado el archivo, iniciamos el programa haciendo clic en <strong>getkiss.exe</strong>. Es posible que nos de algún error al iniciar si no tenemos instalados ciertos componentes Active-X. Para solucionarlo debemos descargar el siguiente archivo que contiene los archivos OCX que suelen faltar:<br><a href="https://www.dk3wn.info/files/ocx.zip"><center>Descargar archivos OCX</center></a></p>
<p>Una vez descargado, extraemos el archivo OCX que falte dentro de la carpeta en la que hemos guardado GetKISS en el paso anterior. Después registramos el archivo OCX en el sistema ejecutando el siguiente comando en una consola del sistema (como Administrador):</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">regsvr32 RUTA_COMPLETA_DEL_ARCHIVO.OCX</span><br></pre></td></tr></table></figure>

<img src="/recepcion-cas4/regsvr32.png" class="" width="800" title="regsvr32">

<p>Si todo ha ido bien, al ejecutar el programa GetKISS nos debe aparecer una ventana como la siguiente:</p>
<img src="/recepcion-cas4/GetKISS.png" class="" width="600" title="GetKISS">

<p>Ahora debemos seleccionar el satélite que vamos a recibir (CAS-4A o CAS-4B). Si el satélite seleccionado está sobre el horizonte, nos aparecerá debajo la posición de este en color verde.</p>
<p>Por último, marcamos la casilla <strong>TCP client</strong>. Si tenemos el programa <strong>HS SounModem</strong> iniciado y correctamente configurado, debe conectarse y mostrar el indicador de color verde.</p>
<h2 id="Recibiendo-el-pase"><a href="#Recibiendo-el-pase" class="headerlink" title="Recibiendo el pase"></a>Recibiendo el pase</h2><p>Si tenemos todos los pasos anteriores correctamente configurados, toca ahora esperar a que pasen los satélites y comenzar a recibir mensajes.</p>
<img src="/recepcion-cas4/CAS-4B.png" class="" width="800" title="CAS-4B">
<br/>
<img src="/recepcion-cas4/CAS-4A.png" class="" width="800" title="CAS-4A">


<h2 id="Decodificando-la-telemetria"><a href="#Decodificando-la-telemetria" class="headerlink" title="Decodificando la telemetría"></a>Decodificando la telemetría</h2><p>Una vez hemos recibido el pase de uno de de estos satélites, y si todo ha ido bien, tendremos un archivo generado con los datos dentro la carpeta que le indicamos a GetKISS en el archivo de configuración. Para visualizar estos datos vamos a usar el programa <strong>CAS-4 Telemetry Beacon Decoder</strong> de <a href="https://www.dk3wn.info/wp/ueber-mich/">DK3WN</a>, que podemos descargar desde el siguiente enlace:<br><a href="https://www.dk3wn.info/files/cas4ab.zip"><center>Descargar CAS-4AB digital telemetry decoder v.0.2</center></a></p>
<p>Una vez descargado, extraemos el contenido y ejecutamos el programa. Puede que nos de problemas con los archivos OCX, pero podemos solucionarlos siguiendo los pasos descritos anteriormente.</p>
<p>Una vez abierto, vamos a <strong>File</strong>, <strong>Open Kissfile</strong> y seleccionamos el archivo <em>.kss</em> que queramos visualizar.</p>
<img src="/recepcion-cas4/decoder.png" class="" width="500" title="CAS-4 Telemetry Decoder">


<h2 id="Agradecimientos"><a href="#Agradecimientos" class="headerlink" title="Agradecimientos"></a>Agradecimientos</h2><p>Gracias a <a href="http://uz7.ho.ua/">Andrei (UZ7HO)</a> y a <a href="https://www.dk3wn.info/wp/ueber-mich/">Mike Rupprecht (DK3WN)</a> por crear y compartir algunos de los programas usados en este artículo.<br>Si te han parecido útiles y quieres agradecer su trabajo, puedes realizarles un donativo desde su web.</p>
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>KISS</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir los datos del instrumental HIRS de los satélites NOAA</title>
    <url>/recepcion-datos-HIRS-satelites-NOAA/</url>
    <content><![CDATA[<p>Como vimos en el artículo <a href="/recepcion-satelites-meteorologicos-NOAA/">“Recepción de satélites meteorológicos NOAA”</a>, es posible recibir las imágenes desde estos satélites meteorológicos con nuestro dispositivo SDR. Estos satélites envían, además de imágenes, datos de medidas de su instrumental de observación HIRS y que también podemos recibir.</p>
<p>El HIRS <em>(High Resolution Infrared Radiation Sounder)</em> es un instrumental de escaneo incremental por líneas diseñado para medir la radiación en 20 bandas espectrales. Esta medición permite calcular el perfil de temperatura vertical de la superficie de la Tierra a una altura aproximada de 40 kilómetros.<br>Los datos multiespectrales del canal visible (0,69 µm), de los siete canales de onda corta (3,7 a 4,6 µm) y de los doce canales de onda larga (6,5 a 15 µm) se obtienen desde el mismo telescopio utilizando una lente rotativa con veinte filtros individuales.</p>
<span id="more"></span>

<h2 id="Datos-de-los-satelites"><a href="#Datos-de-los-satelites" class="headerlink" title="Datos de los satélites"></a>Datos de los satélites</h2><p>Los satélites activos de los que podemos recibir la señal son los siguientes:</p>
<table>
<thead>
<tr>
<th>Satélite</th>
<th>Frecuencia</th>
<th>Estado</th>
</tr>
</thead>
<tbody><tr>
<td>NOAA 15</td>
<td>137.350 Mhz</td>
<td><a href="https://www.ospo.noaa.gov/Operations/POES/NOAA15/hirs.html">Consultar</a></td>
</tr>
<tr>
<td>NOAA 18</td>
<td>137.350 Mhz</td>
<td><a href="https://www.ospo.noaa.gov/Operations/POES/NOAA18/hirs.html">Consultar</a></td>
</tr>
<tr>
<td>NOAA 19</td>
<td>137.770 Mhz</td>
<td><a href="https://www.ospo.noaa.gov/Operations/POES/NOAA19/hirs.html">Consultar</a></td>
</tr>
</tbody></table>
<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>En este ejemplo vamos a ver como recibir estos datos desde Windows, aunque también es posible hacerlo desde cualquier sistema operativo.</p>
<p>El proceso de recepción es similar al de recibir las imágenes, solo que en este caso grabaremos la señal para su posterior demodulación y decodificación.</p>
<p>Lo primero que haremos será configurar Orbitron u otro programa para que nos realice la corrección de la frecuencia durante el pase.</p>
<p>Posteriormente ajustamos el <strong>ancho de banda a 32 KHz</strong> en SDR# y <strong>modo RAW</strong>.</p>
<p>Ahora esperamos a que pase el satélite y cuando tengamos señal comenzamos la grabación de la misma (<strong>solo audio</strong>, el baseband lo desmarcamos). Cuando termine el pase y perdamos la señal detenemos la grabación.</p>
<img src="/recepcion-datos-HIRS-satelites-NOAA/grabacion.jpg" class="" width="900" title="SDR#">


<h2 id="Demodular-la-senal"><a href="#Demodular-la-senal" class="headerlink" title="Demodular la señal"></a>Demodular la señal</h2><p>El siguiente paso es demodular la señal obtenida en el paso anterior. Para ello vamos a utilizar el demodulador <em>Project Desert Tortoise</em> que podemos descargar desde el siguiente enlace:</p>
<p><a href="https://github.com/nebarnix/Project-Desert-Tortoise/archive/master.zip"><center>Project Desert Tortoise - Demodulator</center></a></p>
<p>Una vez descargado, extraemos el contenido del archivo.</p>
<p>Ahora buscamos el archivo de audio del paso anterior (SDR# debe haberlo generado en su carpeta de instalación) y lo copiamos a la carpeta de <em>Project Desert Tortoise</em> que acabamos de extraer.</p>
<img src="/recepcion-datos-HIRS-satelites-NOAA/demodulador.jpg" class="" title="Project Desert Tortoise">

<p>Para demodular el archivo basta con hacer clic encima del archivo de audio y arrastrarlo encima del binario <strong>demodPOES.exe</strong> y soltar. Esto hace que se pase el archivo de audio como parámetro al binario. También podemos hacerlo mediante la línea de comando si queremos.</p>
<p>Cuando el demodulador procese el archivo de audio completo, generará un nuevo archivo con los datos en ese mismo directorio con el nombre <strong><em>minorFrames_xxxx.txt</em></strong>.</p>
<p>Más información sobre el demodulador: <a href="http://wiki.nebarnix.com/wiki/NOAA_POES_TIP_Demodulation">http://wiki.nebarnix.com/wiki/NOAA_POES_TIP_Demodulation</a></p>
<h2 id="Decodificacion"><a href="#Decodificacion" class="headerlink" title="Decodificación"></a>Decodificación</h2><p>El último paso es decodificar los datos obtenidos en el paso anterior. Para ello utilizamos el software <em>NOAA HIRS Decoder</em> que podemos descargar desde la web:</p>
<p><a href="https://noaa_hirs_decoder.surge.sh/download.html"><center>NOAA HIRS Decoder</center></a></p>
<p>Necesitamos tener instalada la máquina virtual de Java para poder ejecutar el software. Podemos descargar la ultima versión desde la <a href="https://www.java.com/es/download/">web oficial de Oracle</a>.</p>
<p>Una vez descargado el <em>NOAA HIRS Decoder</em>, extraemos el contenido en un directorio y copiamos el archivo del paso anterior dentro del mismo.</p>
<p>Ahora le pasamos el archivo <strong><em>minorFrames_xxxx.txt</em></strong> como parámetro al binario <strong>NOAA_HIRS_Decoder.exe</strong> de la misma forma que vimos en el paso anterior (arrastrar y soltar). Si nos da un error, tenemos que abrir una terminal y ejecutarlo pasándole el archivo con la opción <strong>-i</strong>.</p>
<p>Una vez termine el proceso de decodificación veremos los datos dentro del directorio <em>output/minorFrames_xxxx</em>.</p>
<img src="/recepcion-datos-HIRS-satelites-NOAA/decoder.jpg" class="" title="NOAA HIRS Decoder">

<p>Tendremos una serie de imágenes por cada uno de los canales. Estas imágenes son de 56 píxeles de ancho y el largo depende de la duración de la grabación.</p>
<img src="/recepcion-datos-HIRS-satelites-NOAA/Compo.png" class="" title="NOAA HIRS Decoder">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Satélites meteorológicos</tag>
        <tag>NOAA</tag>
        <tag>Meteorología</tag>
      </tags>
  </entry>
  <entry>
    <title>Recepción del satélite FalconSAT-3</title>
    <url>/recepcion-falconsat-3/</url>
    <content><![CDATA[<p>El satélite FalconSAT-3 fue construido entre 2005 y 2006 por cadetes de la academia de la fuerza aérea de Estados Unidos. Desde que fue lanzado en 2007, el satélite ha llevado a cabo dos fases operadas por la academia de la fuerza aérea estadounidense y una tercera fase desde 2017 en la que se abrió su uso para el servicio de radioaficionados. El satélite funciona actualmente como repetidor en modo PACSAT.<br>PACSAT es un término genérico usado para describir un servicio digital para radioaficionados de almacenamiento y distribución por satélite. Este sistema, que utiliza el protocolo AX.25 para los paquetes de datos, permite reenviar mensajes de correo electrónico, telemetría, boletines informativos, etc.<br>En este artículo veremos cómo recibir estos mensajes con nuestro SDR.</p>
<span id="more"></span>

<h2 id="Datos-del-satelite"><a href="#Datos-del-satelite" class="headerlink" title="Datos del satélite"></a>Datos del satélite</h2><table>
<thead>
<tr>
<th>Satélite</th>
<th>FalconSAT-3</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Operador</strong></td>
<td>AMSAT-NA (3ª fase)</td>
</tr>
<tr>
<td><strong>NORAD ID</strong></td>
<td>30776</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>2007-006E</td>
</tr>
<tr>
<td><strong>Tamaño</strong></td>
<td>43,3 cm x 43,3 cm x 78,7 cm (54,3 Kg)</td>
</tr>
<tr>
<td><strong>Lanzamiento</strong></td>
<td>9 de Marzo de 2007</td>
</tr>
<tr>
<td><strong>Señal</strong></td>
<td>Subida: 145,840 MHz, Bajada: 435,103 MHz (9600bps GMSK)</td>
</tr>
<tr>
<td><strong>Web</strong></td>
<td><a href="https://www.amsat.org/falconsat-3/">https://www.amsat.org/falconsat-3/</a></td>
</tr>
</tbody></table>
<img src="/recepcion-falconsat-3/falconsat-3.jpg" class="" width="400" title="FalconSAT-3">


<h2 id="Instalacion-del-software"><a href="#Instalacion-del-software" class="headerlink" title="Instalación del software"></a>Instalación del software</h2><p>Para la recepción de la señal del satélite podemos usar cualquier programa. En este ejemplo se utiliza SDR# para recibir la señal y sacar el audio mediante el cable de audio virtual.</p>
<h3 id="HS-SoundModem"><a href="#HS-SoundModem" class="headerlink" title="HS SoundModem"></a>HS SoundModem</h3><p>Para demodular la señal de audio que recibimos a través del cable de audio virtual, usaremos un software que haga de TNC. Para ello usaremos <a href="http://uz7.ho.ua/packetradio.htm">High-Speed SoundModem de UZ7HO</a>, el cual instalaremos siguiendo los pasos que ya vimos anteriormente para la <a href="/recepcion-cas4/#Decodificar-la-senal">recepción de los satélites CAS-4</a>.</p>
<h3 id="PacSat-decoder"><a href="#PacSat-decoder" class="headerlink" title="PacSat decoder"></a>PacSat decoder</h3><p>Por último, necesitamos instalar el programa que va a decodificar y mostrar los mensajes. Se trata del programa <em>“AMSAT Pacsat Ground Station”</em>, el cual podemos descargar desde el siguiente enlace:</p>
<p><a href="https://www.g0kla.com/pacsat/"><center>AMSAT Pacsat Ground Station Software</center></a></p>
<p>Una vez descargado, extraemos el contenido en cualquier directorio e iniciamos el programa desde el ejecutable “PsatGround.exe”.<br>Necesitamos tener instalada la máquina virtual de Java para poder ejecutar el software. Podemos descargar la ultima versión desde la <a href="https://www.java.com/es/download/">web oficial de Oracle</a>.</p>
<p>Ahora vamos a <em>“File”</em> y <em>“Settings”</em> e introducimos la ruta de los directorios que usaremos para guardar los logs y archivos recibidos, y también los datos de nuestra estación.</p>
<img src="/recepcion-falconsat-3/pacsat-config.jpg" class="" width="500" title="PacSat - Configuración">


<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>Una vez tenemos todo instalado, debemos iniciar los programas en el siguiente orden para dejarlos preparados para recibir el pase.</p>
<ol>
<li><p>Iniciamos HS SoundModem y seleccionamos el modo <strong>FSK G3RUH 9600bd</strong>.</p>
</li>
<li><p>Iniciamos el decoder de PacSat. Este se conectará al socket de HS SoundModem para recibir los mensajes. Veremos que aparece el mensaje <em>“TNC IN FULL DUPLEX”</em> si se ha conectado correctamente.</p>
<img src="/recepcion-falconsat-3/pacsat.jpg" class="" title="PacSat"></li>
<li><p>Por último, iniciamos SDR# y ajustamos el <strong>modo a NFM y un ancho de banda de 10 kHz</strong>.</p>
</li>
</ol>
<p>Una vez comience a recibirse la señal suficiente, veremos que se van decodificando y apareciendo mensajes en el PacSat decoder.</p>
<img src="/recepcion-falconsat-3/recepcion.jpg" class="" width="900" title="Recibiendo señal con SDR#">

<img src="/recepcion-falconsat-3/pacsat-mensajes-recibidos.jpg" class="" title="PacSat - Mensajes recibidos">

<p>Los mensajes pueden contener varias partes y necesitamos recibirlas todas para poder mostrar el mensaje completo. Algunos mensajes pueden requerir de varios pases del satélite para poder descargar todas sus partes.<br>Una vez las tenemos todas, basta hacer doble clic en el mensaje para ver su contenido.</p>
<img src="/recepcion-falconsat-3/pacsat-mensaje.jpg" class="" title="PacSat - Mensaje">

<img src="/recepcion-falconsat-3/pacsat-mensaje2.jpg" class="" title="PacSat - Mensaje">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>PACSAT</tag>
      </tags>
  </entry>
  <entry>
    <title>Recepción del satélite FUNcube-1</title>
    <url>/recepcion-funcube1/</url>
    <content><![CDATA[<p>El satélite FUNcube-1 es un <a href="https://es.wikipedia.org/wiki/CubeSat">CubeSat</a> construido por AMSAT-UK con fines educativos.<br>Como parte de su misión, FUNcube-1 está equipado con distintos sensores que monitorizan el estado del satélite y envía la telemetría por radio. Estos datos pueden ser recibidos con nuestros dispositivos SDR y en este artículo veremos como recibirlos y decodificarlos.</p>
<span id="more"></span>

<h2 id="Datos-del-satelite"><a href="#Datos-del-satelite" class="headerlink" title="Datos del satélite"></a>Datos del satélite</h2><table>
<thead>
<tr>
<th>Satélite</th>
<th>FUNcube-1 (AO-73)</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Operador</strong></td>
<td>AMSAT-UK</td>
</tr>
<tr>
<td><strong>NORAD ID</strong></td>
<td>39444</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>2013-066AE</td>
</tr>
<tr>
<td><strong>Tamaño</strong></td>
<td>1U CubeSat (0,98 Kg)</td>
</tr>
<tr>
<td><strong>Lanzamiento</strong></td>
<td>21 de Noviembre de 2013</td>
</tr>
<tr>
<td><strong>Señal</strong></td>
<td>145,935 MHz (1200 bps BPSK)</td>
</tr>
<tr>
<td><strong>Web</strong></td>
<td><a href="https://funcube.org.uk/">https://funcube.org.uk/</a></td>
</tr>
</tbody></table>
<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>FUNcube-1 envía los datos de telemetría en la frecuencia <strong>145.935 MHz</strong>. Para recibir la señal debemos realizar los pasos habituales para el seguimiento de satélites que ya vimos en el artículo <a href="/ajuste-frecuencia-doppler-orbitron/">“Ajuste de frecuencia en recepción de satélites”</a>.</p>
<p>Los datos para DDETracker son los siguientes:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;USB&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;4800&gt;</span><br><span class="line">radio_center_frequency_Hz&lt;145935000&gt;</span><br><span class="line">radio_tracking_frequency_On</span><br></pre></td></tr></table></figure><br></br></p>
<img src="/recepcion-funcube1/SDRSharp_FUNcube1.png" class="" title="SDRSharp FUNcube-1">


<h2 id="Decodificacion"><a href="#Decodificacion" class="headerlink" title="Decodificación"></a>Decodificación</h2><p>Para decodificar los datos de telemetría vamos a utilizar el software que AMSAT nos facilita para este satélite. Podemos descargarlo desde el siguiente enlace:</p>
<p><a href="http://download.funcube.org.uk/FUNcube_Dashboard_v1044.msi"><center>FUNcube-1 Dashboard v1044</center></a></p>
<p>Una vez descargado, lo instalamos como cualquier aplicación de Windows y lo iniciamos.</p>
<p>El siguiente paso es configurarlo. Para ello hacemos clic en <strong>“File”</strong> y después <strong>“Settings…”</strong>. Esto nos abre la pestaña de configuración del programa.<br>Ahora debemos indicarle que le vamos a pasar el audio desde SDR#, así que seleccionamos nuestro <a href="/instalacion-virtual-cable-audio/">cable de audio virtual</a> en la opción <strong>“Input Device”</strong>.</p>
<img src="/recepcion-funcube1/FUNcube1_Dashboard_config.png" class="" title="FUNcube1 Dashboard Configuración">

<p>Hacemos clic en <strong>“Save”</strong> y ya tendremos el programa listo para recibir la señal desde SDR#.<br>Para iniciar el procesamiento de señal hacemos clic en <strong>“Capture”</strong> y <strong>“Capture From Soundcard”</strong>. Ahora cuando el satélite comience a recibirse en SDR#, podremos ver los datos en tiempo real en el programa.</p>
<p><em>Telemetría:</em></p>
<img src="/recepcion-funcube1/FUNcube1_Dashboard_telem.png" class="" title="FUNcube1 Dashboard Telemetría">

<p><em>Mensajes:</em></p>
<img src="/recepcion-funcube1/FUNcube1_Dashboard_messages.png" class="" title="FUNcube1 Dashboard Mensajes">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Cubesat</tag>
      </tags>
  </entry>
  <entry>
    <title>Recepción de satélites Inmarsat</title>
    <url>/recepcion-inmarsat/</url>
    <content><![CDATA[<p>Inmarsat es un proveedor de comunicaciones vía satélite con sede en Reino Unido. La constelación de satélites Inmarsat se compone actualmente de 12 satélites geoestacionarios que proporcionan cobertura en el 90% del planeta.<br>Inmarsat utiliza sus satélites de tercera y cuarta generación para ofrecer servicios de comunicaciones utilizando la <strong>banda L</strong> (1 a 2 GHz). Estos servicios son:</p>
<ul>
<li><p><strong>AERO</strong>. Es la versión de ACARS a través de satélite. Son mensajes enviados desde los controles aéreos en tierra a los aviones en vuelo.</p>
</li>
<li><p><strong>SafetyNET (SDT-C)</strong>. Es un servicio de comunicaciones por satélite para embarcaciones. Ofrecen servicio de mensajería entre barcos, mensajes de alerta, partes meteorológicos, mensajes de rescate, etc.</p>
</li>
</ul>
<span id="more"></span>

<h2 id="Antenas"><a href="#Antenas" class="headerlink" title="Antenas"></a>Antenas</h2><p>Existen diferentes tipos de antenas que nos permiten recibir la señal de los satélites en la banda L. A continuación veremos algunos ejemplos de antenas que podemos utilizar.</p>
<h3 id="Antena-patch-PCB"><a href="#Antena-patch-PCB" class="headerlink" title="Antena patch PCB"></a>Antena patch PCB</h3><p>Nooelec comercializa una antena específica para Inmarsat y que podemos adquirir desde su tienda en Estados Unidos o desde España a través de Amazon. Para poder recibir la señal tendremos que acompañarla de un LNA.</p>
<table>
<thead>
<tr>
<th>Frecuencia</th>
<th>Ganancia</th>
<th>Especificaciones</th>
</tr>
</thead>
<tbody><tr>
<td>1.546 - 1.554 MHz</td>
<td>~3,5 dBi</td>
<td><a href="https://www.nooelec.com/store/downloads/dl/file/id/91/product/314/inmarsat_antenna_datasheet_revision_1.pdf">Datasheet</a></td>
</tr>
</tbody></table>
<img src="/recepcion-inmarsat/antenna_nooelec.jpg" class="" title="Antena Nooelec">


<h3 id="Antena-patch-air-gap"><a href="#Antena-patch-air-gap" class="headerlink" title="Antena patch air-gap"></a>Antena patch air-gap</h3><p>Esta antena se comercializaba para Outernet (ahora <a href="https://othernet.is/">Othernet</a>) en 2016 y quedó descatalogada cuando cambiaron de satélite y de banda. Aunque ya no se comercializa, podemos encontrar algunas existencias en eBay. Con esta antena necesitaremos un LNA para recibir la señal del satélite.</p>
<table>
<thead>
<tr>
<th>Frecuencia</th>
<th>Ganancia</th>
<th>Especificaciones</th>
</tr>
</thead>
<tbody><tr>
<td>1.525 - 1.559 MHz</td>
<td>8 dBi</td>
<td><a href="https://othernet.is/products/l-band-patch-antenna">Othernet</a></td>
</tr>
</tbody></table>
<img src="/recepcion-inmarsat/antena_patch.jpg" class="" title="Antena Patch">

<p>También podemos optar por construir nuestra propia antena. Las medidas son las que se indican en la siguiente imagen.<br>Podemos encontrar más información sobre esta antena en <a href="https://www.semanticscholar.org/paper/Design-of-a-parabolic-patch-antenna-in-band-L%2C-with-DavidAguirre-Yanyachi/8eaf743c9569e60b1891e964026693766f2727a4">este enlace</a>.</p>
<img src="/recepcion-inmarsat/antena_patch_medidas.jpg" class="" title="Antena Patch medidas">


<h3 id="Antena-patch-activa"><a href="#Antena-patch-activa" class="headerlink" title="Antena patch activa"></a>Antena patch activa</h3><p>El blog <strong>RTL-SDR.com</strong> puso a la venta en 2019 (actualizada en 2021) una antena para banda L que podemos usar para Inmarsat. Podemos adquirirla desde su propia tienda online.<br>Se trata de una antena activa que amplifica y filtra la señal, por lo que no necesitaremos un LNA.</p>
<table>
<thead>
<tr>
<th>Frecuencia</th>
<th>Ganancia</th>
<th>Especificaciones</th>
</tr>
</thead>
<tbody><tr>
<td>1.525 – 1.660 MHz</td>
<td>-</td>
<td><a href="https://www.rtl-sdr.com/preorder-sale-active-l-band-1525-1660-inmarsat-and-iridium-patch-back-in-stock-for-44-95/">RTL-SDR</a></td>
</tr>
</tbody></table>
<img src="/recepcion-inmarsat/antena_activa.jpg" class="" title="Antena de RTL-SDR.com">


<h3 id="Antena-helicoidal"><a href="#Antena-helicoidal" class="headerlink" title="Antena helicoidal"></a>Antena helicoidal</h3><p>Este tipo de antenas se pueden utilizar en combinación con un reflector parabólico o directamente. En los siguientes enlaces podemos ver ambas opciones con ganancias entre comprendidas entre 10 dBi y 16 dBi.</p>
<ul>
<li><p><a href="http://www.satellitenwelt.de/l-band.htm">Antena helicoidal</a>.</p>
<img src="/recepcion-inmarsat/antena_helix.jpg" class="" title="Antena helicoidal"></li>
<li><p><a href="https://diebastelkammer.wordpress.com/2014/09/21/helix-antenne-fur-parabolspiegel-um-inmarsat-zu-empfangen/">Antena helicoidal con reflector parabólico</a>.</p>
<img src="/recepcion-inmarsat/antena_helix_parabolica.jpg" class="" title="Antena helicoidal + parabólica"></li>
</ul>
<h3 id="Antena-helicoidal-cuadrifilar"><a href="#Antena-helicoidal-cuadrifilar" class="headerlink" title="Antena helicoidal cuadrifilar"></a>Antena helicoidal cuadrifilar</h3><p>Estas antenas también nos permiten recibir en la banda L. En el siguiente enlace podemos ver como se pueden usar antenas recicladas de radiosondas Vaisala RS92 para recibir la señal del satélite.</p>
<p><a href="https://rfhead.net/archives/665">Re-purposing Vaisala RS92 Radiosondes as L-Band Active Antennae</a></p>
<img src="/recepcion-inmarsat/antena_qfh.jpg" class="" title="Radiosonda Vaisala">


<h2 id="Amplificacion-de-la-senal"><a href="#Amplificacion-de-la-senal" class="headerlink" title="Amplificación de la señal"></a>Amplificación de la señal</h2><p>Si usamos una antena pasiva para la recepción de señales desde el satélite Inmarsat, vamos a necesitar amplificarla para poder recibirla correctamente. Para ello usaremos un amplificador o LNA. Existen distintos tipos de LNA que abarcan también la banda L, y además existen modelos específicos para Inmarsat.<br>Nooelec ofrece dos modelos de LNA para Inmarsat que podemos adquirir desde su tienda en Estados Unidos o desde Amazon España.</p>
<h3 id="Nooelec-SAWbird-iO"><a href="#Nooelec-SAWbird-iO" class="headerlink" title="Nooelec SAWbird iO"></a>Nooelec SAWbird iO</h3><p>Este modelo de LNA incorpora filtro SAW centrado en la frecuencia en la que tenemos los servicios de Inmarsat y se alimenta mediante Bias-T.</p>
<img src="/recepcion-inmarsat/lna.jpg" class="" title="Nooelec SAWbird iO">

<h3 id="Nooelec-SAWbird-iO-1"><a href="#Nooelec-SAWbird-iO-1" class="headerlink" title="Nooelec SAWbird+ iO"></a>Nooelec SAWbird+ iO</h3><p>Este modelo mejora el filtro de la versión anterior y añade otras dos opciones para poder alimentarlo. Además de la opción de alimentarlo mediante Bias-T, incorpora dos pines para conectarle alimentación externa y también un conector micro-USB para alimentarlo por USB. También ofrece una versión <em>Premium</em> con caja metálica.<br><strong>Este modelo necesita un DC block para poder usarse con dispositivos SDR que no lleven diodo de protección ESD.</strong> De lo contrario, tendremos paso de corriente desde el LNA al dispositivo SDR y no podremos recibir la señal correctamente. Los últimos modelos de Nooelec NESDR SMArt llevan este filtro, pero la mayoría de dispositivos, como por ejemplo el V3 de RTL-SDR.com, no lo llevan.</p>
<img src="/recepcion-inmarsat/lna2.jpg" class="" title="Nooelec SAWbird+ iO">

<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>Para recibir la señal basta con apuntar nuestra antena a cualquiera de los satélites de los que tengamos cobertura. En España tenemos cobertura del satélite <strong>Inmarsat-4A F4 (Alphasat)</strong> en 24.8°E y del <strong>Inmarsat-3 F5</strong> en 54°O.</p>
<img src="/recepcion-inmarsat/inmarsat.jpg" class="" title="Inmarsat">

<p>Ahora iniciamos SDR#, subimos la ganancia del SDR al máximo y ajustamos la antena hasta recibir el máximo posible de señal.</p>
<img src="/recepcion-inmarsat/sdrsharp.jpg" class="" title="SDR# Inmarsat">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Inmarsat</tag>
        <tag>L-Band</tag>
      </tags>
  </entry>
  <entry>
    <title>Recepción del satélite JY1-SAT</title>
    <url>/recepcion-jy1sat/</url>
    <content><![CDATA[<p>El satélite JY1-SAT es un CubeSat construido por estudiantes de varias universidades de Jordania y financiado por la Jordan’s Crown Prince Foundation.<br>JY1-SAT se basa en la plataforma FUNCube, por lo que también se identifica como FUNcube-6. Además de las funciones habituales de FUNcube, el satélite envía imágenes en formato SSDV.<br>En este artículo veremos como recibir la telemetría y las imágenes.</p>
<span id="more"></span>

<h2 id="Datos-del-satelite"><a href="#Datos-del-satelite" class="headerlink" title="Datos del satélite"></a>Datos del satélite</h2><table>
<thead>
<tr>
<th>Satélite</th>
<th>JY1-SAT (JO-97)</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Operador</strong></td>
<td>Crown Prince Foundation</td>
</tr>
<tr>
<td><strong>NORAD ID</strong></td>
<td>43803</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>2018-099AX</td>
</tr>
<tr>
<td><strong>Tamaño</strong></td>
<td>1U CubeSat (1.11 Kg)</td>
</tr>
<tr>
<td><strong>Lanzamiento</strong></td>
<td>3 de Diciembre de 2018</td>
</tr>
<tr>
<td><strong>Señal</strong></td>
<td>145,840 MHz (1200 bps BPSK)</td>
</tr>
<tr>
<td><strong>Web</strong></td>
<td><a href="https://www.cpf.jo/en/our-initiatives/masar">https://www.cpf.jo/en/our-initiatives/masar</a></td>
</tr>
</tbody></table>
<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>JY1-SAT envía los datos de telemetría y las imágenes en la frecuencia <strong>145.840 MHz</strong>. Para recibir la señal debemos realizar los pasos habituales para el seguimiento de satélites.</p>
<p>Los datos para DDETracker son los siguientes:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;USB&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;4800&gt;</span><br><span class="line">radio_center_frequency_Hz&lt;145840000&gt;</span><br><span class="line">radio_tracking_frequency_On</span><br></pre></td></tr></table></figure><br></br></p>
<img src="/recepcion-jy1sat/sdrsharp.png" class="" title="SDRSharp JY1-SAT">


<h2 id="Decodificacion"><a href="#Decodificacion" class="headerlink" title="Decodificación"></a>Decodificación</h2><p>Al ser un proyecto basado en FUNcube, el software es muy similar al que ya hemos usado para el <a href="/recepcion-funcube1/">FUNcube-1</a>. Podemos descargarlo desde el siguiente enlace:</p>
<p><a href="https://download.funcube.org.uk/JY1Sat_Dashboard_v1189.msi"><center>JY1Sat Dashboard v1189</center></a></p>
<p>Una vez descargado, lo instalamos como cualquier aplicación de Windows y lo iniciamos.</p>
<p>El siguiente paso es configurarlo. Para ello hacemos clic en <strong>“File”</strong> y después <strong>“Settings…”</strong>. Esto nos abre la pestaña de configuración del programa.<br>Ahora debemos indicarle que le vamos a pasar el audio desde SDR#, así que seleccionamos nuestro <a href="/instalacion-virtual-cable-audio/">cable de audio virtual</a> en la opción <strong>“Input Device”</strong>.</p>
<img src="/recepcion-jy1sat/config.png" class="" title="JY1-SAT Dashboard Configuración">

<p>Hacemos clic en <strong>“Save”</strong> y ya tendremos el programa listo para recibir la señal desde SDR#.<br>Para iniciar el procesamiento de señal hacemos clic en <strong>“Capture”</strong> y <strong>“Capture From Soundcard”</strong>. Ahora cuando el satélite comience a recibirse en SDR#, podremos ver los datos en tiempo real en el programa.</p>
<p><em>Telemetría:</em></p>
<img src="/recepcion-jy1sat/telem.png" class="" title="JY1-SAT Dashboard Telemetría">

<p><em>Imágenes:</em></p>
<img src="/recepcion-jy1sat/images.png" class="" title="JY1-SAT Dashboard Mensajes">


<p>Las imágenes necesitan algunos pases para recibirlas completamente.</p>
<img src="/recepcion-jy1sat/JY1SatAudioId7.jpg" class="" title="JY1SatAudioId7">
</br>
<img src="/recepcion-jy1sat/JY1SatAudioId8.jpg" class="" title="JY1SatAudioId8">
</br>
<img src="/recepcion-jy1sat/JY1SatAudioId9.jpg" class="" title="JY1SatAudioId9">
</br>
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Cubesat</tag>
      </tags>
  </entry>
  <entry>
    <title>Recepción del satélite NAYIF-1</title>
    <url>/recepcion-nayif1/</url>
    <content><![CDATA[<p>El satélite NAYIF-1 es un CubeSat construido por estudiante de la <em>Emirates Institution for Advanced Science and Technology (EIAST)</em>, en colaboración con la <em>American University of Sharjah (AUS)</em>.<br>NAYIF-1 se basa en la plataforma FUNCube, por lo que también se identifica como FUNcube-5.<br>Este satélite envía datos de telemetría y mensajes que pueden ser recibidos con nuestros dispositivos SDR. En este artículo veremos cómo recibirlos y decodificarlos.</p>
<span id="more"></span>

<h2 id="Datos-del-satelite"><a href="#Datos-del-satelite" class="headerlink" title="Datos del satélite"></a>Datos del satélite</h2><table>
<thead>
<tr>
<th>Satélite</th>
<th>NAYIF-1 (EO-88)</th>
</tr>
</thead>
<tbody><tr>
<td><strong>Operador</strong></td>
<td>EIAST y AUS</td>
</tr>
<tr>
<td><strong>NORAD ID</strong></td>
<td>42017</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>2017-008BX</td>
</tr>
<tr>
<td><strong>Tamaño</strong></td>
<td>1U CubeSat (1.32 Kg)</td>
</tr>
<tr>
<td><strong>Lanzamiento</strong></td>
<td>15 de Febrero de 2017</td>
</tr>
<tr>
<td><strong>Señal</strong></td>
<td>145,940 MHz (1200 bps BPSK)</td>
</tr>
<tr>
<td><strong>Web</strong></td>
<td><a href="https://www.mbrsc.ae/satellite-programme/nayif-1">https://www.mbrsc.ae/satellite-programme/nayif-1</a></td>
</tr>
</tbody></table>
<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>NAYIF-1 envía los datos de telemetría en la frecuencia <strong>145.940 MHz</strong>. Para recibir la señal debemos realizar los pasos habituales para el seguimiento de satélites.</p>
<p>Los datos para DDETracker son los siguientes:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;USB&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;4800&gt;</span><br><span class="line">radio_center_frequency_Hz&lt;145940000&gt;</span><br><span class="line">radio_tracking_frequency_On</span><br></pre></td></tr></table></figure><br></br></p>
<img src="/recepcion-nayif1/sdrsharp.png" class="" title="SDRSharp NAYIF-1">


<h2 id="Decodificacion"><a href="#Decodificacion" class="headerlink" title="Decodificación"></a>Decodificación</h2><p>Al ser un proyecto basado en FUNcube, el software es muy similar al que ya hemos usado para el <a href="/recepcion-funcube1/">FUNcube-1</a> y <a href="/recepcion-jy1sat/">JY1-SAT</a>. Podemos descargarlo desde el siguiente enlace:</p>
<p><a href="https://download.funcube.org.uk/Nayif-1_Dashboard_1040_Installer.msi"><center>Nayif-1 Dashboard v1040</center></a></p>
<p>Una vez descargado, lo instalamos como cualquier aplicación de Windows y lo iniciamos.</p>
<p>El siguiente paso es configurarlo. Para ello hacemos clic en <strong>“File”</strong> y después <strong>“Settings…”</strong>. Esto nos abre la pestaña de configuración del programa.<br>Ahora debemos indicarle que le vamos a pasar el audio desde SDR#, así que seleccionamos nuestro <a href="/instalacion-virtual-cable-audio/">cable de audio virtual</a> en la opción <strong>“Input Device”</strong>.</p>
<img src="/recepcion-nayif1/config.png" class="" title="NAYIF-1 Dashboard Configuración">

<p>Hacemos clic en <strong>“Save”</strong> y ya tendremos el programa listo para recibir la señal desde SDR#.<br>Para iniciar el procesamiento de señal hacemos clic en <strong>“Capture”</strong> y <strong>“Capture From Soundcard”</strong>. Ahora cuando el satélite comience a recibirse en SDR#, podremos ver los datos en tiempo real en el programa.</p>
<p><em>Telemetría:</em></p>
<img src="/recepcion-nayif1/telem.png" class="" title="NAYIF-1 Dashboard Telemetría">

<p><em>Mensajes:</em></p>
<img src="/recepcion-nayif1/messages.png" class="" title="NAYIF-1 Dashboard Mensajes">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Cubesat</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir satélites meteorológicos NOAA</title>
    <url>/recepcion-satelites-meteorologicos-NOAA/</url>
    <content><![CDATA[<p>Actualmente existen infinidad de satélites meteorológicos orbitando la Tierra. La mayoría de ellos envían sus imágenes y datos encriptados a las estaciones terrestres, pero existen otros satélites de los que es posible recibir sus imágenes de forma sencilla utilizando un dispositivo SDR. En este artículo veremos como recibir imágenes de los satélites meteorológicos NOAA. Estos satélites pertenecen a la agencia científica estadounidense NOAA (<em>National Oceanic and Atmospheric Administration</em>). Orbitan en una órbita polar y tienen como finalidad recoger datos atmosféricos tales como imágenes de las nubes y superficie terrestre, temperatura y humedad atmosférica y los niveles de ozono en las capas altas de la atmósfera.</p>
<p>Estos satélites envían la información en diferentes frecuencias y modulaciones. En este articulo veremos cómo recibir las imágenes de baja resolución en formato <a href="https://en.wikipedia.org/wiki/Automatic_picture_transmission">APT</a>.</p>
<span id="more"></span>

<img src="/recepcion-satelites-meteorologicos-NOAA/apt.jpg" class="" width="500" title="Imagen APT de satélite NOAA">


<h2 id="Datos-de-los-satelites"><a href="#Datos-de-los-satelites" class="headerlink" title="Datos de los satélites"></a>Datos de los satélites</h2><p>Actualmente podemos recibir imágenes APT desde los siguientes satélites meteorológicos NOAA.</p>
<table>
<thead>
<tr>
<th>Satélite</th>
<th>NOAA 15</th>
<th>NOAA 18</th>
<th>NOAA 19</th>
</tr>
</thead>
<tbody><tr>
<td><strong>NORAD ID</strong></td>
<td>25338</td>
<td>28654</td>
<td>33591</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>1998-030A</td>
<td>2005-018A</td>
<td>2009-005A</td>
</tr>
<tr>
<td><strong>Masa de lanzamiento</strong></td>
<td>1.457 Kg</td>
<td>1.457 Kg</td>
<td>1.440 Kg</td>
</tr>
<tr>
<td><strong>Fecha de lanzamiento</strong></td>
<td>13 de Mayo de 1998</td>
<td>20 de Mayo de 2005</td>
<td>6 de Febrero de 2009</td>
</tr>
<tr>
<td><strong>Señal APT</strong></td>
<td>137,620 MHz</td>
<td>137,9125 MHz</td>
<td>137,100 MHz</td>
</tr>
</tbody></table>
<h2 id="Instalacion-de-WXtoImg"><a href="#Instalacion-de-WXtoImg" class="headerlink" title="Instalación de WXtoImg"></a>Instalación de WXtoImg</h2><p>Existen diferentes programas y utilidades para decodificar la señal APT de estos satélites. En este artículo vamos a utilizar <strong>SDR#</strong> y el software <strong>WXtoImg</strong> para Windows. Podemos descargarlo desde el siguiente enlace (para Windows 10 descargar la versión beta 2.11.2):</p>
<p><a href="https://wxtoimgrestored.xyz/downloads/"><center>Descargar WXtoImg</center></a></p>
<p>Una vez descargado e instalado, realizaremos los siguientes pasos para configurarlo:</p>
<ol>
<li><p>El primer paso será introducir la clave de registro para poder desbloquear todas las funcionalidades. En la misma página desde dónde hemos descargado el programa podemos encontrar los datos para registrarlo.</p>
</li>
<li><p>Introducir los datos de nuestra ubicación. Estos datos los necesita WXtoImg para calcular los pases de los satélites y para colocar la capa de líneas con los contornos. Cuanto más ajustados sean estos valores, mejor se ajustará esta capa a la imagen. Para introducirlos vamos a <strong><em>&quot;Options&quot;</em></strong> y <strong><em>&quot;Ground Station Location…&quot;</em></strong>. En esta ventana introducimos nuestras coordenadas y altitud.</p>
</li>
</ol>
<img src="/recepcion-satelites-meteorologicos-NOAA/wx_ground.jpg" class="" title="WXtoImg">

<ol start="3">
<li>Ajustes de grabación. Tenemos que indicarle a WXtoImg que le vamos a pasar la señal desde SDR# mediante el cable de audio virtual. Para ello vamos a <strong><em>&quot;Options&quot;</em></strong> y <strong><em>&quot;Recording Options&quot;</em></strong>. Aquí seleccionamos nuestro cable de audio virtual.</li>
</ol>
<img src="/recepcion-satelites-meteorologicos-NOAA/wx_recording.jpg" class="" title="WXtoImg">

<ol start="4">
<li>Marcamos la opción de resincronizado en <strong><em>&quot;Options&quot;</em></strong>, <strong><em>&quot;Resync&quot;</em></strong>.</li>
</ol>
<img src="/recepcion-satelites-meteorologicos-NOAA/wx_resync.jpg" class="" title="WXtoImg">

<ol start="5">
<li>Podemos hacer que WXtoImg nos genere las imágenes que queramos añadiendo los datos de la telemetría una vez termine de recibir la imagen del satélite. Para ello vamos a <strong><em>&quot;Options&quot;</em></strong>, <strong><em>&quot;Auto Processing Options…&quot;</em></strong> y marcamos <strong><em>&quot;Create image(s)&quot;</em></strong>. Después hacemos clic en <strong><em>&quot;Image Settings…&quot;</em></strong> y elegimos las imágenes que queramos.</li>
</ol>
<img src="/recepcion-satelites-meteorologicos-NOAA/wx_record.jpg" class="" title="WXtoImg">

<ol start="6">
<li>Por último actualizamos los datos de posición de los satélites en WXtoImg. Vamos a <strong><em>&quot;File&quot;</em></strong> y hacemos clic en <strong><em>&quot;Update Keplers&quot;</em></strong>. Una vez se actualicen, el programa nos mostrará en la parte inferior de la ventana la información del siguiente pase sobre nuestra ubicación.</li>
</ol>
<img src="/recepcion-satelites-meteorologicos-NOAA/wx_siguiente.jpg" class="" title="WXtoImg">

<ol start="7">
<li>Es importante tener la hora del sistema lo mejor ajustada posible, ya que de ello dependerá en gran medida el ajuste de las capas que WXtoImg superpone a la imagen.</li>
</ol>
<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>Para recibir la señal debemos realizar los pasos habituales para el seguimiento de satélites que ya vimos en el artículo <a href="/ajuste-frecuencia-doppler-orbitron/">“Ajuste de frecuencia en recepción de satélites”</a>.</p>
<p>Los datos para DDETracker son los siguientes:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;wfm&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;36000&gt;</span><br><span class="line">radio_tracking_frequency_On</span><br></pre></td></tr></table></figure></p>
<p>Para recibir el pase tenemos que sacar el audio de SDR# mediante el cable de audio virtual y tener WXtoImg abierto. Una vez el satélite comience a verse sobre el horizonte, SDR# iniciará el seguimiento y WXtoImg comenzará a recibir y procesar la señal.</p>
<img src="/recepcion-satelites-meteorologicos-NOAA/sdr_sharp.jpg" class="" title="SDR#">

<p>Es importante asegurarse que el volumen de la salida de SDR# sea el adecuado. Podemos ver el nivel que llega a WXtoImg en la esquina inferior derecha. Para que la imagen se genere correctamente, el indicador de nivel de volumen debe mantenerse en color verde durante todo el pase.</p>
<img src="/recepcion-satelites-meteorologicos-NOAA/wx_recibiendo.jpg" class="" title="WXtoImg">

<p>Al finalizar el pase, WXtoImg dejará de grabar y generará las imágenes que le hemos indicado en el paso 4 de la configuración.</p>
<img src="/recepcion-satelites-meteorologicos-NOAA/wx_terminado.jpg" class="" width="500" title="WXtoImg">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Satélites meteorológicos</tag>
        <tag>NOAA</tag>
        <tag>Windows</tag>
        <tag>Meteorología</tag>
        <tag>WXtoIMG</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir cartas meteorológicas (weather fax)</title>
    <url>/recepcion-weather-fax/</url>
    <content><![CDATA[<p>El radiofacsimil o radiofax es un modo analógico en HF que permite transmitir imágenes monocromáticas mediante ondas de radio. Este modo es el predecesor de SSTV y fue el principal modo de transmisión de imágenes desde sitios remotos (especialmente islas) desde 1930 hasta 1970.</p>
<p>Actualmente se sigue usando para la transmisión de cartas meteorológicas a las embarcaciones en alta mar. En este artículo veremos cómo recibir estas cartas usando nuestro dispositivo SDR.</p>
<span id="more"></span>

<p>Para recibir estas cartas necesitaremos un SDR capaz de sintonizar HF y cualquier software que nos permita recibir y sacar el audio. En este ejemplo usaremos SDR# para la recepción y <a href="http://www.w1hkj.com/">fldigi</a> para decodificar las cartas.</p>
<h2 id="Instalacion-de-fldigi"><a href="#Instalacion-de-fldigi" class="headerlink" title="Instalación de fldigi"></a>Instalación de fldigi</h2><p>Para instalar fldigi simplemente descargamos el instalador correspondiente para nuestro sistema operativo desde el siguiente enlace.</p>
<p><a href="https://sourceforge.net/projects/fldigi/files/fldigi/"><center>Repositorio de fldigi en Sourceforge</center></a></p>
<p>En nuestro caso descargaremos el archivo <strong>fldigi-xxx_setup.exe</strong> para Windows, y una vez descargado lo instalamos usando el propio asistente.</p>
<p>Una vez instalado tenemos que configurarle la fuente de audio. Para ello iniciamos fldigi y vamos a <strong>“Configure”</strong> y <strong>“Config Dialog”</strong>.</p>
<img src="/recepcion-weather-fax/fldigi_config.jpg" class="" title="Configuración de fldigi">

<p>Aquí le indicamos que para la captura utilice el cable de audio virtual.</p>
<img src="/recepcion-weather-fax/fldigi_audio.jpg" class="" title="Selección de fuente de audio en fldigi">

<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>Para recibir las cartas necesitamos sintonizar cualquiera de las frecuencias utilizadas por los distintos servicios. Algunas de estas frecuencias están recogidas en la siguiente tabla.</p>
<table>
<thead>
<tr>
<th>Servicio</th>
<th>Localización</th>
<th align="center">Frecuencias (kHz)</th>
</tr>
</thead>
<tbody><tr>
<td><a href="https://www.dwd.de/EN/specialusers/shipping/broadcast_en/_node.html">Deutscher Wetterdienst (DWD)</a></td>
<td><a href="https://goo.gl/maps/4jPR7uPe3hxsLd3J9">Pinneberg (Alemania)</a></td>
<td align="center">3.855</br>7.880</br>13.882,5</td>
</tr>
<tr>
<td><a href="http://www.users.zetnet.co.uk/tempusfugit/marine/fwoc.htm">Northwood Radio Fax - GYA</a></td>
<td>Northwood (Inglaterra)</td>
<td align="center">2.618,5</br>4.610</br>8.040</br>11.086,5</td>
</tr>
</tbody></table>
<p>El primer paso será seleccionar el modo de recepción correcto en fldigi. Para ellos vamos a <strong>“Op Mode”</strong>, <strong>“WEFAX”</strong> y seleccionamos <strong>WEFAX-IOC576</strong>.</p>
<img src="/recepcion-weather-fax/fldigi_mode.jpg" class="" title="Selección de modo en fldigi">

<p>Ahora buscamos y sintonizamos alguna de las frecuencias en <strong>modo USB y un ancho de banda de 3 kHz</strong>.</p>
<p>Es posible que encontremos la portadora y no recibamos nada. Esto se debe a que las emisiones no son continuas. Podemos consultar el horario de cada transmisión en los enlaces de la tabla anterior.</p>
<img src="/recepcion-weather-fax/fldigi_ready.jpg" class="" width="900" title="fldigi preparado">

<p>Una vez comience la emisión veremos que se va decodificando y mostrando la carta en la pantalla.</p>
<img src="/recepcion-weather-fax/fldigi_receiving.jpg" class="" width="900" title="Recibiendo fax">

<p>Podemos ver todas las cartas recibidas si vamos a <strong>“File”</strong>, <strong>“Folders”</strong> y <strong>“WEFAX images…”</strong>.</p>
<img src="/recepcion-weather-fax/wefax.jpg" class="" title="Fax recibido">
]]></content>
      <tags>
        <tag>HF</tag>
        <tag>Meteorología</tag>
        <tag>Weatherfax</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir satélites meteorológicos Meteor-M</title>
    <url>/recepcion-satelites-meteorologicos-meteor/</url>
    <content><![CDATA[<p>Tras varios años de desarrollo y pruebas, en 1969 se presentó en la antigua URSS la familia de satélites meteorológicos Meteor. Como muchos de los avances tecnológicos soviéticos de esa época, estos satélites tenían un doble propósito, siendo el principal el militar. Durante la Guerra Fría, la unión soviética necesitaba conocer las condiciones meteorológicas actualizadas en todo el mundo para la coordinación de sus bombarderos y flota naval. Tras la presión por parte de los militares, que veían que Estados Unidos creaba sus sistemas de predicción meteorológica vía satélite, la unión soviética decidió finalmente crear su propia red de satélites meteorológicos.</p>
<p>La serie Meteor-M fue planificada para la primera década del siglo XXI e incluiría tres nuevos satélites con dos diseños diferentes. El objetivo principal de los dos primeros satélites (Meteor-M N1 y Meteor-M N2) sería proveer de información meteorológica, así como la monitorización de la capa de ozono, los niveles de radiación en el espacio y la observación de los mares y la capa de hielo. El tercero (Meteor-M N3) incorporaría una antena radar de nueva generación para la observación oceánica.<br>Estos satélites transmiten imágenes en formato <a href="https://en.wikipedia.org/wiki/Low-rate_picture_transmission">LRPT</a> en 137 MHz y en formato <a href="https://en.wikipedia.org/wiki/High-resolution_picture_transmission">HRPT</a> en 1,7 GHz. En este artículo veremos cómo recibir la señal con nuestro dispositivo SDR y obtener las imágenes LRPT.</p>
<span id="more"></span>

<img src="/recepcion-satelites-meteorologicos-meteor/Meteor-M_2.jpg" class="" width="600" title="Meteor-M N2-1">

<p>Más información sobre los satélites Meteor-M en <a href="http://www.russianspaceweb.com/meteor-m.html">este enlace</a> (en inglés).</p>
<h2 id="Datos-de-los-satelites"><a href="#Datos-de-los-satelites" class="headerlink" title="Datos de los satélites"></a>Datos de los satélites</h2><p>Tenemos en órbita tres satélites Meteor-M, pero actualmente solo uno de ellos emite imágenes en LRPT. El último satélite puesto en órbita sufrió a finales de 2019 el impacto de un micro-meteorito que le produjo daños y dejó el sistema de LRPT fuera de servicio. Solo consiguieron restablecer el sistema de HRPT. <a href="https://www.roscosmos.ru/27891/">Enlace a la publicación de Roscosmos.</a></p>
<table>
<thead>
<tr>
<th>Satélite</th>
<th>Meteor-M N1</th>
<th>Meteor-M N2</th>
<th>Meteor-M N2-2</th>
</tr>
</thead>
<tbody><tr>
<td><strong>NORAD ID</strong></td>
<td>35865</td>
<td>40069</td>
<td>44387</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>2009-049A</td>
<td>2014-037A</td>
<td>2019-038A</td>
</tr>
<tr>
<td><strong>Masa de lanzamiento</strong></td>
<td>2.900 Kg</td>
<td>2.900 Kg</td>
<td>2.900 Kg</td>
</tr>
<tr>
<td><strong>Fecha de lanzamiento</strong></td>
<td>17 de Septiembre de 2009</td>
<td>8 de Julio de 2014</td>
<td>5 de Julio de 2019</td>
</tr>
<tr>
<td><strong>Estado LRPT</strong></td>
<td>Inactivo</td>
<td>Operativo(*)</td>
<td>Averiado</td>
</tr>
<tr>
<td><strong>Frecuencia LRPT</strong></td>
<td>-</td>
<td>137,100 MHz</td>
<td>-</td>
</tr>
</tbody></table>
<p><em>(*) El satélite tiene <a href="http://vu2iia-meteor-m2.blogspot.com/2014/10/meteor-m2-images-from-rtl-sdr.html">un fallo</a> en el sistema de compresión de imágenes RAW HRPT a JPEG LRPT. Esto produce unos cortes en las imágenes recibidas.</em></p>
<p>Podemos conocer el estado actual de los satélites en la siguiente página: <a href="http://happysat.nl/Meteor/html/Meteor_Status.html">Meteor Status (por Happysat)</a>.</p>
<h2 id="Metodo-1-SDR-Meteor-Demodulator"><a href="#Metodo-1-SDR-Meteor-Demodulator" class="headerlink" title="Método 1: SDR# + Meteor Demodulator"></a>Método 1: SDR# + Meteor Demodulator</h2><p>Este método es únicamente válido en Windows y tiene la ventaja de que podemos visualizar la imagen recibida en tiempo real.</p>
<h3 id="Instalacion-de-Meteor-Demodulator"><a href="#Instalacion-de-Meteor-Demodulator" class="headerlink" title="Instalación de Meteor Demodulator"></a>Instalación de Meteor Demodulator</h3><p>Vamos a instalar un <em>plugin</em> para SDR# que nos permitirá demodular la señal del satélite en tiempo real. Existen otras formas de demodular dicha señal mediante otro software utilizando la grabación de banda base, pero nos podemos ahorrar estos pasos usando el <em><em>plugin</em></em> <strong>Meteor Demodulator</strong>. Para instalarlo seguiremos los siguientes pasos:</p>
<ol>
<li><p>Descargar el <em>plugin</em> desde el siguiente enlace:<br> <a href="meteor.zip"><center>Meteor Demodulator v2.3</center></a></p>
</li>
<li><p>Vamos a la carpeta <strong>Plugins</strong> dentro del directorio de instalación de SDR# y creamos una carpeta con el nombre “MeteorDemodulator” (o el que queramos). Ahora extraemos el contenido del archivo que hemos descargado dentro de esta nueva carpeta.</p>
</li>
<li><p>Iniciamos SDR# y desplegamos el nuevo <em>plugin</em>.</p>
 <img src="/recepcion-satelites-meteorologicos-meteor/meteor_plugin.jpg" class="" width="300" title="SDR#">

<p> Los ajustes que vamos a utilizar son:</p>
<ul>
<li><p><strong>Modulation type</strong>: aquí le indicamos el tipo de modulación de pendiendo del satélite. Este ajuste lo haremos de forma automática desde DDE Tracker.</p>
</li>
<li><p><strong>SymbolRate</strong>: el satélite usa los modos 72K y 80K de forma aleatoria. Lo dejaremos en <strong>Auto</strong> para que lo detecte automático.</p>
</li>
<li><p><strong>Tracking</strong>: lo marcamos para corregir el efecto <em>Doppler</em> en la señal.</p>
</li>
</ul>
<p> En <em>Output</em> marcamos la opción que vayamos a utilizar para sacar los datos (podemos marcar ambas). Las opciones que tenemos son:</p>
<ul>
<li><strong>TCP Socket</strong>: levanta un socket TCP al que el programa <strong>LRPT Decoder</strong> se conectará y recibirá los datos para decodificar la imagen en tiempo real.</li>
<li><strong>File</strong>: genera un archivo con los datos para procesarlos posteriormente con <strong>LRPT Decoder</strong>. La ubicación de este archivo se la indicamos haciendo clic en <strong>Configure</strong> y <strong>Select folder</strong>.</li>
</ul>
 <img src="/recepcion-satelites-meteorologicos-meteor/meteor_plugin_config.png" class="" title="Meteor Demodulator"></li>
</ol>
<h3 id="Instalacion-de-LRPT-Decoder"><a href="#Instalacion-de-LRPT-Decoder" class="headerlink" title="Instalación de LRPT Decoder"></a>Instalación de LRPT Decoder</h3><p>El programa LRPT Decoder nos va a permitir decodificar los datos obtenidos con el demodulador de Meteor y generar la imagen.<br>Para descargarlo hacemos clic en el siguiente enlace y simplemente extraemos su contenido.</p>
<p><a href="http://happysat.nl/LRPT_Decoder_v56.zip"><center>M2 LRPT Decoder V56</center></a></p>
<p>Como vimos en el apartado anterior, LRPT Decoder es capaz de procesar los datos desde dos fuentes distintas, ya sea desde el socket TCP o desde un archivo. Dependiendo de la opción que elijamos debemos modificar el archivo de configuración <strong>M2_LRPT_Decoder.ini</strong> de una forma u otra. A continuación veremos los ajustes para cada una de las opciones.</p>
<ul>
<li>Ajustes para decodificar mediante <strong>socket</strong>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[IN]</span><br><span class="line">source&#x3D;TCP</span><br><span class="line">mode&#x3D;auto</span><br><span class="line">sat&#x3D;auto</span><br><span class="line">host&#x3D;localhost</span><br><span class="line">port&#x3D;2011</span><br><span class="line"></span><br><span class="line">[OUT]</span><br><span class="line">rgb&#x3D;123.jpg &lt;-- Cambiar por 122.jpg según los canales activos. También se puede cambiar &#39;jpg&#39; por &#39;bmp&#39;.</span><br><span class="line">rgb_q&#x3D;100</span><br><span class="line">mono&#x3D;yes</span><br><span class="line">logs&#x3D;no</span><br><span class="line">APID70&#x3D;no</span><br><span class="line">VCDU&#x3D;no</span><br><span class="line">path&#x3D;C:\SDR\MeteorM2\imágenes</span><br><span class="line"></span><br><span class="line">[FAST]</span><br><span class="line">FORMAT&#x3D;jpg &lt;-- Cambiar por &#39;bmp&#39; para obtener imagen sin comprimir.</span><br><span class="line">R&#x3D;1</span><br><span class="line">G&#x3D;2</span><br><span class="line">B&#x3D;3 &lt;-- Modificar según los canales activos.</span><br></pre></td></tr></table></figure>

<ul>
<li>Ajustes para decodificar mediante <strong>archivo</strong>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[IN]</span><br><span class="line">source&#x3D;man</span><br><span class="line">sat&#x3D;M2</span><br><span class="line">mode&#x3D;72k</span><br><span class="line"></span><br><span class="line">[OUT]</span><br><span class="line">rgb&#x3D;123.jpg &lt;-- Cambiar por 122.jpg según los canales activos. También se puede cambiar &#39;jpg&#39; por &#39;bmp&#39;.</span><br><span class="line">rgb_q&#x3D;100</span><br><span class="line">mono&#x3D;yes</span><br><span class="line">logs&#x3D;no</span><br><span class="line">APID70&#x3D;yes</span><br><span class="line">VCDU&#x3D;no</span><br><span class="line">path&#x3D;C:\SDR\MeteorM2\imágenes</span><br><span class="line"></span><br><span class="line">[FAST]</span><br><span class="line">FORMAT&#x3D;jpg &lt;-- Cambiar por &#39;bmp&#39; para obtener imagen sin comprimir.</span><br><span class="line">R&#x3D;1</span><br><span class="line">G&#x3D;2</span><br><span class="line">B&#x3D;3 &lt;-- Modificar según los canales activos.</span><br></pre></td></tr></table></figure>

<h3 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h3><p>Para recibir la señal debemos realizar los pasos habituales para el seguimiento de satélites que ya vimos en el artículo <a href="/ajuste-frecuencia-doppler-orbitron/">“Ajuste de frecuencia en recepción de satélites”</a>.</p>
<p>Los datos para DDETracker son los siguientes:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;wfm&gt;</span><br><span class="line">radio_center_frequency_Hz&lt;137100000&gt;</span><br><span class="line">radio_frequency_Hz&lt;137100000&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;120000&gt;</span><br><span class="line">QPSK_demodulator_Start</span><br><span class="line">send_tracking_frequency_On</span><br><span class="line">start_programm_Path&lt;C:\SDR\MeteorM2\Decoder\M2_LRPT_Decoder.exe&gt;</span><br></pre></td></tr></table></figure></p>
<p>En este ejemplo se ha usado la opción de enviar los datos por socket, por lo que en los ajustes anteriores se ha añadido el comando <strong>start_programm_Path</strong> para que se inice LRPT Decoder de forma automática cuando se inicie el seguimiento. Si optamos por la decodificación desde el archivo, este comando no es necesario.</p>
<p>Una vez configurado todo correctamente, en el instante en el que el satélite comience a verse por nuestra localización, comenzará el seguimiento automático.</p>
<p>En el momento en que la señal sea detectada por el <em>plugin</em>, este comenzará a demodularla y a procesarla. Veremos que aparece <strong>Locked</strong> en la interfaz.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/sdr_sharp_inicio.jpg" class="" width="900" title="SDR#">
</br>
<img src="/recepcion-satelites-meteorologicos-meteor/sdr_sharp_recibiendo.jpg" class="" width="900" title="SDR#">

<p>Durante el pase podemos ver como LRPT Decoder genera la imagen si hemos optado por sacar los datos por el socket.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/meteor_analizer.jpg" class="" width="900" title="LRPT Decoder">

<p>Una vez termine el pase vamos a LRPT Decoder para generar la imagen final. El satélite tiene seis canales de los cuales utiliza tres de forma simultanea. Los tres primeros corresponden a espectro visible y los tres últimos al espectro infrarrojo. A veces podemos encontrar los tres canales del espectro visible o bien dos del visible uno del infrarrojo. La imagen final a color se puede componer uniendo los tres canales RGB del espectro visible, o bien con dos de ellos.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/meteor_analizer_finalizado.jpg" class="" width="900" title="LRPT Decoder">

<p>Para generarla seleccionamos los canales y hacemos clic en <strong>Generate RGB</strong>. Nos aparecerá una ventana con la vista previa. Ahora hacemos clic en <strong>Save</strong> y seleccionamos el formato de salida de la imagen que se guardará en la ruta que le hemos indicado en el archivo <strong>M2_LRPT_Decoder.ini</strong>.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/meteor_analizer_guardar.jpg" class="" width="800" title="LRPT Decoder">

<h3 id="Correccion-de-la-distorsion-de-la-imagen"><a href="#Correccion-de-la-distorsion-de-la-imagen" class="headerlink" title="Corrección de la distorsión de la imagen"></a>Corrección de la distorsión de la imagen</h3><p>Si abrimos la imagen que hemos recibido veremos que presenta una distorsión en los laterales de la misma. Esta distorsión es posible corregirla de forma sencilla usando el software <strong>Smooth Meteor</strong> que podemos descargar desde el siguiente enlace:</p>
<p><a href="https://leshamilton.co.uk/soft/smoothmeteor-setup.exe"><center>Descargar Smooth Meteor</center></a></p>
<p>Una vez lo tengamos instalado, abrimos la imagen y le aplicamos las rectificaciones necesarias.</p>
<ul>
<li><strong>Flip N/S:</strong> invierte la imagen verticalmente.</li>
<li><strong>Equalise:</strong> aplica un procesado de mejora de la imagen.</li>
<li><strong>Rectify:</strong> elimina la distorsión de la imagen.</li>
</ul>
<img src="/recepcion-satelites-meteorologicos-meteor/smooth_meteor.jpg" class="" title="Smooth Meteor">

<p>Por último, guardamos la imagen en el fomato que queramos haciendo clic en <strong>Save as…</strong>.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/meteor_rectified.jpg" class="" width="300" title="Imagen rectificada">


<h2 id="Metodo-2-Baseband-SatDump"><a href="#Metodo-2-Baseband-SatDump" class="headerlink" title="Método 2: Baseband + SatDump"></a>Método 2: Baseband + SatDump</h2><p>Este método es válido para cualquier sistema operativo, ya que usamos el software multiplataforma <a href="https://github.com/altillimity/SatDump">SatDump</a> para generar la imagen y para grabar el <em>baseband</em> podemos usar cualquier programa SDR.</p>
<h3 id="Instalar-SatDump"><a href="#Instalar-SatDump" class="headerlink" title="Instalar SatDump"></a>Instalar SatDump</h3><p>Si nuestro sistema operativo es Windows, la instalación es tan sencilla como bajarse el programa ya compilado desde el siguiente enlace:</p>
<p><a href="https://github.com/altillimity/SatDump/releases/latest"><center>SatDump releases</center></a></p>
<p>Para Linux o macOS debemos bajarnos el código fuente y compilarlo. Los pasos para hacerlo están explicados en este enlace:</p>
<p><a href="https://github.com/altillimity/SatDump#linux-or-macos"><center>Instalación en Linux/macOS</center></a></p>
<h3 id="Grabar-el-pase"><a href="#Grabar-el-pase" class="headerlink" title="Grabar el pase"></a>Grabar el pase</h3><p>Lo primero que debemos hacer es grabar el pase del satélite. Necesitamos grabar la señal en banda base (<em>baseband</em>) para pasarla a SatDump.<br>Los formatos de <em>baseband</em> que acepta son los siguientes: i8, i16, f32, w8, ZIQ.</p>
<p>En este ejemplo vamos a utilizar SDR# para grabar el pase, pero como ya se ha mencionado anteriormente, se puede hacer con cualquier otro programa.</p>
<p>Grabaremos el pase usando el <em>plugin</em> de grabación de SDR# usando los siguientes ajustes; en formato seleccionamos <strong>16 Bit PCM</strong> (i16) y marcamos solamente la opción de <strong>Baseband</strong>.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/sdr_sharp_recording.jpg" class="" width="300" title="SDR# - Ajustes grabación">

<p>Para evitar generar un archivo enorme, podemos usar las opciones de <em>decimation</em> o reducir el <em>sample rate</em> a 0.9 MSPS. Necesitamos grabar solo un ancho de banda de unos 120 KHz.</p>
<p>Ahora nos movemos a la frecuencia del satélite (no es necesario corregir la desviación de la señal en este método) y cuando veamos que aparece la señal pulsamos sobre <em>“Record”</em> para comenzar a grabarlo. Cuando dejemos de ver la señal paramos la grabación.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/sdr_sharp_recording_baseband.jpg" class="" width="900" title="SDR# - Grabación del pase">

<h3 id="Decodificar-la-imagen"><a href="#Decodificar-la-imagen" class="headerlink" title="Decodificar la imagen"></a>Decodificar la imagen</h3><p>Una vez tenemos nuestro archivo generado se lo pasaremos a SatDump para generar la imagen. En este ejemplo lo haremos usando la interfaz de usuario, pero también es posible hacer lo mismo desde línea de comandos.</p>
<p>Las opciones que debemos seleccionar podemos verlas en la siguiente captura:</p>
<img src="/recepcion-satelites-meteorologicos-meteor/satdump_config.jpg" class="" width="700" title="SatDump - Ajustes">

<p>Una vez introducidas las opciones, hacemos clic en <em>“Start”</em> para que comience el procesado.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/satdump_processing.jpg" class="" width="700" title="SatDump - Procesando archivo">

<p>Una vez termine el procesado, accedemos al directorio de salida que hemos especificado y podremos ver las imágenes generadas.</p>
<img src="/recepcion-satelites-meteorologicos-meteor/satdump_files.jpg" class="" width="700" title="SatDump - Imágenes">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Satélites meteorológicos</tag>
        <tag>Meteorología</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir APRS en macOS con Gqrx</title>
    <url>/recibir-aprs-macos-con-gqrx/</url>
    <content><![CDATA[<p>En esta guía os queremos proponer la recepción de paquetes APRS provenientes de la Estación Espacial (ISS) usando <a href="https://gqrx.dk/">Gqrx</a>.<br>El APRS, es un protocolo de comunicaciones basado en AX.25, usado en el envío de telemetría, paquetes de datos meteorológicos,  posicionamiento GPS, etc. En este caso nos ocuparemos del envío de mensajería entre estaciones de radioaficionados, en la que la Estación Espacial (ISS) es una estación repetidora.</p>
<span id="more"></span>

<p>Vamos a interceptar esa mensajería de dominio público entre las distintas estaciones de radioaficionado que se mantiene en esos pocos minutos que dura el pase de la ISS por nuestro cielo.</p>
<p>Dentro del ecosistema Apple no hay mucha diversidad de programas SDR, pero que en este caso, la suerte nos ha sonreído con GQRX.<br>Es un programa que tiene muchos seguidores, ya que brinda sencillez y no consume muchos recursos. Pero que en este caso nos ofrece todo aquello que necesitamos para la recepción de esa mensajería APRS.</p>
<h2 id="Instalacion-de-Gqrx"><a href="#Instalacion-de-Gqrx" class="headerlink" title="Instalación de Gqrx"></a>Instalación de Gqrx</h2><p>La instalación es sencilla, y más aún para todos aquellos que ya tienen instalado el sistema de administración de paquetes Homebrew previamente.</p>
<p>Si no tienes un administrador de programas, proponemos su instalación siguiendo <a href="https://franyerverjel.com/blog/instalacion-de-homebrew-en-mac">esta guía</a>.</p>
<p>Para la instalación, usando el administrador de paquetes, abrimos una ventana de terminal y escribimos:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install --cask gqrx</span><br></pre></td></tr></table></figure>

<p>Una vez finalizada la instalación, iniciamos desde el icono de la aplicación:</p>
<img src="/recibir-aprs-macos-con-gqrx/icono.png" class="" width="90" title="Gqrx">

<p>En el momento de empezar esta guía la versión del programa es la 2.14.4.</p>
<h2 id="Funcionamiento"><a href="#Funcionamiento" class="headerlink" title="Funcionamiento"></a>Funcionamiento</h2><p>Ya finalizada la instalación y familiarizados con el programa, sintonizamos la frecuencia en la que trabaja la ISS, que en este caso es 145.825.000 Hz.<br>Elegimos el modo WFM (mono) y abrimos el único <em>plugin</em> que trae de serie el programa, y que lo podemos encontrar dentro de la pestaña <strong>Tools</strong> con el título de <strong>AFSK1200 Decoder</strong>.</p>
<img src="/recibir-aprs-macos-con-gqrx/gqrx-menu.png" class="" width="900" title="Gqrx">

<p>Se abrirá una ventana muy simple en la que irán apareciendo los mensajes interceptados y decodificados.</p>
<img src="/recibir-aprs-macos-con-gqrx/mensajes.png" class="" width="800" title="Gqrx - Mensajes">

<p>Y hasta  aquí la guía. Espero que os animéis a intentarlo.</p>
<p>73 para todos.</p>
]]></content>
      <tags>
        <tag>macOS</tag>
        <tag>APRS</tag>
        <tag>ISS</tag>
        <tag>Gqrx</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir APRS</title>
    <url>/recibir-aprs/</url>
    <content><![CDATA[<p>APRS <em>(Automatic Packet Reporting System)</em> es un sistema de radioaficionado para comunicaciones digitales que utiliza tramas <a href="https://es.wikipedia.org/wiki/Protocolo_AX.25">AX.25</a>. Estos paquetes pueden contener cualquier tipo de mensaje, así como también telemetría y datos de estaciones meteorológicas.<br>En este artículo veremos cómo recibir y decodificar estos paquetes usando nuestro dispositivo SDR, tanto los provenientes desde cualquier estación terrestre como los que se pueden recibir desde la Estación Espacial Internacional.</p>
<span id="more"></span>

<img src="/recibir-aprs/SDRSharp.png" class="" width="900" title="Paquete APRS en SDR#">

<h2 id="Instalacion-del-software"><a href="#Instalacion-del-software" class="headerlink" title="Instalación del software"></a>Instalación del software</h2><p>En este artículo usaremos SDR# para recibir la señal y sacar el audio mediante el <a href="/instalacion-virtual-cable-audio/">cable de audio virtual</a>, aunque también podemos usar cualquier otro programa.</p>
<p>Para decodificar y visualizar los paquetes de datos usaremos los programas que vamos a ver a continuación.</p>
<h3 id="SoundModem"><a href="#SoundModem" class="headerlink" title="SoundModem"></a>SoundModem</h3><p>Para decodificar estos paquetes de datos usaremos el software <a href="http://uz7.ho.ua/packetradio.htm">Packet-Radio TNC</a> que utiliza la tarjeta de sonido de nuestro ordenador como un modem para AX.25.<br>Podemos descargarlo desde el siguiente enlace:</p>
<p><a href="http://uz7.ho.ua/modem_beta/soundmodem113.zip"><center>Descargar SoundModem by UZ7HO</center></a></p>
<p>Una vez descargado el archivo, extraemos su contenido en el directorio que queramos.</p>
<p>Posteriormente ejecutamos el archivo <strong><em>soundmodem.exe</em></strong> y se nos abrirá la interfaz del programa.</p>
<p>El siguiente paso es configurar el programa para que reciba el audio desde SDR#. Para ello hacemos clic en <em>Settings</em> y en <strong>Input device</strong> seleccionamos el <a href="/instalacion-virtual-cable-audio/">cable de audio virtual</a>.</p>
<p>Por último, seleccionamos el modo <strong>AFSK AX.25 1200bd</strong> en la ventana principal del programa.</p>
<img src="/recibir-aprs/soundModemMode.png" class="" width="370" title="SoundModem">

<h3 id="UISS"><a href="#UISS" class="headerlink" title="UISS"></a>UISS</h3><p>UISS es un programa que nos permite visualizar los datos contenidos en los paquetes que vamos recibiendo. Si bien el programa anterior ya nos facilita los mensajes decodificados, usaremos UISS para verlos de una forma más clara y poder aprovechar toda la información contenida en ellos.</p>
<p>Lo primero será descargar el programa desde el siguiente enlace:</p>
<p><a href="https://www.qsl.net/on6mu/uissdownload.htm"><center>Descargar UISS by ON6MU</center></a></p>
<p>Una vez descargado lo ejecutamos y seguimos el asistente para instalar el programa. Durante la instalación en el paso de “Select components” nos volverá a instalar una versión antigua de SoundModem. Lo más sencillo es dejar que la instale (aunque no la vamos a utilizar) y así no tendremos que configurar nada más.</p>
<h4 id="UISS-MapView"><a href="#UISS-MapView" class="headerlink" title="UISS-MapView"></a>UISS-MapView</h4><p>También vamos a instalar el módulo <a href="https://www.qsl.net/on6mu/uissmodules.htm#UISSMapView">UISS-MapView</a> para UISS que nos va a permitir visualizar la posición de las estaciones que recibamos en un mapa.<br>Para instalarlo basta con descargar el módulo desde el siguiente enlace y extraerlo el directorio en el que hemos instalado UISS previamente.</p>
<p><a href="https://www.qsl.net/on6mu/download/UIMapView_UISS_Addon.zip"><center>Descargar UISS-MapView</center></a></p>
<p>Por último iniciamos SoundModem y después UISS. La primera vez que iniciemos UISS nos pedirá que introduzcamos nuestro indicativo, si lo tenemos, o cualquier otro texto en caso contrario ya que no vamos a emitir nada.<br>Si todo está correctamente instalado, veremos una ventana como la siguiente en la que podemos leer que UISS se ha conectado correctamente a SoundModem.</p>
<img src="/recibir-aprs/UISS.png" class="" width="500" title="UISS">


<h2 id="Recibir-APRS"><a href="#Recibir-APRS" class="headerlink" title="Recibir APRS"></a>Recibir APRS</h2><p>Con todo ya configurado, es el momento de comenzar a recibir paquetes de datos. Para ello iniciamos SDR# o el programa que vayamos a utilizar y sintonizamos cualquiera de las frecuencias asignadas para APRS. Para la región 1, en la que se encuentra España, tenemos las siguientes frecuencias:</p>
<ul>
<li><strong>144,800 MHz</strong> (Frecuencia principal).</li>
<li>432,500 MHz (Frecuencia alternativa).</li>
</ul>
<p>Para latinoamérica (región 2) la frecuencia es 144,390 MHz.</p>
<p>Usaremos el modo <strong>WFM</strong> y un ancho de banda de <strong>10 KHz</strong>.</p>
<p>Conforme vayan llegando paquetes veremos que se van mostrando por pantalla los mensajes.</p>
<img src="/recibir-aprs/SoundModemDatos.png" class="" width="500" title="SoundModem">

<img src="/recibir-aprs/UISSDatos.png" class="" width="500" title="UISS">

<img src="/recibir-aprs/UISSMap.png" class="" width="500" title="UISS Mapa">

<h2 id="Recibir-APRS-desde-la-ISS"><a href="#Recibir-APRS-desde-la-ISS" class="headerlink" title="Recibir APRS desde la ISS"></a>Recibir APRS desde la ISS</h2><p>La Estación Espacial Internacional (ISS por sus siglas en inglés) lleva a bordo un transpondedor que funciona como repetidor APRS, el cual podemos recibir de una forma muy similar al ejemplo anterior. En este caso la principal diferencia es que tendremos que realizar los pasos habituales para el <a href="/ajuste-frecuencia-doppler-orbitron/">seguimiento de satélites</a>.</p>
<p>Los datos para DDETracker son los siguientes:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;WFM&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;10000&gt;</span><br><span class="line">radio_center_frequency_Hz&lt;145825000&gt;</span><br><span class="line">radio_tracking_frequency_On</span><br></pre></td></tr></table></figure></p>
<p>Una vez comenzamos a recibir el pase de la ISS, veremos que aparecen los mensajes recibidos por pantalla.</p>
<img src="/recibir-aprs/SoundModemDataISS.png" class="" width="500" title="SoundModem">

<img src="/recibir-aprs/UISSDataISS.png" class="" width="500" title="UISS">

<img src="/recibir-aprs/UISSMapISS.png" class="" width="500" title="UISS Mapa">
]]></content>
      <tags>
        <tag>APRS</tag>
        <tag>ISS</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir radio digital mundial (DRM)</title>
    <url>/recibir-drm/</url>
    <content><![CDATA[<p><a href="https://www.drm.org/">Digital Radio Mondiale (DRM)</a>, en español radio digital mundial, es un conjunto de tecnologías de transmisión de audio digital diseñadas para operar sobre las bandas utilizadas actualmente para la radiodifusión analógica en AM (especialmente de onda corta) y FM.<br>DRM ha sido diseñado para poder reutilizar los transmisores analógicos existentes. Las instalaciones como las antenas, alimentadores o amplificadores no necesitan modificación, evitando importantes inversiones.<br>En este artículo veremos cómo recibir emisiones en el estándar DRM30 con nuestro dispositivo SDR.</p>
<span id="more"></span>

<img src="/recibir-drm/logo.png" class="" width="300" title="DRM logo">

<p>Encontraremos las emisiones DRM30 por debajo de los 30 MHz. Habitualmente suelen ser emisiones no continuadas, por lo que no necesariamente vamos a encontrar dichas emisiones siempre. Podemos consultar los horarios actualizados de las mismas en el siguiente enlace:</p>
<p><a href="https://www.drm.org/what-can-i-hear/broadcast-schedule-2/"><center>DRM Broadcast Schedule</center></a></p>
<h2 id="Instalacion-del-software"><a href="#Instalacion-del-software" class="headerlink" title="Instalación del software"></a>Instalación del software</h2><p>En este ejemplo vamos a usar SDR# para recibir la señal y sacar el audio mediante el <a href="/instalacion-virtual-cable-audio/">cable de audio virtual</a>, aunque también podemos usar cualquier otro programa. Para recibir DRM usaremos el software <a href="https://sourceforge.net/projects/drm/">Dream AM/DRM Receiver</a> que podemos descargar desde el siguiente enlace:</p>
<p><a href="https://sourceforge.net/projects/drm/files/dream/2.1.1/"><center>Dream AM/DRM Receiver</center></a></p>
<p>Este programa está disponible para varios sistemas operativos, incluso podemos descargar el código fuente y compilarlo si queremos.<br>Para nuestro ejemplo, descargamos la versión 2.1.1 para Windows (<a href="https://sourceforge.net/projects/drm/files/dream/2.1.1/dream-2.1.1-win32-svn808-df.zip/download">dream-2.1.1-win32-svn808-df.zip</a>). La versión 2.2 es muy similar pero presenta algunos errores de funcionamiento. Si aun así queremos probar esta versión, podemos descargarla desde <a href="https://www.reddit.com/r/RTLSDR/comments/grp6m2/dream_v221_for_windows_with_xheaac_support/">aquí</a>.</p>
<p>Una vez tenemos el archivo descargado, debemos extraer su contenido en la ubicación que queramos.<br>Después necesitamos incluirle las librerías necesarias para que pueda decodificar el audio en formato AAC. Para ello descargamos los dos siguientes archivos DLL y los guardamos en el directorio de Dream:</p>
<ul>
<li><a href="faad2_drm.dll">faad2_drm.dll</a></li>
<li><a href="libfaac.dll">libfaac.dll</a></li>
</ul>
<p>Por último, registramos los archivos DLL en el sistema ejecutando el siguiente comando en una consola del sistema (como Administrador):</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">regsvr32 RUTA_COMPLETA_DEL_ARCHIVO.DLL</span><br></pre></td></tr></table></figure>

<h2 id="Configuracion"><a href="#Configuracion" class="headerlink" title="Configuración"></a>Configuración</h2><p>El siguiente paso es configurar el programa para que reciba el audio desde SDR#. Para ello hacemos clic en <em>Settings</em>, <em>Sound Card</em>, <em>Signal Input</em> y en <em>Device</em> seleccionamos el <strong>cable de audio virtual</strong>.</p>
<img src="/recibir-drm/input.png" class="" width="800" title="Entrada audio">


<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>Una vez tenemos el programa escuchando por el cable de audio virtual, procedemos a sintonizar una emisión de DRM con SDR#. Usaremos el <strong>modo USB</strong> y un <strong>ancho de banda de 10 KHz</strong>.<br>Cuando Dream detecte la señal, veremos datos de la emisión en la ventana y comenzará a escucharse si tenemos señal suficiente. Los tres indicadores señalados en la siguiente imagen deben estar activos para poder escuchar el audio.</p>
<img src="/recibir-drm/dream.png" class="" width="700" title="Dream">


<img src="/recibir-drm/sdrSharp.png" class="" width="900" title="SDR# + Dream">
]]></content>
      <tags>
        <tag>HF</tag>
        <tag>DRM</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir radio movil digital (DMR)</title>
    <url>/recibir-radio-movil-digital-DMR/</url>
    <content><![CDATA[<p>DMR son las siglas de Radio Móvil Digital, y es un estándar internacional especialmente definido para radios de dos vías. El objetivo del estándar DMR es permitir que dispositivos de diferentes fabricantes puedan comunicarse entre sí en una misma red.<br>Esta tecnología es muy utilizada por radioaficionados y es posible recibir estas señales con nuestros dispositivos SDR. En este artículo veremos cómo instalar algunos <em>plugins</em> en SDR# para poder escuchar DMR.</p>
<span id="more"></span>

<img src="/recibir-radio-movil-digital-DMR/dmr-logo.jpeg" class="" width="300" title="Logo DMR">


<h2 id="Simple-DMR"><a href="#Simple-DMR" class="headerlink" title="Simple DMR"></a>Simple DMR</h2><p>El <em>plugin</em> <a href="http://rtl-sdr.ru/page/novyj-plagin-simple-dmr">Simple DMR</a> está diseñado para escuchar DMR sin cifrar y no requiere dependencias ni configuraciones.</p>
<p>La instalación es muy sencilla y podemos resumirla en los pasos descritos a continuación.</p>
<ol>
<li><p>Descargamos los archivos del <em>plugin</em> desde el siguiente enlace:</p>
<p><a href="http://rtl-sdr.ru/uploads/download/dmr.zip"><center>Descargar Simple DMR</center></a></p>
</li>
<li><p>Vamos a la carpeta <strong>Plugins</strong> dentro del directorio de instalación de SDR# y creamos una carpeta con el nombre “SimpleDMR” (o el que queramos). Ahora extraemos el contenido del archivo que hemos descargado dentro de esta nueva carpeta.</p>
<img src="/recibir-radio-movil-digital-DMR/simple-dmr-archivos.jpg" class="" width="700" title="Archivos de Simple DMR"></li>
<li><p>Iniciamos ahora SDR# y mostramos el nuevo <em>plugin</em> haciendo clic en el menú.</p>
<img src="/recibir-radio-movil-digital-DMR/sdrsharp-menu-simple-dmr.jpg" class="" width="900" title="SDR#"></li>
<li><p>Por último, sintonizamos una señal de DMR y activamos el plugin haciendo clic en <strong>“Enabled”</strong>.</p>
<img src="/recibir-radio-movil-digital-DMR/sdrsharp-simple-dmr.jpg" class="" width="900" title="SDR#"></li>
</ol>
<p>Si todo ha ido bien, debemos comenzar a escuchar nada más activar el <em>plugin</em>. Si no se escucha nada, debemos asegurarnos tener la salida de audio por los altavoces y no por el cable de audio virtual.</p>
<p>También es posible escuchar otros modos digitales usando para ello otros <em>plugins</em> muy similares a este y cuya instalación es idéntica. Estos <em>plugins</em> son:</p>
<ul>
<li><a href="http://rtl-sdr.ru/page/novyj-plagin-simple-dpmr">Simple dPMR</a></li>
<li><a href="http://rtl-sdr.ru/page/novyj-plagin-simple-apco">Simple APCO P25</a></li>
</ul>
<h2 id="DSD-Interface"><a href="#DSD-Interface" class="headerlink" title="DSD Interface"></a>DSD Interface</h2><h3 id="Instalacion-de-DSDPlus"><a href="#Instalacion-de-DSDPlus" class="headerlink" title="Instalación de DSDPlus"></a>Instalación de DSDPlus</h3><p>DSDPlus es un decodificador de modos digitales más completo y configurable que el que hemos visto en el apartado anterior. Inluye además otros modos digitales, como son P25, D-STAR, NXDN, etc.</p>
<p>Para instalar DSDPlus, primeramente accedemos a su página web para descargar los archivos necesarios haciendo clic en el siguiente enlace:</p>
<p><a href="https://www.dsdplus.com/download-2/"><center>Descargar DSDPlus</center></a></p>
<p>Ahora descargamos los dos archivos indicados en la siguiente imagen:</p>
<img src="/recibir-radio-movil-digital-DMR/dsd-descarga.jpg" class="" width="600" title="Descarga de DSDPlus">

<p>El contenido del primer archivo lo extraemos en el directorio que queramos. En este ejemplo lo he extraído dentro de la carpeta de instalación de SDR# y dentro de su propia carpeta, a la que he llamado “DSDPlus”.</p>
<img src="/recibir-radio-movil-digital-DMR/dsd-archivos.jpg" class="" width="700" title="Archivos de DSDPlus">

<p>Del segundo archivo solamente vamos a extraer el archivo <strong>lame_enc.dll</strong>, el cual vamos a introducir dentro de la carpeta de instalación de SDR#.</p>
<img src="/recibir-radio-movil-digital-DMR/lame-dll.jpg" class="" width="700" title="Archivo DLL">

<h3 id="Instalacion-del-plugin"><a href="#Instalacion-del-plugin" class="headerlink" title="Instalación del plugin"></a>Instalación del plugin</h3><p>El <em>plugin</em> <a href="http://rtl-sdr.ru/page/plagin-dsd-interface">DSD Interface</a> nos permite iniciar DSDPlus y pasarle el audio desde SDR# de una forma muy sencilla. Para instalarlo seguiremos los pasos descritos a continuación.</p>
<ol>
<li><p>Descargamos el <em>plugin</em> desde el siguiente enlace:</p>
<p><a href="http://rtl-sdr.ru/uploads/download/dsd.zip"><center>Descargar DSD Interface</center></a></p>
</li>
<li><p>Vamos a la carpeta <strong>Plugins</strong> dentro del directorio de instalación de SDR# y creamos una carpeta con el nombre “DSD” (o el que queramos). Ahora extraemos el contenido del archivo que hemos descargado dentro de esta nueva carpeta.</p>
<img src="/recibir-radio-movil-digital-DMR/dsd-plugin-archivos.jpg" class="" width="700" title="Archivos del plugin DSD"></li>
<li><p>Iniciamos ahora SDR# y mostramos el nuevo <em>plugin</em> haciendo clic en el menú.</p>
<img src="/recibir-radio-movil-digital-DMR/dsd-plugin.jpg" class="" width="300" title="DSD Plugin"></li>
<li><p>Hacemos clic en el botón <strong>Configure</strong> y en la ventana de configuración hacemos clic en <strong>“DSD Path”</strong> y le indicamos la ruta del archivo <em>DSDPlus.exe</em> que hemos extraído en el apartado anterior.</p>
<img src="/recibir-radio-movil-digital-DMR/dsd-plugin-configurar.jpg" class="" width="350" title="Configurar DSD">

<p>Hacemos clic en <strong>Ok</strong> para guardar los cambios.</p>
</li>
<li><p>Ahora hacemos clic en el botón <strong>“Start DSD”</strong> del <em>plugin</em> y se nos abrirán una serie de ventanas. Debemos fijarnos en los siguientes datos que veremos en una de las ventanas.</p>
<img src="/recibir-radio-movil-digital-DMR/dsd-plugin-configurar-audio.jpg" class="" width="700" title="Configurar audio DSD">

<p> Necesitamos anotar el número de dispositivo de audio que vamos a utilizar. En este ejemplo vamos a pasar el audio por el cable de audio virtual, por lo que en este caso anotamos el <em>“audio input device #1”</em>. Para la salida queremos que se escuche por los altavoces, así que anotamos <em>“audio output device #1”</em>.</p>
</li>
<li><p>Paramos DSDPlus haciendo clic en el botón <strong>“Stop DSD”</strong> del <em>plugin</em> y le damos a <strong>Configure</strong>. Ahora seleccionamos los dispositivos conforme los hemos anotado en el punto anterior. Una vez seleccionados, hacemos clic en <strong>“Create command line”</strong> para regenerar la linea de comandos con estos nuevos valores.</p>
<img src="/recibir-radio-movil-digital-DMR/dsd-plugin-configurado.jpg" class="" width="350" title="Configurar DSD">

<p> Hacemos clic en <strong>Ok</strong> para guardar los cambios.</p>
</li>
<li><p>Por último, buscamos una señal DMR y nos aseguramos que tengamos la salida de audio de SDR# por el cable de audio virtual. Ahora hacemos clic en el botón <strong>“Start DSD”</strong> y comenzaremos a ver datos en pantalla y se escuchará el audio decodificado.</p>
<img src="/recibir-radio-movil-digital-DMR/sdrsharp-dsd.jpg" class="" width="900" title="DSD Plugin"></li>
</ol>
<p>Si en la ventana aparecen numerosos errores, es posible que debamos ajustar el volumen de audio general de SDR#.</p>
]]></content>
      <tags>
        <tag>SDRSharp</tag>
        <tag>DMR</tag>
        <tag>DSDPlus</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir satélite Es&#39;hail-2/QO-100</title>
    <url>/recibir-satelite-eshail2-qo100/</url>
    <content><![CDATA[<p><a href="https://amsat-dl.org/en/eshail-2-amsat-phase-4-a/">Es’hail-2/Qatar-OSCAR 100</a> es un satélite geoestacionario catarí construido por Mitsubishi Electric que ofrece servicios de retransmisión de televisión para las regiones del Medio Oeste y Norte de África. Además de estos servicios de retransmisión, este satélite incorpora dos transpondedores para comunicaciones de radioaficionado por satélite.</p>
<p>En este artículo veremos como recibir y decodificar la señal de estos transpondedores usando una antena parabólica y nuestro dispositivo SDR.</p>
<span id="more"></span>

<h1 id="Datos-del-satelite"><a href="#Datos-del-satelite" class="headerlink" title="Datos del satélite"></a>Datos del satélite</h1><table>
<thead>
<tr>
<th>Satélite</th>
<th>Es’hail-2/QO-100</th>
</tr>
</thead>
<tbody><tr>
<td><strong>NORAD ID</strong></td>
<td>43700</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>2018-090A</td>
</tr>
<tr>
<td><strong>Posición</strong></td>
<td>26° Este</td>
</tr>
<tr>
<td><strong>Masa de lanzamiento</strong></td>
<td>5.300 Kg</td>
</tr>
<tr>
<td><strong>Fecha de lanzamiento</strong></td>
<td>15 de Noviembre de 2018</td>
</tr>
<tr>
<td><strong>Transpondedores bajada</strong></td>
<td><strong>NB:</strong> 10.489,5 MHz - 10.490 MHz (Pol. V) <br> <strong>WB:</strong> 10.491 MHz - 10.499 MHz (Pol. H)</td>
</tr>
</tbody></table>
<h1 id="Material-necesario"><a href="#Material-necesario" class="headerlink" title="Material necesario"></a>Material necesario</h1><h2 id="Antena"><a href="#Antena" class="headerlink" title="Antena"></a>Antena</h2><p>Para la recepción de este satélite necesitamos una antena parabólica con un disco de al menos 40 centímetros para el transpondedor de banda estrecha y de 80 centímetros para el de banda ancha. El LNB puede ser cualquiera de nuestra elección. Si bien los LNB normales de TV para banda Ku presentan el problema de la desviación de la señal (<em>LNB drift</em>) en el transpondedor de banda estrecha, veremos como resolver este problema usando la opción que <strong>SDR Console</strong> proporciona para ello. Aunque lo más recomendable es utilizar un LNB con TCXO, ya que proporciona una mejor recepción en este caso. El LNB recomendado, y que se utiliza en este ejemplo, es el <a href="https://www.rtl-sdr.com/qo-100-bullseye-tcxo-ultra-stable-lnb-now-available-in-our-store-for-29-95-with-free-shipping/"><strong>Bullseye LNB</strong></a>.</p>
<img src="/recibir-satelite-eshail2-qo100/lnb.jpeg" class="" width="600" title="Bullseye LNB">

<h2 id="Bias-Tee"><a href="#Bias-Tee" class="headerlink" title="Bias-Tee"></a>Bias-Tee</h2><p>Para hacer funcionar el LNB vamos a necesitar alimentarlo con una tensión de 13V a 18V. Los dispositivos SDR normales pueden proporcionar hasta un máximo de 4,5V, por lo que vamos a requerir de otra forma de alimentación. Podemos encontrar muchas formas distintas de hacerlo si buscamos por internet (inyectores de tensión de TV por satélite, receptores de TV por satélite, etc.), pero en este ejemplo vamos a usar un Bias-Tee externo. Podemos adquirir fácilmente estos dispositivos en cualquier sitio y su coste no es muy elevado (unos 14€).</p>
<img src="/recibir-satelite-eshail2-qo100/biast.jpeg" class="" width="400" title="Bias-Tee">

<p>Para alimentar el LNB necesitaremos una fuente que nos pueda proporcionar dos voltajes distintos. Unos 13V a 14V para activar la polarización vertical y unos 17V a 18V para la horizontal.</p>
<h2 id="SDR"><a href="#SDR" class="headerlink" title="SDR"></a>SDR</h2><p>Para la recepción en estas frecuencias podemos usar cualquier SDR, ya que el propio LNB actúa como un <em>Downconverter</em>, reduciendo la frecuencia de entrada a un rango de salida que comienza en 739MHz y que la mayoría de los dispositivos SDR reciben sin ningún problema.</p>
<h1 id="Instalacion-y-orientacion-de-la-antena"><a href="#Instalacion-y-orientacion-de-la-antena" class="headerlink" title="Instalación y orientación de la antena"></a>Instalación y orientación de la antena</h1><p>El satélite esta situado en los 26° Este. Para orientar nuestra antena podemos usar algunas aplicaciones existentes para móviles, o bien utilizar una <a href="https://eshail.batc.org.uk/point/">aplicación online</a> y una brújula.</p>
<p>Una vez colocada y orientada (parcialmente, ya que posiblemente después haya que afinar para mejorar la recepción), vamos a realizar la conexión con nuestro SDR. Para ello necesitamos conectar el LNB (conector verde si usamos el Bullseye) a la entrada del Bias-Tee marcada con RF+DC y el SDR a la salida marcada con RF. En este ejemplo se ha utilizado un cable coaxial para TV con dos conectores F y un adaptador a SMA para conectarlo al Bias-Tee.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-biast.jpeg" class="" width="900" title="Conexiones SDR, Bias-Tee y LNB">

<h1 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h1><p>Como ya se ha mencionado anteriormente, el satélite incorpora dos transpondedores para su uso por radioaficionados. Un transpondedor lineal de banda estrecha (<em>Narrow Band</em>) en polarización vertical y otro de banda ancha (<em>Wide Band</em>) para televisión digital de radioaficionado (DATV) en polarización horizontal. Para seleccionar el transpondedor bastará con cambiar la tensión de alimentación del LNB en cada caso.</p>
<h2 id="Transpondedor-NB"><a href="#Transpondedor-NB" class="headerlink" title="Transpondedor NB"></a>Transpondedor NB</h2><p>En la siguiente imagen podemos ver la distribución de las bandas en este transpondedor.</p>
<p><img src="https://amsat-dl.org/wp-content/uploads/2020/02/AMSAT-QO-100-NB-Transponder-Bandplan-Graph-1140x641.png" alt="QO-100 NB Bandplan © AMSAT-DL"></p>
<p>Más información en la <a href="https://amsat-dl.org/en/new-qo-100-band-plan/">página web de AMSAT-DL</a>.</p>
<h3 id="Recepcion-con-SDR"><a href="#Recepcion-con-SDR" class="headerlink" title="Recepción con SDR#"></a>Recepción con SDR#</h3><p>Para recibir la señal del satélite iniciamos SDR# y sintonizamos la frecuencia de 739,770 MHz. Si todo está correctamente conectado y la antena medianamente orientada, deberíamos poder ver la señal de la baliza del satélite. Podemos usar la misma para ajustar nuestra antena lo mejor posible y recibir el máximo de señal.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-sharp-beacon.jpeg" class="" width="900" title="Baliza QO-100">

<p>Ahora vamos a aplicar el desplazamiento en SDR# para que las frecuencias se correspondan con las reales del satélite. Esto no es imprescindible, pero nos hará más fácil la búsqueda e identificación de las mismas. Para ello basta con restar a la frecuencia central de la baliza (10.489,750 MHz) la frecuencia en la que nos encontramos dicha señal en el programa (739,771 MHz en nuestro caso).</p>
<center><b>10.489.750.000 Hz - 739.771.000 Hz  = 9.749.979.000 Hz</b></center>

<p>Por último, introducimos este resultado en el campo <em>Shift</em> y lo activamos para aplicar el desplazamiento.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-sharp-recibiendo.jpeg" class="" width="900" title="Recepción QO-100">

<h3 id="Recepcion-con-SDR-Console"><a href="#Recepcion-con-SDR-Console" class="headerlink" title="Recepción con SDR Console"></a>Recepción con SDR Console</h3><p>Como ya se mencionó anteriormente, si estamos usando un LNB que no tenga TCXO es posible que veamos que las señales se desplazan continuamente, lo que hace muy difícil recibirlas correctamente. Para solucionar este inconveniente mediante <em>software</em> podemos usar una utilidad que incorpora el programa <a href="https://www.sdr-radio.com/download">SDR Console</a>.<br>Seguiremos los pasos indicados en su <a href="https://www.sdr-radio.com/EsHail-2">página web</a> y que se describen a continuación.</p>
<p>El primer paso es habilitar que se muestren las frecuencias superiores a 9 GHz. Para ello vamos a los ajustes y marcamos el rango indicado en la siguiente imagen.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-console-ajustar-rango.jpeg" class="" width="900" title="SDR Console - Ajuste rango">

<p>El siguiente paso es aplicar el desplazamiento de la señal. Para introducir el valor de desplazamiento debemos editar los valores de definición de nuestro dispositivo SDR. Para modificar este valor seleccionamos nuestra radio y le damos a <strong>Definitions</strong> y en la ventana que aparece marcamos <strong>Converter selection</strong> y hacemos clic en <strong>Edit</strong>.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-console-add-converter.jpeg" class="" width="900" title="SDR Console - Desplazamiento">

<p>Ahora introducimos el valor de desplazamiento que vimos como calcular en el apartado anterior.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-console-set-converter.jpeg" class="" width="700" title="SDR Console - Converter">

<p>Hacemos clic en <strong>Save</strong> y seleccionamos ahora el nuevo <em>converter</em> que acabamos de crear.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-console-seleccionar-converter.jpeg" class="" width="500" title="SDR Console - Converter">

<p>Por último, vamos a activar la utilidad de corrección de frecuencia usando la baliza. Para ello vamos a <strong>“View”</strong> en el menú de opciones, le damos a <strong>“Select”</strong> y activamos la opción <strong>“Geostationary Beacon”</strong>. Nos pedirá reiniciar el programa.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-console-geo-beacon-activar.jpeg" class="" width="900" title="SDR Console">

<p>Una vez se ha reiniciado el programa, sintonizamos la frecuencia de la baliza y después accedemos a esta nueva opción que acabamos de habilitar. Ahora hacemos clic en el icono del círculo indicado en la siguiente imagen para iniciar la visualización del espectro.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-console-geo-beacon-iniciar.jpeg" class="" width="900" title="SDR Console">

<p>El objetivo ahora es seleccionar la baliza haciendo clic en el centro de la señal (podemos usar los botones ⊕ y ⊝ para hacer zoom). Una vez la señal esté marcada, hacemos clic en el icono ▶ para comenzar la corrección.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-console-recibiendo.jpeg" class="" width="900" title="SDR Console">


<h3 id="Decodificar-telemetria"><a href="#Decodificar-telemetria" class="headerlink" title="Decodificar telemetría"></a>Decodificar telemetría</h3><p>Es posible decodificar la señal de la baliza PSK que hemos visto en los apartados anteriores. Esta baliza transmite telemetría y datos del satélite y de la estación de control terrestre.</p>
<p>Usaremos el programa <strong>AO40Rcv</strong> que podemos descargar desde el siguiente enlace:</p>
<p><a href="https://www.moetronix.com/ae4jy/ao40rcv.htm"><center>Descargar AO40Rcv</center></a></p>
<p>Lo primero es sintonizar la señal en modo <strong>USB</strong> y un ancho de banda de 1,5KHz. Sacamos el audio por el cable de audio virtual.</p>
<img src="/recibir-satelite-eshail2-qo100/sdr-sharp-beacon-decode.jpeg" class="" width="900" title="Baliza telemetría QO-100">

<p>Ahora iniciamos el programa y seleccionamos como entrada de audio el cable de audio virtual.</p>
<img src="/recibir-satelite-eshail2-qo100/beacon-decoder-input.jpeg" class="" width="350" title="SDR Console">

<p>Veremos que ahora le llega la señal al programa.</p>
<img src="/recibir-satelite-eshail2-qo100/beacon-decoder-signal.jpeg" class="" width="800" title="SDR Console">

<p>Una vez se sincronice la señal comenzaremos a visualizar los datos.</p>
<img src="/recibir-satelite-eshail2-qo100/beacon-decoder-status.jpeg" class="" width="800" title="SDR Console">

<h2 id="Transpondedor-WB"><a href="#Transpondedor-WB" class="headerlink" title="Transpondedor WB"></a>Transpondedor WB</h2><p>La distribución de este transpondedor se muestra en la siguiente imagen.</p>
<p><img src="https://wiki.batc.org.uk/images/2/2b/V3.0_Graphic_Final.JPG" alt="QO-100 WB Bandplan © BATC"></p>
<p>Más información en la <a href="https://wiki.batc.org.uk/QO-100_WB_Bandplan">página web de BATC</a>.</p>
<p>Podemos consultar el estado en tiempo real del transpondedor en el siguiente enlace.</p>
<p><a href="https://eshail.batc.org.uk/wb/"><center>Qatar-OSCAR 100 Wideband Spectrum Monitor</center></a></p>
<p>Para decodificar las señales DATV usaremos el software <strong><em>DVB-S2 Demod GUI</em></strong> que el usuario <a href="https://forum.amsat-dl.org/cms/index.php?user/248-swl-markro92/">SWL-markro92</a> publica regularmente en el <a href="https://forum.amsat-dl.org/index.php?thread/101-software-dvb-s-demodulator/">foro de AMSAT-DL</a>. Podemos descargar la última versión desde el siguiente enlace:</p>
<p><a href="http://v.1337team.tk/dvb-s_gui_amsat.zip"><center>Descargar DVB-S2 Demod GUI</center></a></p>
<p>También necesitaremos un programa que nos permita reproducir video por red, como por ejemplo <a href="https://www.videolan.org/vlc/index.es.html">VLC media player</a>.</p>
<p>El primer paso será cambiar la polarización del LNB a horizontal para recibir este transpondedor. A continuación, iniciamos el programa <em>DVB-S2 Demod GUI</em> que hemos descargado y esperamos a que cargue todas las librerías necesarias. Durante el inicio debe detectar nuestro SDR sin problemas. Soporta actualmente los dispositivos RTL-SDR, AirSpy y Hackrf.</p>
<p>Una vez iniciado, nos aseguramos que nuestro SDR aparece seleccionado y hacemos clic en <strong>Open Device</strong>.<br>Ahora sintonizamos una frecuencia (sin la correción del desplazamiento del LNB) en la que se esté emitiendo una señal en DATV y seleccionamos el valor de <em>sym_rate</em> correcto. Podemos consultar estos valores en la web que monitoriza en tiempo real el transpondedor y que se ha mencionado anteriormente. Los demás valores debemos configurarlos de forma aproximada tal y como se muestran en la siguiente imagen (los marcados en rojo). Para conseguir demodular correctamente la señal, es posible que debamos jugar con la ganancia del SDR (indicado en azul).</p>
<img src="/recibir-satelite-eshail2-qo100/datv-config.jpeg" class="" width="700" title="DVB-S2 Demod GUI">

<p>Una vez consigamos sintonizar correctamente y la señal se esté demodulando, veremos que aparecen los cuatro puntos bien diferenciados en el <em>IQ Plot</em> y abajo la etiqueta de <em>sync_confidence</em> cambia a color verde. En este punto es cuando activamos la salida de video. Para ello en la opción <em>Recording/Network</em> seleccionamos UDP o TCP para activarla. Por último, iniciamos VLC y abrimos la dirección de red para comenzar la visualización; en nuestro ejemplo <em>tcp://127.0.0.1:8888</em>.</p>
<img src="/recibir-satelite-eshail2-qo100/datv-promo.jpeg" class="" width="900" title="DVB-S2 Demod GUI - Beacon">

<img src="/recibir-satelite-eshail2-qo100/datv-500.jpeg" class="" width="900" title="DVB-S2 Demod GUI - Señal DATV">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>SDRSharp</tag>
        <tag>Es&#39;hail-2/QO-100</tag>
        <tag>SDR Console</tag>
        <tag>DATV</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir satélites meteorológicos NOAA en Linux</title>
    <url>/recibir-satelites-meteorologicos-NOAA-linux/</url>
    <content><![CDATA[<p>En el artículo <a href="/recepcion-satelites-meteorologicos-NOAA/">“Recibir satélites meteorológicos NOAA”</a> vimos cómo recibir imágenes en formato APT desde los satélites meteorológicos NOAA. El proceso para la recepción y decodificación se realizó íntegramente en Windows, y en este artículo veremos como realizar el mismo proceso usando Linux (Ubuntu) como sistema operativo.</p>
<span id="more"></span>

<img src="/recibir-satelites-meteorologicos-NOAA-linux/noaa18.jpg" class="" width="500" title="NOAA 18">

<h2 id="Datos-de-los-satelites"><a href="#Datos-de-los-satelites" class="headerlink" title="Datos de los satélites"></a>Datos de los satélites</h2><p>Actualmente podemos recibir imágenes APT desde los siguientes satélites meteorológicos NOAA.</p>
<table>
<thead>
<tr>
<th>Satélite</th>
<th>NOAA 15</th>
<th>NOAA 18</th>
<th>NOAA 19</th>
</tr>
</thead>
<tbody><tr>
<td><strong>NORAD ID</strong></td>
<td>25338</td>
<td>28654</td>
<td>33591</td>
</tr>
<tr>
<td><strong>COSPAR ID</strong></td>
<td>1998-030A</td>
<td>2005-018A</td>
<td>2009-005A</td>
</tr>
<tr>
<td><strong>Masa de lanzamiento</strong></td>
<td>1.457 Kg</td>
<td>1.457 Kg</td>
<td>1.440 Kg</td>
</tr>
<tr>
<td><strong>Fecha de lanzamiento</strong></td>
<td>13 de Mayo de 1998</td>
<td>20 de Mayo de 2005</td>
<td>6 de Febrero de 2009</td>
</tr>
<tr>
<td><strong>Señal APT</strong></td>
<td>137,620 MHz</td>
<td>137,9125 MHz</td>
<td>137,100 MHz</td>
</tr>
</tbody></table>
<h2 id="Instalacion-de-WXtoImg"><a href="#Instalacion-de-WXtoImg" class="headerlink" title="Instalación de WXtoImg"></a>Instalación de WXtoImg</h2><p>Disponemos de diferentes formas para decodificar las imágenes APT de estos satélites. En este artículo vamos a utilizar <strong>WXtoImg</strong> al que le pasaremos el audio para generar la imagen en tiempo real. Podemos descargarlo desde el siguiente enlace (descargar la versión beta 2.11.2 para la distribución Linux que usemos):</p>
<p><a href="https://wxtoimgrestored.xyz/downloads/"><center>Descargar WXtoImg</center></a></p>
<p>En esta guía estamos usando la última versión de Ubuntu para escritorio, así que descargaremos el paquete <em>.deb</em> correspondiente.</p>
<p>La instalación la haremos en modo gráfico, simplemente abriendo el archivo descargado con el gestor de paquetes de Ubuntu y haciendo clic en ‘Instalar’.</p>
<img src="/recibir-satelites-meteorologicos-NOAA-linux/wxtoimg_instalar.jpg" class="" width="900" title="Instalación de WXtoIMG">

<p>Cuando finalice la instalación, iniciamos el programa ejecutando el siguiente comando desde una terminal:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">xwxtoimg</span><br></pre></td></tr></table></figure>

<p>Una vez se inicie el programa, seguiremos los siguientes pasos para configurar los ajustes básicos necesarios:</p>
<ol>
<li><p>El primer paso será introducir la clave de registro para poder desbloquear todas las funcionalidades. En la misma página desde dónde hemos descargado el programa podemos encontrar los datos para registrarlo.</p>
</li>
<li><p>Introducir los datos de nuestra ubicación. Estos datos los necesita WXtoImg para calcular los pases de los satélites y para colocar la capa de líneas con los contornos. Cuanto más ajustados sean estos valores, mejor se ajustará esta capa a la imagen. Para introducirlos vamos a <strong><em>&quot;Options&quot;</em></strong> y <strong><em>&quot;Ground Station Location…&quot;</em></strong>. En esta ventana introducimos nuestras coordenadas y altitud.</p>
</li>
</ol>
<img src="/recibir-satelites-meteorologicos-NOAA-linux/wxtoimg_location.jpg" class="" width="500" title="WXtoIMG - Ajustes GS">

<ol start="3">
<li>Ajustes de grabación. Tenemos que indicarle a WXtoImg que le vamos a pasar la señal de audio mediante un cable de audio virtual (veremos más adelante cómo hacerlo). Para ello vamos a <strong><em>&quot;Options&quot;</em></strong> y <strong><em>&quot;Recording Options&quot;</em></strong>. Aquí seleccionamos “Default audio” en <em>soundcard</em>.</li>
</ol>
<img src="/recibir-satelites-meteorologicos-NOAA-linux/wxtoimg_recording_options.jpg" class="" width="600" title="WXtoIMG - Recording options">

<ol start="4">
<li><p>Marcamos la opción de resincronizado en <strong><em>&quot;Options&quot;</em></strong>, <strong><em>&quot;Resync&quot;</em></strong>.</p>
</li>
<li><p>Podemos hacer que WXtoImg nos genere las imágenes que queramos añadiendo los datos de la telemetría una vez termine de recibir la imagen del satélite. Para ello vamos a <strong><em>&quot;Options&quot;</em></strong>, <strong><em>&quot;Auto Processing Options…&quot;</em></strong> y marcamos <strong><em>&quot;Create image(s)&quot;</em></strong>. Después hacemos clic en <strong><em>&quot;Image Settings…&quot;</em></strong> y elegimos las imágenes que queramos.</p>
</li>
<li><p>Por último actualizamos los datos de posición de los satélites en WXtoImg. Vamos a <strong><em>&quot;File&quot;</em></strong> y hacemos clic en <strong><em>&quot;Update Keplers&quot;</em></strong>. Una vez se actualicen, el programa nos mostrará en la parte inferior de la ventana la información del siguiente pase sobre nuestra ubicación.</p>
</li>
<li><p>Es importante tener la hora del sistema lo mejor ajustada posible, ya que de ello dependerá en gran medida el ajuste de las capas que WXtoImg superpone a la imagen.</p>
</li>
</ol>
<h2 id="Cable-de-audio-virtual"><a href="#Cable-de-audio-virtual" class="headerlink" title="Cable de audio virtual"></a>Cable de audio virtual</h2><p>Necesitamos crear un cable de audio virtual para poder pasar el audio desde el programa de SDR a WXtoImg para que genere la imagen.<br>Existen diferentes formas de hacer este procedimiento. En Linux tenemos una forma nativa de generar un cable virtual activando el <em>loopback</em> del kernel ALSA. Para hacerlo simplemente ejecutamos el siguiente comando en una terminal:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo modprobe snd-aloop</span><br></pre></td></tr></table></figure>

<p>Esto nos redirige la salida de audio general del sistema a una entrada de audio. Podemos verificar este cambio si vamos los ajustes de audio de Ubuntu.<br>Este cambio no es permanente y se perderá la próxima vez que iniciemos el equipo. Para hacerlo fijo debemos añadir un cambio en el sistema para que cargue nuevamente este módulo al iniciar. Para ello ejecutamos el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo echo &#39;snd-aloop&#39; &gt;&gt; &#x2F;etc&#x2F;modules-load.d&#x2F;modules.conf</span><br></pre></td></tr></table></figure>

<p>Por último, debemos asegurarnos que el <em>loopback</em> esté activado en el servicio de ALSA. Para ello ejecutamos el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alsamixer</span><br></pre></td></tr></table></figure>

<p>Ahora buscamos el <em>loopback</em> en los dispositivos de audio y nos aseguramos de que está activado.</p>
<p>Para finalizar, nos aseguramos que tenemos disponible el control de volumen de PulseAudio. Podemos comprobarlo ejecutándolo desde la terminal mediante el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pavucontrol</span><br></pre></td></tr></table></figure>

<p>Si no lo tenemos instalado, podemos hacerlo con:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install pavucontrol</span><br></pre></td></tr></table></figure>

<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>Para recibir la señal del satélite podemos utilizar cualquier programa SDR que funcione en Linux. En este ejemplo vamos a utilizar <strong>SDR++</strong>, el cual ya vimos como instalar en el artículo <a href="/instalacion-sdrpp/">“Instalar SDR++”</a>.</p>
<p>Para el ajuste de frecuencia se ha utilizado <strong>Gpredict</strong>, que también vimos como instalar y configurar en el artículo <a href="/seguimiento-satelites-gpredict/">“Seguimiento de satélites con Gpredict”</a>.</p>
<p>El primer paso será iniciar SDR++ y realizar los ajustes necesarios para la recepción. <strong>Usaremos NFM y un ancho de banda de 36 kHz.</strong></p>
<img src="/recibir-satelites-meteorologicos-NOAA-linux/sdrpp.jpg" class="" width="900" title="SDR++">

<p>Para hacerle llegar el audio a WXtoImg debemos marcar como salida por defecto la salida de audio que vemos activa en el control de volumen de PulseAudio. Para ver cual es la que hay activa debemos iniciar la recepción en SDR++ para ver la actividad.</p>
<img src="/recibir-satelites-meteorologicos-NOAA-linux/volumen_entrada.jpg" class="" width="700" title="Volumen entrada">

<p>Por último, iniciamos WXtoImg y si todo está correctamente configurado, veremos que comienza a decodificar la imagen cuando empieza a recibirse la señal del satélite en SDR++.</p>
<img src="/recibir-satelites-meteorologicos-NOAA-linux/wxtoimg_recibiendo.jpg" class="" width="900" title="WXtoImg - Recibiendo imagen APT">

<p>Una vez termine el pase, WXtoImg nos generará de forma automática las imágenes que le hayamos indicado en el paso anterior.</p>
<img src="/recibir-satelites-meteorologicos-NOAA-linux/wxtoimg_recibida.jpg" class="" width="900" title="WXtoIMG - Imagen recibida">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Satélites meteorológicos</tag>
        <tag>NOAA</tag>
        <tag>Linux</tag>
        <tag>Meteorología</tag>
        <tag>WXtoIMG</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir satélites LoRa</title>
    <url>/recibir-satelites-LoRa-con-tinyGS/</url>
    <content><![CDATA[<p><a href="https://tinygs.com/">TinyGS</a> es una red de estaciones terrestres distribuida alrededor del mundo para la recepción y operación de satélites <a href="https://www.thethingsnetwork.org/community/santa-rosa/post/que-es-la-tecnologia-lora-y-por-que-es-importante-para-iot">LoRa</a>, sondas meteorológicas y otros objetos, usando módulos programables de muy bajo coste.<br>En este artículo veremos como instalar y configurar nuestra estación terrestre desde cero.</p>
<span id="more"></span>

<img src="/recibir-satelites-LoRa-con-tinyGS/logo.png" class="" width="400" title="TinyGS">
<h2 id="Placas-compatibles"><a href="#Placas-compatibles" class="headerlink" title="Placas compatibles"></a>Placas compatibles</h2><p>Podemos encontrar placas compatibles por unos 10€/15€. Algunos de los modelos compatibles más usados son los siguientes:</p>
<ul>
<li>Heltec WiFi LoRa 32 V1/V2 (versiones de 433MHz y 863-928MHz).</li>
<li>TTGO LoRa32 V1/V2 (versiones de 433MHz y 868-915MHz).</li>
<li>TTGO T-BEAM + OLED (versiones de 433MHz y 868-915MHz).</li>
<li>FOSSA 1W Ground Station (versiones de 433MHz y 868-915MHz).</li>
<li>Placas de desarrollo ESP32 con SX126X/SX127X.</li>
</ul>
<p>Consultar <a href="https://github.com/G4lile0/tinyGS/wiki/Ground-Station-configuration#current-available-boards">la web del proyecto</a> para más detalles sobre placas compatibles.</p>
<h2 id="Instalacion"><a href="#Instalacion" class="headerlink" title="Instalación"></a>Instalación</h2><p>Para la instalación seguiremos el método sencillo, que consiste en descargar un programa que realiza la instalación del <em>firmware</em> de forma automática. Para ello accedemos al siguiente enlace para obtener la última versión disponible de TinyGS:</p>
<p><a href="https://github.com/G4lile0/tinyGS/releases/"><center>TinyGS releases</center></a></p>
<p>Buscamos el instalador en los archivos adjuntos de la última <em>release</em> y descargamos la versión adecuada para el sistema operativo que estemos usando.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/assets.png" class="" title="TinyGS - Releases">

<p>Una vez descargado, extraemos el programa y lo ejecutamos.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/tinygs-upload.png" class="" title="TinyGS Uploader">

<p>Ahora seleccionamos el puerto COM en el que tenemos conectada nuestra placa y hacemos clic en <strong><em>Upload tinyGS firmware!</em></strong>.<br>Si no nos aparece el puerto COM para seleccionar, debemos asegurarnos de que la placa está bien conectada y que tenemos los controladores previamente instalados.</p>
<p>Una vez termine de grabarse nuestra placa, esta se reiniciará (puede tardar algunos minutos) y quedará lista para el siguiente paso.</p>
<h2 id="Configuracion"><a href="#Configuracion" class="headerlink" title="Configuración"></a>Configuración</h2><h3 id="Solicitar-datos-de-acceso"><a href="#Solicitar-datos-de-acceso" class="headerlink" title="Solicitar datos de acceso"></a>Solicitar datos de acceso</h3><p>El primer paso para la configuración de nuestra estación será la obtención de nuestros datos de acceso al servidor MQTT del proyecto. Este servidor es el encargado de recolectar los paquetes de datos de los satélites que reciben las distintas estaciones conectadas, así como de la  gestión de las mismas. Para obtener los datos de acceso del servidor debemos acceder al canal del proyecto en Telegram mediante el siguiente enlace:<br><a href="https://t.me/joinchat/DmYSElZahiJGwHX6jCzB3Q"><center>tinyGS Community</center></a></p>
<p>Una vez nos unimos al grupo podremos ver un mensaje de bienvenida como el siguiente:</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/telegram-welcome.png" class="" title="Telegram grupo TinyGS">

<p>Para solicitar nuestros datos de acceso debemos iniciar una conversación con el <em>bot</em> del proyecto haciendo clic en el botón <strong><em>Open private chat</em></strong> que aparece en el mensaje.<br>Ahora se nos abrirá un nuevo chat con el <em>bot</em> al que enviaremos el mensaje <strong>“/mqtt”</strong>. El <em>bot</em> nos responderá con nuestros datos de acceso que debemos anotar y, por supuesto, no debemos compartir con nadie.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/telegram-mqtt.png" class="" width="400" title="Telegram TinyGS bot mqtt">

<h3 id="Configurar-la-estacion"><a href="#Configurar-la-estacion" class="headerlink" title="Configurar la estación"></a>Configurar la estación</h3><p>Una vez tenemos nuestra placa con el <em>firmware</em> instalado y hemos conseguido nuestros datos de acceso, el siguiente paso es configurar la estación.<br>Si hemos seguido los pasos de esta guía, a estas alturas nuestra estación ya debe haberse reiniciado y debe mostrar por pantalla que está lista para la configuración.</p>
<p>Para acceder a la interfaz de configuración debemos conectarnos primeramente a la red inalámbrica que la propia estación ha creado.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/tinygs-red.png" class="" title="TinyGS">

<p>Una vez estemos conectados a esta red, debemos abrir el navegador web y acceder a la dirección <strong>192.168.4.1</strong>. Se nos mostrará un menú con opciones como el siguiente:</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/tinygs-configure.png" class="" width="500" title="Telegram TinyGS bot configure">

<p>Hacemos clic en <strong><em>Configure parameters</em></strong> e introducimos los parámetros de configuración de nuestra estación.<br>Los valores básicos que debemos introducir son los siguientes:</p>
<table>
<thead>
<tr>
<th>Parámetro</th>
<th>Descripción</th>
</tr>
</thead>
<tbody><tr>
<td>GroundStation name</td>
<td>Nombre de nuestra estación.</td>
</tr>
<tr>
<td>Password for this dashboard</td>
<td>Clave de acceso que queramos para entrar al panel de datos web.</td>
</tr>
<tr>
<td>WiFi SSID</td>
<td>Nombre de la red WiFi a la que se conectará la estación.</td>
</tr>
<tr>
<td>WiFi password</td>
<td>Clave de la red WiFi a la que se conectará la estación.</td>
</tr>
<tr>
<td>Latitude</td>
<td>Latitud. Valor con 3 dígitos decimales. Signo menos para latitud sur.</td>
</tr>
<tr>
<td>Longitude</td>
<td>Longitud. Valor con 3 dígitos decimales. Signo menos para longitud oeste.</td>
</tr>
<tr>
<td>Timezone</td>
<td>Nuestra zona horaria.</td>
</tr>
<tr>
<td>MQTT Username</td>
<td>Nombre de usuario que hemos obtenido en el paso anterior.</td>
</tr>
<tr>
<td>MQTT Password</td>
<td>Contraseña que hemos obtenido en el paso anterior.</td>
</tr>
<tr>
<td>Board type</td>
<td>Nuestro modelo de placa.</td>
</tr>
<tr>
<td>OLED Bright</td>
<td>Nivel de brillo de la pantalla. Cuanto menor brillo, más tiempo durará la pantalla.</td>
</tr>
</tbody></table>
<p>Podemos ver una descripción más detallada de todos los parámetros en <a href="https://github.com/G4lile0/tinyGS/wiki/Ground-Station-configuration">la web del proyecto</a>.</p>
<p>Una vez introducidos los datos, hacemos clic en <strong><em>Apply</em></strong> para aplicar los ajustes y reiniciamos la estación.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/board.jpg" class="" title="HELTEC V2">

<h2 id="Acceder-a-nuestra-estacion"><a href="#Acceder-a-nuestra-estacion" class="headerlink" title="Acceder a nuestra estación"></a>Acceder a nuestra estación</h2><p>Si hemos llegado hasta este paso sin problemas, nuestra estación ya debería estar conectada al servidor MQTT y lista para recibir datos desde los satélites.<br>Si queremos comprobar el estado de nuestra estación o bien realizar ajustes en la misma tenemos varias formas de interactuar con ella.</p>
<p>La primera forma sería lógicamente mirando la pantalla de la estación. En ella podremos ver el estado de la misma, así como el satélite que está escuchando y el último paquete recibido.</p>
<p>Otra forma sería usando el <em>bot</em> privado de Telegram que hemos usado previamente para obtener los datos de acceso al servidor.<br>Bastaría con enviarle al <em>bot</em> el mensaje “<strong>/stations</strong>“ y nos devolverá un listado con nuestras estaciones conectadas y algunos datos de las mismas.</p>
<p>También podemos ver el estado de nuestra estación accediendo por red local a ella. Para ello necesitamos conocer previamente la dirección IP de la misma, siendo la forma más sencilla de obtenerla la propia pantalla.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/board-wifi.jpg" class="" title="Dirección IP">

<p>Una vez la tenemos, accedemos mediante el navegador y en el menú hacemos clic en <strong><em>Station dashboard</em></strong>. Nos pedirá unos datos de acceso que son <strong>“admin”</strong> para el nombre de usuario y la contraseña es la que le hemos indicado en el paso previo de configuración.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/tinygs-dashboard.png" class="" width="600" title="TinyGS Dashboard">

<p>Por último, la forma más completa de consultar el estado y de ver todos los paquetes recibidos, sería desde la web <a href="https://tinygs.com/">https://tinygs.com</a></p>
<p>Si accedemos directamente a esta web solo podremos ver los datos públicos de las estaciones y no podremos interactuar con nuestra estación. Para acceder a nuestro propio panel de usuario en la web necesitamos un enlace personalizado que vamos a obtener desde el <em>bot</em> de Telegram. Para que nos genere un enlace le enviamos el mensaje “<strong>/weblogin</strong>“ y nos responderá con un enlace temporal que usaremos para acceder a la web. Sobra decir que este enlace no debe ser compartido con nadie, ya que le estaríamos dando el control de nuestra estación.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/tinygs-web.png" class="" width="600" title="TinyGS Web">

<h2 id="Recepcion-de-paquetes"><a href="#Recepcion-de-paquetes" class="headerlink" title="Recepción de paquetes"></a>Recepción de paquetes</h2><p>Si tenemos nuestra estación activa y conectada la red MQTT y a la antena, la recepción de los paquetes de datos se hará de forma automática y desatendida. La estación recibe desde el servidor los ajustes de escucha para el satélite que va a realizar el pase sobre nuestra posición y se prepara para recibir la señal. Podemos ver fácilmente el satélite activo en la pantalla:</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/board-next.jpg" class="" title="Satélite activo">

<p>Una vez se reciba un paquete de datos, este se enviará al servidor y se mostrará en pantalla la palabra <strong><em>CONFIRMED</em></strong>.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/board-confirmed.jpg" class="" title="Paquete confirmado">

<p>Si hemos recibido el paquete, pero por cualquier motivo nos ha llegado incompleto o corrupto, veremos un mensaje como el siguiente:</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/board-error.jpg" class="" title="Paquete descartado">

<p>Esto quiere decir que el mensaje no ha superado la verificación mediante CRC (código de redundancia cíclica) y no es válido.</p>
<p>Si queremos ver la recepción de los mensajes en tiempo real, podemos acceder al canal de Telegram <a href="https://t.me/tinyGS_Telemetry">TinyGS Telemetry</a> y ver si nuestros mensajes se están subiendo correctamente al servidor.</p>
<img src="/recibir-satelites-LoRa-con-tinyGS/telegram-telemetry.png" class="" width="400" title="Telegram grupo telemetría">

<h2 id="Agradecimientos"><a href="#Agradecimientos" class="headerlink" title="Agradecimientos"></a>Agradecimientos</h2><p>Finalmente quiero dar mis agradecimientos y reconocimiento a todo el equipo que conforma el proyecto TinyGS y a todos los colaboradores que lo hacen posible.</p>
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Cubesat</tag>
        <tag>LoRa</tag>
        <tag>tinyGS</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir imágenes SSTV desde la ISS</title>
    <url>/recibir-sstv-iss/</url>
    <content><![CDATA[<p><a href="https://www.ariss.org/">ARISS</a> organiza ocasionalmente eventos conmemorativos en los que se envían imágenes <a href="https://es.wikipedia.org/wiki/SSTV">SSTV</a> desde la ISS (<em>International Space Station</em>). Estas imágenes se pueden recibir de forma sencilla con cualquier dispositivo SDR y en este artículo veremos como hacerlo.</p>
<span id="more"></span>

<img src="/recibir-sstv-iss/sstv.jpg" class="" width="500" title="Imagen SSTV">

<h2 id="Recepcion"><a href="#Recepcion" class="headerlink" title="Recepción"></a>Recepción</h2><p>Las imágenes son enviadas en la frecuencia <strong>145,800 MHz</strong>. Para recibir la señal debemos realizar los pasos habituales para el <a href="/ajuste-frecuencia-doppler-orbitron/">seguimiento de satélites</a>.</p>
<p>Los datos para DDETracker son los siguientes:</p>
<p><strong>AOS:</strong><br>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">radio_Start</span><br><span class="line">radio_modulation_type&lt;NFM&gt;</span><br><span class="line">radio_bandwidth_Hz&lt;20000&gt;</span><br><span class="line">radio_center_frequency_Hz&lt;145800000&gt;</span><br><span class="line">radio_tracking_frequency_On</span><br></pre></td></tr></table></figure><br></br></p>
<h2 id="Decodificacion"><a href="#Decodificacion" class="headerlink" title="Decodificación"></a>Decodificación</h2><p>Para decodificar las imágenes usaremos el programa RX-SSTV que podemos descargar desde el siguiente enlace:</p>
<p><a href="http://users.belgacom.net/mysoftware/Setup_RXSSTV.exe"><center>Descargar RX-SSTV v2.1.5</center></a></p>
<p>Una vez descargado el instalador, lo ejecutamos e instalamos el programa.</p>
<p>Las imágenes se envían actualmente en modo <strong>PD120</strong> con un tiempo de espera de dos minutos entre cada imagen. Podemos indicarle a RX-SSTV que utilice este modo por defecto y evitarnos el tener que cambiarlo cada vez y que se nos olvide. Para ello vamos a <strong><em>Setup</em></strong> y <strong><em>Setup RX-SSTV</em></strong>. En esta ventana de ajustes le indicamos que utilice PD120 por defecto.</p>
<img src="/recibir-sstv-iss/Config.png" class="" width="300" title="Ajustes">

<p>El siguiente paso es configurar el programa para que reciba el audio desde cable de audio virtual. Para ello vamos a <strong><em>Setup</em></strong> y <strong><em>Sound Control and Devices</em></strong>. Se abrirá la ventana de ajustes de audio en la que tenemos que marcar el cable de audio virtual como el dispositivo predeterminado de grabación. Es posible que este cambio afecte a otros programas que tengamos, así que si detectamos problemas de audio debemos revertir este cambio y volver a realizarlo cuando usemos RX-SSTV.</p>
<p>Una vez tengamos todo correctamente configurado, cuando el programa detecte la señal de una nueva imagen, iniciará la recepción de la misma de forma automática.</p>
<img src="/recibir-sstv-iss/SDRSharp.png" class="" width="900" title="Recibiendo imagen">

<p>Si nos aparece el mensaje <em>“Overflow”</em> en el programa, significa que tenemos el audio demasiado alto. Para solucionarlo simplemente bajamos el volumen del audio en SDR# hasta que desaparezca el mensaje.</p>
<p>Al terminar la recepción de una imagen, el programa la guarda automáticamente y queda a la espera de detectar la siguiente imagen.</p>
<img src="/recibir-sstv-iss/RX-SSTV.png" class="" width="500" title="RX-SSTV">
]]></content>
      <tags>
        <tag>ISS</tag>
        <tag>SSTV</tag>
      </tags>
  </entry>
  <entry>
    <title>Recibir telemetría de radiosondas meteorológicas</title>
    <url>/recibir-telemetria-radiosondas/</url>
    <content><![CDATA[<p>A diario son lanzadas en todo el mundo cientos de radiosondas meteorológicas para obtener mediciones que permitan conocer el estado actual en las capas altas de la atmósfera. Estas mediciones ayudan a los servicios meteorológicos en sus predicciones.<br>En España se lanzan diariamente sondas de desde distintos puntos de nuestra geografía. Estas sondas alcanzan varios kilómetros de altura y se pueden recibir desde bastante distancia. En este artículo veremos como podemos recibir la telemetría de estas radiosondas usando nuestro dispositivo SDR.</p>
<span id="more"></span>

<img src="/recibir-telemetria-radiosondas/LIFT-Radiosonde-Release.jpg" class="" width="400" title="Lanzamiento de radiosonda Vaisala © Vaisala">

<p>En España podemos recibir actualmente dos modelos de sonda que lanza AEMET, <a href="https://www.vaisala.com/es/products/instruments-sensors-and-other-measurement-devices/soundings-products/rs41">Vaisala RS41</a> y <a href="http://www.meteomodem.com/es/m10.html">Meteomodem M10</a>. Estas sondas se sueltan dos veces al día, entre las 11:15 y las 11:30, y entre las 23:15 y 23:30 (horas en GMT).</p>
<p>También es posible que recibamos alguna radiosonda desde Portugal o Francia si nos encontramos cerca de la frontera con estos países.</p>
<table>
<thead>
<tr>
<th>Lugar de lanzamiento</th>
<th align="center">Tipo de sonda</th>
<th align="center">Frecuencia (MHz)</th>
</tr>
</thead>
<tbody><tr>
<td>A Coruña</td>
<td align="center">RS41</td>
<td align="center">404,0</td>
</tr>
<tr>
<td>Barcelona</td>
<td align="center">M10</td>
<td align="center">404,0</td>
</tr>
<tr>
<td>Huelva</td>
<td align="center">RS41</td>
<td align="center">402,5</td>
</tr>
<tr>
<td>Madrid</td>
<td align="center">RS41</td>
<td align="center">403,0</td>
</tr>
<tr>
<td>Murcia</td>
<td align="center">M10</td>
<td align="center">403,4</td>
</tr>
<tr>
<td>Santander</td>
<td align="center">RS41</td>
<td align="center">401,5</td>
</tr>
<tr>
<td>Son Bonet</td>
<td align="center">RS41</td>
<td align="center">402,0</td>
</tr>
</tbody></table>
<p>En algunas ocasiones también es posible encontrar radiosondas distintas a estas y que son lanzadas de forma esporádica por radioaficionados, universidades u otras entidades que realicen cualquier estudio meteorológico.<br>Algunos recursos muy interesantes para seguir estas radiosondas online son <a href="https://radiosondy.info/">radiosondy.info</a> y <a href="https://aprs.fi/">APRS.fi</a>.</p>
<h2 id="Recibir-radiosondas-M10"><a href="#Recibir-radiosondas-M10" class="headerlink" title="Recibir radiosondas M10"></a>Recibir radiosondas M10</h2><p>Para la recepción de la señal vamos a usar SDR# y sacaremos el audio por el cable virtual para decodificar. Por supuesto es posible usar cualquier otro programa para la recepción.<br>Para decodificar la telemetría usaremos el programa <strong>Sonde Monitor</strong>, que podemos descargar desde su página web.</p>
<p><a href="https://www.coaa.co.uk/sondemonitor.htm"><center>SondeMonitor from COAA</center></a></p>
<p>Una vez descargado e instalado el programa, debemos indicarle que reciba el audio desde el cable de audio virtual.</p>
<img src="/recibir-telemetria-radiosondas/sondemonitor_config_audio.jpg" class="" title="SondeMonitor - Configurar audio">

<p>Ahora en SDR# sintonizamos la frecuencia de la radiosonda que vayamos a recibir en <strong>modo NFM y un ancho de banda de 20 kHz</strong>.</p>
<img src="/recibir-telemetria-radiosondas/sdrsharp_m10.jpg" class="" width="900" title="SDR# - Radiosonda M10 de Murcia">

<p>Por último, le indicamos a SondeMonitor el tipo de sonda y hacemos clic en el botón verde para iniciar.</p>
<img src="/recibir-telemetria-radiosondas/sondemonitor_start.jpg" class="" title="SondeMonitor - Iniciar">

<p>Pronto veremos la telemetría en pantalla.</p>
<img src="/recibir-telemetria-radiosondas/sondemonitor_receiving.jpg" class="" width="800" title="SondeMonitor - Recibiendo sonda M10">
<img src="/recibir-telemetria-radiosondas/sondemonitor_data.jpg" class="" width="800" title="SondeMonitor - Telemetría">


<h2 id="Recibir-radiosondas-RS41"><a href="#Recibir-radiosondas-RS41" class="headerlink" title="Recibir radiosondas RS41"></a>Recibir radiosondas RS41</h2><p>La recepción de este tipo de sondas es muy similar a la descrita en el apartado anterior. SondeMonitor también nos permite recibir este tipo de sondas, pero veremos también otra alternativa para decodificar la telemetría usando el programa <strong>RS41 Tracker</strong>.</p>
<p>Lo primero será descargar el programa desde su página web:</p>
<p><a href="http://escursioni.altervista.org/Radiosonde/"><center>Radiosonde Page by IW1GIS</center></a></p>
<p>Una vez descargado, lo instalamos y lo iniciamos para configurar la entrada de audio. Le damos al icono del engranaje para abrir las opciones de configuración y seleccionamos el cable audio virtual como entrada.</p>
<img src="/recibir-telemetria-radiosondas/rs41tracker_config_audio.jpg" class="" width="800" title="RS41 Tracker - Configurar audio">

<p>Ahora en SDR# sintonizamos la frecuencia de la radiosonda que vayamos a recibir en <strong>modo NFM y un ancho de banda de 6,5 kHz</strong>.</p>
<img src="/recibir-telemetria-radiosondas/sdrsharp_rs41.jpg" class="" width="900" title="SDR# - Radiosonda RS41 de Madrid">

<p>Por último, iniciamos RS41 Tracker haciendo clic en el siguiente icono.</p>
<img src="/recibir-telemetria-radiosondas/rs41tracker_start.jpg" class="" title="RS41 Tracker - Iniciar">

<p>Una vez tengamos señal suficiente, el programa comenzará a decodificar y mostrará los datos por pantalla.</p>
]]></content>
      <tags>
        <tag>Meteorología</tag>
        <tag>Radiosonda</tag>
      </tags>
  </entry>
  <entry>
    <title>Recepción de mensajes ADS-B en Raspberry Pi</title>
    <url>/seguimiento-aviones-raspberry-pi/</url>
    <content><![CDATA[<p>ADS-B (<em>Automatic Dependent Surveillance Broadcast</em>) es una tecnología de control en la que un avión determina su posición a través de la navegación por satélite y la emite periódicamente, lo que permite realizar su seguimiento.</p>
<p>En este artículo veremos como convertir una Raspberry Pi en un receptor de mensajes ADS-B y poder determinar y visualizar la posición de las aeronaves que sobrevuelan nuestra ubicación.</p>
<span id="more"></span>

<p>Lo primero que haremos será instalar nuestro dispositivo SDR, si todavía no lo hemos hecho, siguiendo los pasos descritos en <a href="/instalacion-rtlsdr-raspberrypi/">“Instalación de dispositivos RTL-SDR en Raspberry Pi”</a>.</p>
<h3 id="Instalacion-de-dump1090"><a href="#Instalacion-de-dump1090" class="headerlink" title="Instalación de dump1090"></a>Instalación de dump1090</h3><p>Vamos a instalar la versión de <em>dump1090</em> mantenida por FlightAware, ya que está actualizada y nos instala y levanta un servidor web en el que podemos ver las aeronaves sobre el mapa sin muchas complicaciones.</p>
<p>El primer paso es instalar el repositorio de FlightAware en nuestra Raspberry Pi dependiendo de la versión de Raspbian que tengamos. También podemos generar paquetes para otras distribuciones siguiendo los pasos descritos <a href="https://github.com/flightaware/dump1090">aquí</a>.</p>
<p>Si no conocemos la versión de Raspbian, podemos consultarla ejecutando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cat &#x2F;etc&#x2F;os-release | grep VERSION_CODENAME</span><br></pre></td></tr></table></figure>

<ul>
<li><p>Repositorio para <strong>Raspbian Buster</strong>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;flightaware.com&#x2F;adsb&#x2F;piaware&#x2F;files&#x2F;packages&#x2F;pool&#x2F;piaware&#x2F;p&#x2F;piaware-support&#x2F;piaware-repository_5.0_all.deb</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i piaware-repository_5.0_all.deb</span><br></pre></td></tr></table></figure></li>
<li><p>Repositorio para <strong>Raspbian Stretch</strong>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;flightaware.com&#x2F;adsb&#x2F;piaware&#x2F;files&#x2F;packages&#x2F;pool&#x2F;piaware&#x2F;p&#x2F;piaware-support&#x2F;piaware-repository_5.0~bpo9+1_all.deb</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i piaware-repository_5.0~bpo9+1_all.deb</span><br></pre></td></tr></table></figure></li>
</ul>
<p>Una vez instalado el repositorio correspondiente ejecutamos:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<p>Ahora instalamos <em>dump1090</em>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install -y dump1090-fa</span><br></pre></td></tr></table></figure>

<p>Podemos ajustar las opciones de <em>dump1090</em> en su archivo de configuración:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;default&#x2F;dump1090-fa</span><br></pre></td></tr></table></figure>

<p>Editamos la siguiente línea con la ganancia y valor de PPM. Es aconsejable establecer un valor para la ganancia, ya que por defecto el nivel viene establecido en automático (-10) y no siempre proporciona buenos resultados.<br>Si tenemos más de un dispositivo SDR conectado introducimos su número de serie en <em>device-index</em>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">RECEIVER_OPTIONS&#x3D;&quot;--device-index 0 --gain -10 --ppm 0&quot;</span><br></pre></td></tr></table></figure>

<p>Reiniciamos el servicio para que se apliquen los cambios.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service dump1090-fa restart</span><br></pre></td></tr></table></figure>

<p>Por último, accedemos a nuestra Raspberry Pi desde cualquier navegador web:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;IP_RASPBERRY:8080&#x2F;</span><br></pre></td></tr></table></figure>

<img src="/seguimiento-aviones-raspberry-pi/dump1090.jpg" class="" width="900" title="dump1090 FlightAware">

<p>Esta interfaz web utiliza el puerto 8080 por defecto. Si queremos cambiarlo editamos el archivo de configuración de <em>Lighttpd</em>:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nano &#x2F;etc&#x2F;lighttpd&#x2F;conf-enabled&#x2F;89-dump1090-fa.conf</span><br></pre></td></tr></table></figure>

<p>Editamos la siguiente línea y modificamos el puerto 8080 por el que queramos utilizar:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$SERVER[&quot;socket&quot;] &#x3D;&#x3D; &quot;:8080&quot; &#123;</span><br></pre></td></tr></table></figure>

<p>Por último reiniciamos el servicio para que se apliquen los cambios:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service lighttpd restart</span><br></pre></td></tr></table></figure>


<h3 id="Enviar-datos-a-FlightAware"><a href="#Enviar-datos-a-FlightAware" class="headerlink" title="Enviar datos a FlightAware"></a>Enviar datos a FlightAware</h3><p><a href="https://flightaware.com/">FlightAware</a> es una compañía con sede en Houston (TX, Estados Unidos) que ofrece servicios de software y datos para aviación. Esta compañía ofrece información de seguimiento de aeronaves de forma gratuita desde su página web y sus aplicaciones para móviles. Es actualmente la mayor plataforma de seguimiento de vuelos.</p>
<p>Podemos reenviar los datos de seguimiento a FlightAware desde nuestra Raspberry Pi. Estos serán utilizados para el seguimiento a nivel global y a cambio recibiremos una suscripción <em><a href="https://flightaware.com/commercial/premium/">Enterprise</a></em>.</p>
<p>Los pasos para enviar los datos son los siguientes:</p>
<ol>
<li>Lo primero será registrarnos en FlightAware:</li>
</ol>
<p><a href="https://es.flightaware.com/account/join"><center>https://es.flightaware.com/account/join</center></a></p>
<ol start="2">
<li><p>Instalamos <em>piaware</em>. Este software será el encargado de establecer la comunicación con el servidor de FlightAware para enviar los datos y recibir ajustes.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install -y piaware</span><br></pre></td></tr></table></figure></li>
<li><p>Podemos ajustar <em>piaware</em> para que se actualice de forma automática y para que podamos actualizarlo desde la interfaz web de FlightAware.<br>Si queremos que se actualice automático ejecutamos:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo piaware-config allow-auto-updates yes</span><br></pre></td></tr></table></figure>
<p>Si queremos que se pueda hacer de forma manual vía web ejecutamos:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo piaware-config allow-manual-updates yes</span><br></pre></td></tr></table></figure></li>
<li><p>Reiniciamos el servicio para que se apliquen los ajustes.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service piaware restart</span><br></pre></td></tr></table></figure></li>
<li><p>Accedemos a la siguiente dirección para vincular nuestra Raspberry Pi con la cuenta que acabamos de crear. Si accedemos desde la misma dirección IP que tiene la Raspberry Pi, la detectará de forma automática.</p>
</li>
</ol>
<p><a href="https://flightaware.com/adsb/piaware/claim"><center>https://flightaware.com/adsb/piaware/claim</center></a></p>
<ol start="6">
<li>Vamos a nuestro panel de control y abrimos las opciones de configuración.</li>
</ol>
<img src="/seguimiento-aviones-raspberry-pi/flightaware-panel.png" class="" width="900" title="FlightAware">

<ol start="7">
<li>Por último, introducimos nuestros datos de latitud, longitud y altitud para poder usar el seguimiento con MLAT y reiniciamos el servicio desde la propia web pulsando el botón <em>Send</em>.</li>
</ol>
<img src="/seguimiento-aviones-raspberry-pi/flightaware-config.jpg" class="" title="FlightAware">


<h3 id="Enviar-datos-a-AirNav-RadarBox"><a href="#Enviar-datos-a-AirNav-RadarBox" class="headerlink" title="Enviar datos a AirNav RadarBox"></a>Enviar datos a AirNav RadarBox</h3><p><a href="https://www.radarbox.com/">RadarBox</a> es una compañía con sede en Tampa (FL, Estados Unidos) que ofrece servicios de información de vuelos. Podemos compartir los datos que recibimos en nuestra Raspberry Pi con RadarBox y a cambio obtendremos una suscripción <em><a href="https://www.radarbox.com/subscribe">Business</a></em>.</p>
<p>Las pasos que seguiremos son los siguientes:</p>
<ol>
<li><p>Instalamos <em>rbfeeder</em>. Será el programa que envíe los datos al servidor.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo bash -c &quot;$(wget -O - http:&#x2F;&#x2F;apt.rb24.com&#x2F;inst_rbfeeder.sh)&quot;</span><br></pre></td></tr></table></figure>
<p>Cuando pregunte si queremos instalar <code>dump978-rb</code> le decimos que no.</p>
</li>
<li><p>Instalamos el cliente de MLAT. La siguiente versión es para Raspbian. Si necesitamos paquete para otra versión, podemos generarlo siguiendo los pasos descritos <a href="https://github.com/mutability/mlat-client">aquí</a>.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">wget &#x2F;seguimiento-aviones-raspberry-pi&#x2F;mlat-client_0.2.11_armhf.deb</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i mlat-client_0.2.11_armhf.deb</span><br></pre></td></tr></table></figure></li>
<li><p>Nos registramos en RadarBox.</p>
</li>
</ol>
<p><a href="https://www.radarbox.com/register"><center>https://www.radarbox.com/register</center></a></p>
<ol start="4">
<li><p>Una vez registrados necesitamos vincular nuestro receptor con RadarBox. Para ello usaremos la clave que nos genera <em>rbfeeder</em> la primera vez que se conecta al servidor. Consultamos la clave con el comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo rbfeeder --showkey --no-start</span><br></pre></td></tr></table></figure></li>
<li><p>Accedemos a esta dirección, introducimos nuestra clave en <em>Sharing Key</em> y pulsamos en <strong>CLAIM!</strong>.</p>
</li>
</ol>
<p><a href="https://www.radarbox.com/raspberry-pi/claim"><center>https://www.radarbox.com/raspberry-pi/claim</center></a></p>
<img src="/seguimiento-aviones-raspberry-pi/radarbox-claim.jpg" class="" width="900" title="RadarBox">


<ol start="6">
<li>Por último introducimos nuestras coordenadas cuando nos lo pida.</li>
</ol>
<h3 id="Enviar-datos-a-ADS-B-Exchange"><a href="#Enviar-datos-a-ADS-B-Exchange" class="headerlink" title="Enviar datos a ADS-B Exchange"></a>Enviar datos a ADS-B Exchange</h3><p><a href="https://www.adsbexchange.com/">ADS-B Exchange</a> es un servicio colaborativo de datos de seguimiento y es la mayor fuente de datos de vuelos <strong>sin filtrar</strong>. En este caso no obtendremos beneficios como suscripciones, ya que este servicio ofrece todos los datos de forma <strong>gratuita para fines no comerciales</strong>.</p>
<p>Para enviar nuestros datos a ADS-B Exchange tendremos que ejecutar un script de instalación que realizará el proceso de forma sencilla. Para ello ejecutamos el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo bash -c &quot;$(wget -nv -O - https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;adsbxchange&#x2F;adsb-exchange&#x2F;master&#x2F;install.sh)&quot;</span><br></pre></td></tr></table></figure>

<p>Se iniciará un asistente instalación en el que debemos indicar un nombre para nuestro <em>feeder</em> y nuestra posición para los cálculos de MLAT.</p>
<img src="/seguimiento-aviones-raspberry-pi/adsb-script.png" class="" title="Asistente instalación ADS-B Exchange">

<p>Una vez finalice el asistente, ya estaremos conectados y enviando datos a ADS-B Exchange. Para conocer el estado del servicio tenemos los siguientes enlaces:</p>
<ul>
<li>Comprobar el estado de nuestro <em>feeder</em>: <a href="https://adsbexchange.com/myip/">https://adsbexchange.com/myip/</a></li>
<li>Comprobar el estado de los servidores de MLAT: <a href="http://adsbx.org/sync">http://adsbx.org/sync</a></li>
</ul>
<p>Opcionalmente, podemos instalar la herramienta proporcionada por ADS-B Exchange para ver online los datos que estamos enviando desde nuestro receptor en tiempo real. Para instalarla basta con ejecutar el siguiente comando:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo bash -c &quot;$(wget -nv -O - https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;adsbxchange&#x2F;adsbexchange-stats&#x2F;master&#x2F;stats.sh)&quot;</span><br></pre></td></tr></table></figure>

<p>Una vez instalada, ejecutamos el siguiente comando para obtener nuestra URL personalizada en la que consultar los datos:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">adsbexchange-showurl</span><br></pre></td></tr></table></figure>

<p>Obtendremos una URL que debemos copiar e introducir en el navegador web. Una vez accedemos, tendremos dos enlaces que nos llevarán a una página con los datos de las aeronaves que estamos recibiendo en nuestra estación y a un visor con el mapa en tiempo real. Podemos consultar el funcionamiento de las distintas opciones del visor en <a href="https://www.adsbexchange.com/map-help/">este enlace</a>.</p>
<img src="/seguimiento-aviones-raspberry-pi/adsb-exchange.jpg" class="" width="900" title="ADS-B Exchange">


<h3 id="Enviar-datos-a-Flightradar24"><a href="#Enviar-datos-a-Flightradar24" class="headerlink" title="Enviar datos a Flightradar24"></a>Enviar datos a Flightradar24</h3><p><a href="https://www.flightradar24.com/">Flightradar24</a> es una compañía europea con sede en Estocolmo (Suecia) que ofrece servicios de información de vuelos. Compartiendo nuestros datos con Flightradar24 obtendremos una suscripción <em><a href="https://www.flightradar24.com/premium">Business</a></em>.</p>
<p>Lo primero sera registrarse en Flightradar24.</p>
<p><a href="https://www.flightradar24.com/premium/signup"><center>https://www.flightradar24.com/premium/signup</center></a></p>
<p>Para enviar los datos debemos descargar e instalar <em>fr24feed</em>. Para ello ejecutamos el siguiente comando y seguimos los pasos del asistente de instalación.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo bash -c &quot;$(wget -O - https:&#x2F;&#x2F;repo-feed.flightradar24.com&#x2F;install_fr24_rpi.sh)&quot;</span><br></pre></td></tr></table></figure>

<ol>
<li><p>Introducir el correo electrónico con el que nos hemos registrado.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Step 1.1 - Enter your email address (username@domain.tld)</span><br></pre></td></tr></table></figure></li>
<li><p>Si tenemos ya una clave previa la introducimos. En caso contrario lo dejamos en blanco.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Step 1.2 - If you used to feed FR24 with ADS-B data before, enter your sharing key.</span><br><span class="line">If you don&#39;t remember your sharing key, you can find it in your account on the website under &quot;My data sharing&quot;.</span><br><span class="line">https:&#x2F;&#x2F;www.flightradar24.com&#x2F;account&#x2F;data-sharing</span><br><span class="line"></span><br><span class="line">Otherwise leave this field empty and continue.</span><br></pre></td></tr></table></figure></li>
<li><p>Introducimos <code>yes</code> para activar MLAT.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Step 1.3 - Would you like to participate in MLAT calculations? (yes&#x2F;no)$:yes</span><br></pre></td></tr></table></figure></li>
<li><p>Introducimos nuestras coordenadas y altitud.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">IMPORTANT: For MLAT calculations the antenna&#39;s location should be entered very precise!</span><br><span class="line"></span><br><span class="line">Step 3.A - Enter antenna&#39;s latitude (DD.DDDD)</span><br><span class="line"></span><br><span class="line">Step 3.B - Enter antenna&#39;s longitude (DDD.DDDD)</span><br><span class="line"></span><br><span class="line">Step 3.C - Enter antenna&#39;s altitude above the sea level (in feet)</span><br><span class="line"></span><br><span class="line">Using latitude: 37.XXXX, longitude: -3.XXXX, altitude: 720ft above sea level</span><br><span class="line"></span><br><span class="line">Validating email&#x2F;location information...OK</span><br><span class="line"></span><br><span class="line">The closest airport found is ICAO:LEGR IATA:GRX near Granada.</span><br><span class="line"></span><br><span class="line">Latitude: 37.188728</span><br><span class="line">Longitude: -3.777350</span><br><span class="line">Country: Spain</span><br><span class="line"></span><br><span class="line">Flightradar24 may, if needed, use your email address to contact you regarding your data feed.</span><br><span class="line"></span><br><span class="line">Would you like to continue using these settings?</span><br><span class="line"></span><br><span class="line">Enter your choice (yes&#x2F;no)$:yes</span><br></pre></td></tr></table></figure></li>
<li><p>Introducimos <code>yes</code> para que usar la configuración automática y que utilice la instancia de <em>dump1090</em> que ya tenemos instalada.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">We have detected that you already have a dump1090 instance running. We can therefore automatically configure the FR24 feeder to use existing receiver configuration, or you can manually configure all the parameters.</span><br><span class="line"></span><br><span class="line">Would you like to use autoconfig (*yes*&#x2F;no)$:yes</span><br></pre></td></tr></table></figure></li>
<li><p>Activamos el log si queremos. No es necesario.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Step 6 - Please select desired logfile mode:</span><br><span class="line"> 0 -  Disabled</span><br><span class="line"> 1 -  48 hour, 24h rotation</span><br><span class="line"> 2 -  72 hour, 24h rotation</span><br><span class="line">Select logfile mode (0-2)$:0</span><br></pre></td></tr></table></figure></li>
<li><p>Por último, reiniciamos el servicio.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart fr24feed</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <tags>
        <tag>Raspberry Pi</tag>
        <tag>ATC</tag>
        <tag>ADS-B</tag>
        <tag>dump1090</tag>
      </tags>
  </entry>
  <entry>
    <title>Seguimiento de satélites con Orbitron</title>
    <url>/seguimiento-satelites-orbitron/</url>
    <content><![CDATA[<p>Una de las posibilidades más interesantes que nos ofrecen los dispositivos SDR es el poder recibir señales desde algunos satélites que orbitan el planeta en lo que se denomina órbita baja (LEO o Low Earth Orbit). Si queremos recibir su señal tendremos que estar atentos al momento en el que pasan por encima de nuestra posición. Para ello se usan programas que nos indican en qué posición se encuentra un satélite en un determinado instante de tiempo utilizando los datos de su órbita.<br>Existen distintos programas para Windows que realizan esta predicción. Uno de ellos es Orbitron, y es el que veremos en este tutorial.</p>
<span id="more"></span>

<h2 id="Instalacion-de-Orbitron"><a href="#Instalacion-de-Orbitron" class="headerlink" title="Instalación de Orbitron"></a>Instalación de Orbitron</h2><p>El primer paso es descargar Orbitron desde su web: <a href="http://www.stoff.pl/downloads.php">http://www.stoff.pl/downloads.php</a></p>
<p>Tenemos la opción de descargarnos el instalador o un archivo ZIP. En este ejemplo vamos a descargar el ZIP y lo vamos a extraer en el directorio <em>C:\SDR\Orbitron</em>.</p>
<p>Ejecutamos ahora el programa haciendo doble clic en <strong>Orbitron.exe</strong> y se nos abrirá la interfaz del programa. Nos pedirá que actualicemos los archivo de TLE al iniciar, a lo que le decimos que no. Más adelante veremos qué son estos archivos y cómo actualizarlos.</p>
<img src="/seguimiento-satelites-orbitron/orbitron.jpg" class="" title="Orbitron">

<h2 id="Configuracion-de-Orbitron"><a href="#Configuracion-de-Orbitron" class="headerlink" title="Configuración de Orbitron"></a>Configuración de Orbitron</h2><p>Vamos ahora a configurar Orbitron con los ajustes básicos.</p>
<p>El primer ajuste es indicarle nuestra localización. Para ello vamos a la pestaña Location e introducimos nuestros datos. Si no los sabemos podemos buscar nuestra ciudad (o las más cercana) en el listado que tenemos a la derecha. Lo ideal es meter los valores más exactos posibles.</p>
<img src="/seguimiento-satelites-orbitron/orbitron-location.jpg" class="" title="Orbitron Location">

<p>Una vez los tengamos introducidos correctamente, hacemos clic en <strong>Choose</strong> para seleccionar esta ubicación.</p>
<p>El siguiente paso es seleccionar el archivo con los TLE de los satélites que vamos a seguir.<br>Estos archivos TLE contienen un listado de objetos que orbitan la Tierra con sus respectivos elementos orbitales en formato TLE <em>(two-line element set)</em>. Con estos elementos, y usando la fórmula adecuada, podemos estimar la posición y velocidad del objeto en cualquier instante de tiempo pasado o futuro.</p>
<p>Aquí tenemos varias opciones, utilizar los archivos TLE descargados por Orbitron, o bien crear un archivo con los satélites que nos interesen. Si optamos por la primera opción, necesitamos primeramente actualizar los archivos TLE. Para ello abrimos la ventana de ajustes de Orbitron presionando las teclas <strong><em>Alt+F5</em></strong>, o bien hacemos clic en el siguiente punto y seleccionamos <strong>Setup</strong>:</p>
<img src="/seguimiento-satelites-orbitron/orbitron-setup.jpg" class="" title="Orbitron Setup">

<p>Vamos a la pestaña <strong>TLE updater</strong> y hacemos clic en el siguiente icono:</p>
<img src="/seguimiento-satelites-orbitron/setup-tle.jpg" class="" title="Actualizar TLE">

<p>Una vez se actualicen los archivos, cerramos esa ventana y hacemos clic en <strong>Load TLE</strong> y seleccionamos el archivo que contenga los satélites que queremos seguir. En este caso vamos a elegir un archivo que contiene los TLE de algunos satélites que nos interesan.</p>
<img src="/seguimiento-satelites-orbitron/load-tle.jpg" class="" title="Cargar archivo">

<p>Ahora bastaría con ir seleccionando los satélites que queremos seguir y se mostrarán sobre el mapa.</p>
<img src="/seguimiento-satelites-orbitron/orbitron-loaded.jpg" class="" title="Orbitron">

<p>En siguientes tutoriales veremos cómo conectar Orbitron con SDR# para realizar seguimientos automáticos.</p>
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Orbitron</tag>
        <tag>Tracking</tag>
      </tags>
  </entry>
  <entry>
    <title>Seguimiento de satélites con Gpredict</title>
    <url>/seguimiento-satelites-gpredict/</url>
    <content><![CDATA[<p><a href="http://gpredict.oz9aec.net/">Gpredict</a> es un programa para el seguimiento en tiempo real y predicción de órbitas para satélites. Este programa es muy similar a Orbitron, el cual ya vimos cómo instalar y configurar en el artículo <a href="/seguimiento-satelites-orbitron">“Seguimiento de satélites con Orbitron”</a>. Pero al contrario de este, Gpredict es multiplataforma, por lo que podremos usarlo en diferentes sistemas operativos.<br>En este artículo veremos cómo instalar y configurar Gpredict en Windows, Linux y macOS.</p>
<span id="more"></span>

<h2 id="Instalacion"><a href="#Instalacion" class="headerlink" title="Instalación"></a>Instalación</h2><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>Para instalar Gpredict en Windows bastará con descargar el archivo comprimido con los binarios desde cualquiera de los repositorios siguientes:</p>
<ul>
<li><a href="https://github.com/csete/gpredict/releases/latest">GitHub</a></li>
<li><a href="https://sourceforge.net/projects/gpredict/">Sourceforge</a></li>
</ul>
<p>Una vez descargado el archivo extraemos su contenido en la ubicación deseada y lo iniciamos desde el archivo ejecutable.</p>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>En Linux podemos instalarlo desde consola usando el gestor de paquetes de nuestra distribución. Para Debian/Ubuntu usaremos el siguiente:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install gpredict</span><br></pre></td></tr></table></figure>

<p>Para iniciarlo podemos buscarlos en el listado de programas instalados o hacerlo desde una terminal.</p>
<h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>Para instalar Gpredict en macOS necesitamos un gestor de paquetes como por ejemplo <a href="https://brew.sh/index_es">Homebrew</a>. Si ya lo tenemos, bastaría con ejecutar el siguiente comando:</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">brew install gpredict</span><br></pre></td></tr></table></figure>

<p>Para iniciar Gpredict debemos usar una terminal:</p>
<figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">gpredict</span><br></pre></td></tr></table></figure>


<img src="/seguimiento-satelites-gpredict/Gpredict.jpg" class="" width="800" title="Gpredict">


<h2 id="Configuracion"><a href="#Configuracion" class="headerlink" title="Configuración"></a>Configuración</h2><p>Una vez tenemos Gpredict instalado e iniciado, seguimos los pasos enumerados a continuación para actualizarlo y configurarlo.</p>
<ol>
<li><p>El primer paso es descargarnos los archivos TLE actualizados para poder realizar el cálculo de las órbitas correctamente. Es recomendable realizar esta actualización regularmente para tener siempre las correcciones lo más exactas posibles.<br>Para ello vamos a <em>“Edit”</em> y seleccionamos <em>“Update TLE data from network”</em>. Esto inicia el proceso de descarga de los archivos TLE más recientes.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-update-tle.jpg" class="" width="300" title="Gpredict - Update TLE"></li>
</ol>
<ol start="2">
<li><p>A continuación descargamos los datos de los transpondedores activos de cada satélite. Esto incorpora las frecuencias en las que emite cada satélite para que solo tengamos que seleccionarlas. Para descargarlos vamos a <em>“Edit”</em> y hacemos clic en <em>“Update transponder data”</em>.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-update-tp.jpg" class="" width="300" title="Gpredict - Update transponder"></li>
</ol>
<ol start="3">
<li><p>El siguiente paso es configurar nuestra posición. Para ello vamos a <em>“Edit”</em> y hacemos clic en <em>“Preferences”</em>. Ahora se nos abre una nueva ventana en la que seleccionamos <em>“Ground Stations”</em>. Para añadir los datos de nuestra <em>ground station</em> hacemos clic en <em>“Add new”</em>.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-config-qth.jpg" class="" width="800" title="Gpredict - Ground station">

<p> En la nueva ventana que aparece introducimos los datos de nuestra ubicación y guardamos haciendo clic en <em>“OK”</em>. Si no conocemos los datos, podemos buscar nuestra población haciendo clic en <em>“Select”</em>. Esto nos auto-completará todos los datos aunque no sean los más exactos.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-config-qth-new.jpg" class="" width="800" title="Gpredict - Ground station">

<p> Por último, eliminamos la <em>ground station</em> que viene por defecto para dejar la nuestra marcada por defecto.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-config-qth-delete.jpg" class="" width="800" title="Gpredict - Ground station"></li>
</ol>
<ol start="4">
<li><p>Ahora vamos a configurar la conexión con programas externos para que podamos realizar el tracking de forma automática en nuestro programa de SDR. Para ello vamos a <em>“Interfaces”</em>, <em>“Radios”</em> y  hacemos clic en <em>“Add new”</em>.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-radios.jpg" class="" width="800" title="Gpredict - Radios">

<p> Introducimos el nombre que queramos y guardamos haciendo clic en <em>“Ok”</em>.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-radios-new.jpg" class="" width="800" title="Gpredict - Radios"></li>
</ol>
<ol start="5">
<li><p>Para finalizar, vamos a seleccionar ahora que satélites vamos a seguir. Para ello hacemos clic en el botón indicado en la siguiente captura y después en <em>“Configure”</em>. En Linux el botón puede aparecer con un icono distinto.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-configure.jpg" class="" width="300" title="Gpredict - configurar">

<p> A continuación iremos buscando y añadiendo los satélites deseados a la lista.</p>
 <img src="/seguimiento-satelites-gpredict/Gpredict-sats.jpg" class="" width="800" title="Gpredict - configurar satélites"></li>
</ol>
<h2 id="Conectar-con-programas-de-SDR"><a href="#Conectar-con-programas-de-SDR" class="headerlink" title="Conectar con programas de SDR"></a>Conectar con programas de SDR</h2><p>Para realizar la correción en nuestros programas de SDR tenemos que conectar Gpredict a estos. Para ello necesitamos que nuestro programa tenga el servicio a la escucha para que Gpredict pueda enviarle la frecuencia que debe sintonizar en cada momento. En el siguiente punto veremos como habilitar este servicio en SDR# y SDR++. Si ya tenemos el programa preparado, abrimos el control de radio de Gpredict desde el icono indicado en la siguiente captura y hacemos clic en <em>“Radio Control”</em>.</p>
<img src="/seguimiento-satelites-gpredict/Gpredict-radio-control.jpg" class="" width="300" title="Gpredict - Radio control">

<p>Ahora seleccionamos el satélite y la frecuencia y hacemos clic en <em>“Track”</em> para iniciar la corrección, y posteriormente seleccionamos la radio y hacemos clic en <em>“Engage”</em> para conectar con el programa SDR.</p>
<img src="/seguimiento-satelites-gpredict/Gpredict-radio-control-2.jpg" class="" width="800" title="Gpredict - Radio control">

<p>Si todo ha ido bien, veremos que la frecuencia se va moviendo en programa para corregir el efecto <em>Doppler</em> de la señal del satélite.</p>
<h3 id="SDR"><a href="#SDR" class="headerlink" title="SDR#"></a>SDR#</h3><p>Para conectar Gpredict con SDR# vamos a usar el plugin <strong>GpredictConnector</strong> que podemos descargar desde el siguiente repositorio:</p>
<p><a href="https://github.com/alexwahl/SDRSharp.GpredictConnector/releases/latest"><center>Releases GpredictConnector</center></a></p>
<p>El proceso para instalarlo es el mismo que para cualquier otro plugin de SDR#. Creamos una carpeta dentro de <em>Plugins</em> e introducimos el contenido del archivo descargado en su interior.<br>Una vez instalado iniciamos SDR# y abrimos el plugin.</p>
<img src="/seguimiento-satelites-gpredict/GpredictConnector-disabled.png" class="" width="300" title="SDR# - GpredictConnector">

<p>Ahora marcamos <em>enable</em> para ponerlo a la escucha.</p>
<img src="/seguimiento-satelites-gpredict/GpredictConnector-listening.png" class="" width="300" title="SDR# - GpredictConnector listening">

<p>Cuando conectemos desde Gpredict veremos que aparece <em>connected</em> y la frecuencia a la que debe sintonizar.</p>
<img src="/seguimiento-satelites-gpredict/GpredictConnector-connected.png" class="" width="300" title="SDR# - GpredictConnector connected">


<h3 id="SDR-1"><a href="#SDR-1" class="headerlink" title="SDR++"></a>SDR++</h3><p>En el caso de SDR++ ya viene incluido un módulo para poder conectar Gpredict. Lo único que debemos hacer es hacer clic en <em>“Start”</em> en el módulo <strong>Rigctl Server</strong> para ponerlo a la escucha.</p>
<img src="/seguimiento-satelites-gpredict/sdrpp-listening.png" class="" width="300" title="SDR++ - Rigctl listening">

<p>Una vez conectado veremos que aparece <em>Connected</em>.</p>
<img src="/seguimiento-satelites-gpredict/sdrpp-connected.png" class="" width="300" title="SDR++ - Rigctl connected">
]]></content>
      <tags>
        <tag>Satélites</tag>
        <tag>Tracking</tag>
        <tag>Gpredict</tag>
      </tags>
  </entry>
</search>
